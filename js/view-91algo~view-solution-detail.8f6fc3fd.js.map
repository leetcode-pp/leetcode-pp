{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.regexp.to-string.js","webpack:///./src/apis/91.js","webpack:///./node_modules/core-js/modules/es.string.iterator.js","webpack:///./node_modules/core-js/modules/es.symbol.iterator.js","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./node_modules/core-js/modules/web.dom-collections.iterator.js","webpack:///./node_modules/core-js/modules/es.symbol.description.js","webpack:///./src/views/91/students-talk.js"],"names":["redefine","anObject","fails","flags","TO_STRING","RegExpPrototype","RegExp","prototype","nativeToString","NOT_GENERIC","call","source","INCORRECT_NAME","name","R","this","p","String","rf","f","undefined","unsafe","getIntroLecture","request","url","getDailyProblem","timestamp","getDailyProblemSolution","day","getBasicLecture","getTopicLecture","getAdvanceLecture","getLectureDetails","id","getMySolutions","charAt","InternalStateModule","defineIterator","STRING_ITERATOR","setInternalState","set","getInternalState","getterFor","iterated","type","string","index","point","state","length","value","done","defineWellKnownSymbol","$","$map","map","arrayMethodHasSpeciesSupport","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","target","proto","forced","callbackfn","arguments","global","DOMIterables","ArrayIteratorMethods","createNonEnumerableProperty","wellKnownSymbol","ITERATOR","TO_STRING_TAG","ArrayValues","values","COLLECTION_NAME","Collection","CollectionPrototype","error","METHOD_NAME","DESCRIPTORS","has","isObject","defineProperty","copyConstructorProperties","NativeSymbol","Symbol","description","EmptyStringDescriptionStore","SymbolWrapper","result","symbolPrototype","constructor","symbolToString","toString","native","regexp","configurable","get","symbol","valueOf","desc","slice","replace","module","exports","title","tags","avatar","body"],"mappings":"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","file":"js/view-91algo~view-solution-detail.8f6fc3fd.js","sourcesContent":["'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","import request from './request'\n\nexport function getIntroLecture() {\n  return request({\n    url: '/api/v1/lectures/intro'\n  })\n}\n\nexport function getDailyProblem(timestamp) {\n  return request({\n    url: `/api/v1/daily-problem?date=${timestamp || ''}`\n  })\n}\n\nexport function getDailyProblemSolution(day) {\n  return request({\n    url: `/api/v1/daily-problem/solution?day=${day}`\n  })\n}\n\nexport function getBasicLecture() {\n  return request({\n    url: '/api/v1/lectures/basic'\n  })\n}\n\nexport function getTopicLecture() {\n  return request({\n    url: '/api/v1/lectures/topic'\n  })\n}\n\nexport function getAdvanceLecture() {\n  return request({\n    url: '/api/v1/lectures/advance'\n  })\n}\n\nexport function getLectureDetails(id) {\n  return request({\n    url: `/api/v1/lectures/${id}`\n  })\n}\n\nexport function getMySolutions() {\n  return request({\n    url: '/api/v1/my/solutions'\n  })\n}\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","// `Symbol.prototype.description` getter\n// https://tc39.github.io/ecma262/#sec-symbol.prototype.description\n'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar has = require('../internals/has');\nvar isObject = require('../internals/is-object');\nvar defineProperty = require('../internals/object-define-property').f;\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar NativeSymbol = global.Symbol;\n\nif (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||\n  // Safari 12 bug\n  NativeSymbol().description !== undefined\n)) {\n  var EmptyStringDescriptionStore = {};\n  // wrap Symbol constructor for correct work with undefined description\n  var SymbolWrapper = function Symbol() {\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var result = this instanceof SymbolWrapper\n      ? new NativeSymbol(description)\n      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n      : description === undefined ? NativeSymbol() : NativeSymbol(description);\n    if (description === '') EmptyStringDescriptionStore[result] = true;\n    return result;\n  };\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n  symbolPrototype.constructor = SymbolWrapper;\n\n  var symbolToString = symbolPrototype.toString;\n  var native = String(NativeSymbol('test')) == 'Symbol(test)';\n  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n  defineProperty(symbolPrototype, 'description', {\n    configurable: true,\n    get: function description() {\n      var symbol = isObject(this) ? this.valueOf() : this;\n      var string = symbolToString.call(symbol);\n      if (has(EmptyStringDescriptionStore, symbol)) return '';\n      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');\n      return desc === '' ? undefined : desc;\n    }\n  });\n\n  $({ global: true, forced: true }, {\n    Symbol: SymbolWrapper\n  });\n}\n","module.exports = [\n  {\n    id: '1',\n    title: 'kieda-tamashi',\n    tags: ['美团', '携程', '字节', '硕士', '后端'],\n    description: '无ACM经验，今年2月底开始刷Leetcode准备面试。',\n    avatar:\n      'https://tva1.sinaimg.cn/large/008i3skNly1gq8r3su6wqj30og0o879n.jpg',\n    body: `\n- 时间：2021-05-05\n- 被采访人：kieda-tamashi\n\n# 无ACM经验，今年2月底开始刷Leetcode准备面试。\n\n\n<img src=\"https://tva1.sinaimg.cn/large/008i3skNly1gq8q986d1pj30u0140773.jpg\" width=\"400\">\n\nQ: 你是什么时候开始接触数据结构与算法（以下简称算法）的？\n  \nA:现在水硕应届。课程的话，大二学数据结构，大三学算法。无ACM经验，今年2月底开始刷Leetcode准备面试。\n\nQ: 你是什么时候接触 91 天学算法（以下简称 91 天）的？从什么途径得知的？\n\nA:今年2月底，好像是搜索啥搜到的，看了讲义感觉不错。\n\nQ: 91 天有给你带来了什么样的变化么？\n\nA:至少看到题有感觉了，虽然找工作很晚没进AT，但至少没失业\n\nQ: 学习算法过程中有“顿悟”的时刻么？\n\nA: 二分，边界弄得很清楚了。\n\nQ: 你比较擅长的算法是什么？可以给大家简单分享一下么？\n\nA:没什么擅长的，但比较喜欢做没有递归、stack相关的题目，往往不那么抽象，可以画图。\n\nQ: 有没有什么想和刚入坑算法的同学分享的？\n\nA: 早点开始，坚持每日一题，就算是抄的。\n\nQ: 相对而言，你觉得 91 天哪里做的还不够好？应该如何改进？\n\nA: 我觉得Github打卡有点太不好使了，也不怎么push和有可视激励，leetcode打卡还有积分显示，成长感明显，这边啥都没。\n\nQ: 愿意把 91 天分享给你的朋友么？\n\nA: 已经分享。 \n\n\n\n他的 B 站账号是： https://space.bilibili.com/1836395 ，感兴趣的小伙伴可以关注一波啦~\n      `\n  },\n  {\n    id: '2',\n    description: '一个很可爱，元气满满的转码少女~',\n    tags: ['上岸中', '转码'],\n    title: '易潇',\n    avatar:\n      'https://tva1.sinaimg.cn/large/008i3skNly1gq9qpzrs99j30u00u4q4o.jpg',\n    body: `\n- 时间：2021-05-07\n- 被采访人：易潇\n    \n# 努力上岸的元气少女\n\n力扣加加，一个努力做西湖区最好的算法题解的团队。**91 天学算法**是力扣加加举办的一个算法训练活动，通过良好的学习计划 和 91 天的集中学习，帮助大家摆脱困境，征服算法。\n\n现在 《91 天学算法》已经举办了四期了，[第四期](https://mp.weixin.qq.com/s?__biz=MzI4MzUxNjI3OA==&mid=2247488668&idx=1&sn=001d53b788fb21280f9e45cadb7b4fae&chksm=eb88d885dcff5193f17725eb4b6b56cbbe406d8426bdc0dd5512253e2a0ef525358f94d4ab5a&token=2115509684&lang=zh_CN#rd \"91 天学算法第四期\")的活动时间是 **2021-05-10 到 2021-08-08**。\n\n每一期都有很多优秀学员，我想将这些人的学习经验分享给大家，帮助大家少走弯路。由于我开辟了这个 **91 天学算法优秀学员专访** 活动。\n\n这次，我们邀请到了远在美国的转码少女 - 易潇，一个元气满满的活力女孩。来看看她是如何学习的吧！\n\n<img src=\"https://tva1.sinaimg.cn/large/008i3skNly1gq9qojha3ij30u00u077t.jpg\" width=\"400\">\n\n## 采访\n\nQ: 你是什么时候开始接触数据结构与算法（以下简称算法）的？\n\nA: 从很久之前就听说过数据结果与算法，但正式接触是打算转码的时候开始的。\n\nQ: 你是什么时候接触 91 天学算法（以下简称 91 天）的？从什么途径得知的？\n\nA: 我是从第二期就开始接触91的，大概是关注公众号的时候关注到的。\n\nQ: 91 天有给你带来了什么样的变化么？\n\nA: 91让我从觉得用哈希表O(N)写 two sum很惊奇到了现在可以迷迷糊糊的状态下手写完堆（狗头\n\n最近因为刷了91，在做几个公司笔试初试(online coding challenge)的时候**感觉很简单**，也对自己的即将到来的面试更加有自信了~\n\nQ: 学习算法过程中有“顿悟”的时刻么？\n\nA: 经常顿悟 -- **顿悟源自于重复和每次重复带来的更深层次的理解。**\n\nQ: 你比较擅长的算法是什么？可以给大家简单分享一下么？\n\nA: 比较擅长的算法是看小漾怎么写的，然后默默的取长补短（就是都抄一遍的意思）\n\nQ: 有没有什么想和刚入坑算法的同学分享的？\n\nA: 我觉得刚入坑的同学们一定要学会处理自己的 “迷茫” 以及这种情绪带来的 “我不想做，这太难了”。我觉得在学习的过程中，只要能在自己感到迷茫的时候坚持再坚持，总会有那么一个 “顿悟”的时刻，然后就会觉得**自己的坚持是值得的**。\n我在正式学习编程之前的两三年里，也经常想过转码，但每次都会因为 “选什么语言” 或者 “初始化环境设定” 太难了等这种原因放弃。**现在其实回头看，这些问题其实都很简单。**\n\nQ: 相对而言，你觉得 91 天哪里做的还不够好？应该如何改进？\n\nA:我希望 91 有更多的个人答题跟踪和一起打卡的人的榜单，这样大家可以相互鼓（shi）励（ya）\n\nQ: 愿意把 91 天分享给你的朋友么？\n\nA:当然愿意啦！我觉得新手入门的时候最难的就是选择 “学什么” ， 而  91 恰好解决了这个问题。加入了 91 之后，只要根据  91 已经制定好的计划每天努力就可以了。而且问题是循序渐进的，对新手非常友好~ 再加上有这么多同学和超级棒的讲师们一起，我觉得 91 是最棒的刷题计划啦！\n \n\n\n## lucifer 总结\n\n学习东西是需要循序渐进的。在这个循序渐进的路上会一次次地“顿悟”。如果你有一个良好的学习习惯和学习计划，那么我相信你效率一定很高，那么答案你理想的高度也是时间的问题罢了。而如果你缺乏这样的学习习惯，不知道怎么去学习算法，可以试试 91 天学算法哦，活动介绍在文末的链接中，也可以直接在公众号力扣加加中回复 91 获取。\n`\n  },\n  {\n    id: '3',\n    description: '擅长图解的小哥哥',\n    tags: ['明星学员', '图解算法'],\n    title: '蘑菇沏茶',\n    avatar:\n      'https://tva1.sinaimg.cn/large/008i3skNly1gqcaej3g4bj30oi0okwjv.jpg',\n    body: `\n- 时间：2021-05-09\n- 被采访人：蘑菇沏茶\n    \n# 擅长图解的小哥哥\n\n## lucifer 序\n\n蘑菇沏茶在群里很活跃，也经常在仓库中看到他的打卡，他的题解都很认真，质量很高，也入选了很多次的精选题解，这样慢慢就对他有了印象。 后来我邀请他给我投稿，内容非常不错，大家可以看下，感受一下作者的算法能力和文笔。\n\n[图解数据结构](https://mp.weixin.qq.com/s/IdzUT8QvaWNSBca944FR0g)\n\n他本人学习算法时间不算长，也经历了很多人经历过的开始阶段，因此他的经历对很多人来说，还是非常有参考价值的。\n\n## 正文\n\n![](https://tva1.sinaimg.cn/large/008i3skNly1gqcatezvadj30hs0hsq6m.jpg)\n\nQ: 你是什么时候开始接触数据结构与算法（以下简称算法）的？\n\nA: 最开始接触算法的话，是大二的时候。那时候只是把它当做一门课程，抱着及格万岁的心态，并没有觉得有多重要，实际上在日常开发中，也没有使用到算法相关，也就更别提意识到算法的一个重要性了。\n\nQ: 你是什么时候接触 91 天学算法（以下简称 91 天）的？从什么途径得知的？\n\nA: 接触到91天，还要从找实习说起，因为研究生期间主要是做NLP的，当时是在 **女朋友** 的催促下，随便找了一份算法的实习，实习之后发现和我想象中的差距非常大，也不是自己喜欢的。在某乎上看到许多大佬的求职之路，都提到了算法的重要性，也都提到leetcode，于是开始效仿大佬开始刷leetcode，但是刚开始的时候效率非常低，力扣有接近2000道题目，不知道从何刷起，非常迷茫，说来也巧，在某一天阅读社区题解的时候，发现了西法老师的一篇题解，这一看，简直不要太清晰明了，代码简洁，思路清晰，立马就悟了，后面关注了西法老师的“力扣加加”公众号，从里面得知了91天这一活动，当时是第二期。加入的时候，群里已经有200人左右了，后面一直有人加入，慢慢到了500人。在西法老师的系统讲解和整体氛围下，也慢慢开始喜欢上了算法，在刷算法的过程中，也是意识到算法的重要性，在这里必须感谢西法老师，开发并不只是简单地crud，比如在搜索的时候，我们该选取什么样的数据结构，又要以一个什么样的方法去进行搜索，别看两个算法在同一个例子中时间相差不多，但是**一旦数据范围变大，一个好的算法和数据结构对时间的提升是非常巨大的。**\n\nQ: 91 天有给你带来了什么样的变化么？\n\nA: 91天学算法给我带来的变化，首先就是对算法有了系统的认识，以前在课本上只学习了动态规划、贪心、递归、分治等，而且老师也只是简单讲解，没有深入，西法给我展示了算法的魅力。然后就是，我跟了91天两期，从第一期对算法有了系统认识，到第二期有了深一层次的认识，如果说刚开始的时候是照葫芦画瓢，那现在就是开始在照瓢画葫芦了，对一道题，除了把它解出来之外，会主动深入思考这里面包含的知识点，也会和其他的解法进行比较，去理解别人的做题时的思路，而不再是看懂。最后就是说一个最明显的提升，**跟完一期多的时候，参加了一些大厂的笔试，虽然题目没有原题，但考察的内容基本都有在91天中提到，所以学完91天，算是拿到了大厂的入场券**。以后只要91天还办下去，我就会一直跟下去，在这里，因为，现在已经不只是为了找到一份好的实习或者工作而去学算法，是真的已经喜欢上了算法，喜欢上解出一道题时获得的喜悦，在91天中，有许多和我这样爱好算法的同学，大家在刷题的路上一期成长，真的是一件非常快乐的事情。有一段时间无比期待每日一题的到来，**十二点准时侯在电脑前。**\n\nQ: 学习算法过程中有“顿悟”的时刻么？\n\nA: 要说顿悟的话，首先有一个就是比较搞笑的，刚开始刷算法，把提交后的运行时间当做评判标准，觉得时间快的就是好算法，后来西法的一句话让我印象非常深刻，就是衡量一个算法的好坏的标准是时间复杂度与空间复杂度，因为每次提交的时候，可能会由于网络波动、测试案例等因素导致每次时间不一样。再说其他的，比如做二分类题目的时候，除了对输入进行二分，还可以对结果进行二分，再比如再做树专题的时候，搜索无非就DFS和BFS，然后再决定是否带信息进行遍历，这些在西法的力扣加加公众号的总结中都可以看到；还有一个题没有思路的时候，可以根据题目给的关键字和数据范围去。其实顿悟这个词本来就很玄，我更愿意把顿悟理解为量变引起质变这一过程，题目做多了，很多方法自然而然就悟了，在做动态规划的时候，听到西法的一句 **“我做题的时候都是只考虑前一个状态和现在的状态”，原话记不太清了，差不多就是这个意思，看到这句话，就突然会悟了，这不就是满足动态规划的最优子结构性质嘛，这种时刻还有一些，基本上大多是已经有了一个差不多的理解，然后听到一句话或者看到一句话，然后就明白了。**\n\nQ: 你比较擅长的算法是什么？可以给大家简单分享一下么？\n\nA: 比较擅长的话，应该还没到擅长的地步吧，在西法老师面前不敢造次，但是**对常用的算法还算熟悉了**。比如二分算法，要么是对输入进行二分，要么是对结果进行二分，然后对二维数组进行二分的话，一般都是从斜对角线的两个顶点作为起始端点，还有一类题目就是使用二分保持数据的有序性；比如单调栈或者单调队列，存储的不仅仅可以是元素，也可以是元素对应的索引；对于回溯类题目，最重要的就是确定剪枝条件了，‘’毕竟只要剪枝剪得好，完美AC少不了‘’，主要用来解决一些排列组合问题，比如题目明确要求需要返回所有的可能；对于搜索类，常见的就是DFS和BFS，最重要的一点是不存在环路，或者有提前终止的条件，这类题目一般都是树或者图，当然有的时候，不一定会告诉你这是一棵树或者一张图，这种时候就需要自己体会题意了；对于存在环路的问题，一般会用到并查集，并查集要注意的只有两点，一个是按秩合并，一个是路径压缩；对于双串类问题，十有八九可以使用动态规划去求解；对于求解topK类问题，使用堆，或者在每个时刻，必须取最小或者最大，而这个最小最大在每个时刻会发生改变，那么也可以使用堆。\n\nQ: 有没有什么想和刚入坑算法的同学分享的？\n\nA: 无它，唯手熟尔。对于学习算法，没有太多的技巧，做得多了，见的多了，自然而然就会了。我刚开始做题的时候会画图帮助理解，但是现在很少画了，**因为熟了，图在心中。**\n\nQ: 相对而言，你觉得 91 天哪里做的还不够好？应该如何改进？\n\nA: 91天是一个很好地活动，物超所值，一杯喜茶就能得到大厂的入门卷，爱了爱了啊。就对于我个人而言，我希望看到一些**算法在实际场景的应用。**\n\n> 西法收到了 ^_^\n\nQ: 愿意把 91 天分享给你的朋友么？\n\nA: 当然愿意，在第三期的时候，拉动我的室友加入到91天学算法活动中。\n    \n    \n    `\n  }\n]\n"],"sourceRoot":""}