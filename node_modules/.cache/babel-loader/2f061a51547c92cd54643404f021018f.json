{"remainingRequest":"/Users/luxiaopeng/github/leetcode-pp/node_modules/thread-loader/dist/cjs.js!/Users/luxiaopeng/github/leetcode-pp/node_modules/babel-loader/lib/index.js!/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luxiaopeng/github/leetcode-pp/src/views/Markdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luxiaopeng/github/leetcode-pp/src/views/Markdown.vue","mtime":1648364288930},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js","mtime":1582876651155},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/thread-loader/dist/cjs.js","mtime":1582876651885},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/babel-loader/lib/index.js","mtime":1614915260754},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js","mtime":1582876651155},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js","mtime":1631347730543}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9sdXhpYW9wZW5nL2dpdGh1Yi9sZWV0Y29kZS1wcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBzZXRTdG9yYWdlIH0gZnJvbSAnLi4vdXRpbHMvc3RvcmFnZSc7Cgp2YXIgZ2V0VVJMID0gZnVuY3Rpb24gZ2V0VVJMKF9yZWYpIHsKICB2YXIgb3duZXIgPSBfcmVmLm93bmVyLAogICAgICByZXBvID0gX3JlZi5yZXBvLAogICAgICBwYXRoID0gX3JlZi5wYXRoOwogIHJldHVybiAiaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS9yZXBvcy8iLmNvbmNhdChvd25lciwgIi8iKS5jb25jYXQocmVwbywgIi9jb250ZW50cy8iKS5jb25jYXQocGF0aCk7Cn07CgpmdW5jdGlvbiBnZXRFWFQoZmlsZW5hbWUpIHsKICBpZiAoIWZpbGVuYW1lKSByZXR1cm4gJyc7CiAgcmV0dXJuIGZpbGVuYW1lLnNwbGl0KCcuJykucG9wKCkudG9Mb3dlckNhc2UoKTsKfQoKZnVuY3Rpb24gZ2V0T3duZXJBbmRSZXBvKHVybCkgewogIGlmICghdXJsKSByZXR1cm4ge307CiAgdmFyIHBhcnRzID0gdXJsLnNwbGl0KCcvJyk7CiAgaWYgKCFwYXJ0cyB8fCBwYXJ0c1syXSAhPT0gJ2dpdGh1Yi5jb20nKSB0aHJvdyBuZXcgRXJyb3IoJ05PX0dJVEhVQicsICfnm67liY3ku4XmlK/mjIEgZ2l0aHViIOWcsOWdgCcpOwogIGlmICghcGFydHNbM10gfHwgIXBhcnRzWzRdKSB0aHJvdyBuZXcgRXJyb3IoJ1VSTF9JTlZBTElEJywgJ+mTvuaOpemdnuazle+8jOWQiOazleeahOmTvuaOpeekuuS+i++8mmh0dHBzOi8vZ2l0aHViLmNvbS9hemwzOTc5ODU4NTYvbGVldGNvZGUvYmxvYi9tYXN0ZXIvdGhpbmtpbmdzL2JpbmFyeS1zZWFyY2gtMS5tZCcpOwogIHJldHVybiB7CiAgICBvd25lcjogcGFydHNbM10sCiAgICByZXBvOiBwYXJ0c1s0XSwKICAgIHBhdGg6IHBhcnRzWzddID8gcGFydHMuc2xpY2UoNykuam9pbignLycpIDogJy9SRUFETUUubWQnCiAgfTsKfQoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBrZXl3b3JkOiAnJywKICAgICAgcmF3OiAnJwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdvVG9SZW5kZXJSYXc6IGZ1bmN0aW9uIGdvVG9SZW5kZXJSYXcoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIHNldFN0b3JhZ2UoJ2dpdGh1Yi1yZWFkZXInLCBfdGhpcy5yYXcpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfdGhpcy4kcm91dGVyLnB1c2goJy9zb2x1dGlvbkRldGFpbD90eXBlPTUnKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGhhbmRsZUlucHV0Q2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVJbnB1dENoYW5nZShlKSB7CiAgICAgIHRoaXMua2V5d29yZCA9IGUudGFyZ2V0LnZhbHVlOwogICAgfSwKICAgIGhhbmRsZVJhd0lucHV0Q2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVSYXdJbnB1dENoYW5nZShlKSB7CiAgICAgIHRoaXMucmF3ID0gZS50YXJnZXQudmFsdWU7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgZGVzdDogZnVuY3Rpb24gZGVzdCgpIHsKICAgICAgdmFyIF9nZXRPd25lckFuZFJlcG8gPSBnZXRPd25lckFuZFJlcG8odGhpcy5rZXl3b3JkKSwKICAgICAgICAgIG93bmVyID0gX2dldE93bmVyQW5kUmVwby5vd25lciwKICAgICAgICAgIHJlcG8gPSBfZ2V0T3duZXJBbmRSZXBvLnJlcG8sCiAgICAgICAgICBwYXRoID0gX2dldE93bmVyQW5kUmVwby5wYXRoOwoKICAgICAgaWYgKGdldEVYVChwYXRoKSAhPT0gJ21kJykgcmV0dXJuICcnOwogICAgICByZXR1cm4gZ2V0VVJMKHsKICAgICAgICBvd25lcjogb3duZXIsCiAgICAgICAgcmVwbzogcmVwbywKICAgICAgICBwYXRoOiBwYXRoCiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Markdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA,SAAA,UAAA,QAAA,kBAAA;;AACA,IAAA,MAAA,GAAA,SAAA,MAAA;AAAA,MAAA,KAAA,QAAA,KAAA;AAAA,MAAA,IAAA,QAAA,IAAA;AAAA,MAAA,IAAA,QAAA,IAAA;AAAA,gDACA,KADA,cACA,IADA,uBACA,IADA;AAAA,CAAA;;AAEA,SAAA,MAAA,CAAA,QAAA,EAAA;AACA,MAAA,CAAA,QAAA,EAAA,OAAA,EAAA;AACA,SAAA,QAAA,CACA,KADA,CACA,GADA,EAEA,GAFA,GAGA,WAHA,EAAA;AAIA;;AACA,SAAA,eAAA,CAAA,GAAA,EAAA;AACA,MAAA,CAAA,GAAA,EAAA,OAAA,EAAA;AACA,MAAA,KAAA,GAAA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,MAAA,CAAA,KAAA,IAAA,KAAA,CAAA,CAAA,CAAA,KAAA,YAAA,EACA,MAAA,IAAA,KAAA,CAAA,WAAA,EAAA,iBAAA,CAAA;AACA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EACA,MAAA,IAAA,KAAA,CACA,aADA,EAEA,gGAFA,CAAA;AAIA,SAAA;AACA,IAAA,KAAA,EAAA,KAAA,CAAA,CAAA,CADA;AAEA,IAAA,IAAA,EAAA,KAAA,CAAA,CAAA,CAFA;AAGA,IAAA,IAAA,EAAA,KAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAAA,KAAA,CAAA,CAAA,EAAA,IAAA,CAAA,GAAA,CAAA,GAAA;AAHA,GAAA;AAKA;;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,GAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,UAAA,CAAA,eAAA,EAAA,KAAA,CAAA,GAAA,CADA;;AAAA;AAEA,gBAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,wBAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,KAJA;AAKA,IAAA,iBALA,6BAKA,CALA,EAKA;AACA,WAAA,OAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KAAA;AACA,KAPA;AAQA,IAAA,oBARA,gCAQA,CARA,EAQA;AACA,WAAA,GAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KAAA;AACA;AAVA,GAPA;AAmBA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,6BAAA,eAAA,CAAA,KAAA,OAAA,CAAA;AAAA,UAAA,KAAA,oBAAA,KAAA;AAAA,UAAA,IAAA,oBAAA,IAAA;AAAA,UAAA,IAAA,oBAAA,IAAA;;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,KAAA,IAAA,EAAA,OAAA,EAAA;AACA,aAAA,MAAA,CAAA;AAAA,QAAA,KAAA,EAAA,KAAA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA,CAAA;AACA;AALA;AAnBA,CAAA","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"info\">\n      使用方法：输入 Github 的 URL 地址，点击前往阅读即可。<b\n        >需要注意的是地址需要是使用 MD 格式编写的哦 ~</b\n      >\n\n      <div>\n        比如：\n        <span>\n          https://github.com/azl397985856/leetcode/blob/master/thinkings/binary-search-1.md\n        </span>\n        或者\n        <span>\n          https://github.com/azl397985856/leetcode\n        </span>\n      </div>\n    </div>\n    <a-input\n      style=\"width: auto; flex: 1;\"\n      :value=\"keyword\"\n      @input=\"handleInputChange\"\n      type=\"text\"\n      placeholder=\"请输入 Markdown 的 Github 地址\"\n    />\n\n    <a-button\n      :disabled=\"!dest\"\n      type=\"link\"\n      :href=\"`/solutionDetail?type=1&url=${dest}`\"\n      target=\"_blank\"\n      >前往阅读</a-button\n    >\n\n    <div style=\"margin: 10px 0\">没有 URL ？？ 那直接输入 markdown 源码吧！</div>\n\n    <a-input\n      style=\"width: 800px; flex: 1;\"\n      :value=\"raw\"\n      @input=\"handleRawInputChange\"\n      type=\"textarea\"\n      rows=\"10\"\n      placeholder=\"请输入 Markdown 原文\"\n    />\n    <a-button\n      :disabled=\"!raw\"\n      type=\"link\"\n      @click=\"goToRenderRaw\"\n      target=\"_blank\"\n      >前往阅读</a-button\n    >\n\n    <div class=\"footer\">\n      大家可以根据自己的喜好挑选自己的主题，目前内置了几种，后续考虑增加更多主题~\n    </div>\n  </div>\n</template>\n\n<script>\nimport { setStorage } from '../utils/storage'\nconst getURL = ({ owner, repo, path }) =>\n  `https://api.github.com/repos/${owner}/${repo}/contents/${path}`\nfunction getEXT(filename) {\n  if (!filename) return ''\n  return filename\n    .split('.')\n    .pop()\n    .toLowerCase()\n}\nfunction getOwnerAndRepo(url) {\n  if (!url) return {}\n  const parts = url.split('/')\n  if (!parts || parts[2] !== 'github.com')\n    throw new Error('NO_GITHUB', '目前仅支持 github 地址')\n  if (!parts[3] || !parts[4])\n    throw new Error(\n      'URL_INVALID',\n      '链接非法，合法的链接示例：https://github.com/azl397985856/leetcode/blob/master/thinkings/binary-search-1.md'\n    )\n  return {\n    owner: parts[3],\n    repo: parts[4],\n    path: parts[7] ? parts.slice(7).join('/') : '/README.md'\n  }\n}\nexport default {\n  data() {\n    return {\n      keyword: '',\n      raw: ''\n    }\n  },\n  methods: {\n    async goToRenderRaw() {\n      await setStorage('github-reader', this.raw)\n      this.$router.push('/solutionDetail?type=5')\n    },\n    handleInputChange(e) {\n      this.keyword = e.target.value\n    },\n    handleRawInputChange(e) {\n      this.raw = e.target.value\n    }\n  },\n  computed: {\n    dest() {\n      const { owner, repo, path } = getOwnerAndRepo(this.keyword)\n      if (getEXT(path) !== 'md') return ''\n      return getURL({ owner, repo, path })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.info {\n  margin: 0 0 50px 0;\n}\n.footer {\n  margin: 50px 0;\n}\n</style>\n"],"sourceRoot":"src/views"}]}