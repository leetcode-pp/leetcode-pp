{"remainingRequest":"/Users/luxiaopeng/github/leetcode-pp/node_modules/babel-loader/lib/index.js!/Users/luxiaopeng/github/leetcode-pp/node_modules/eslint-loader/index.js??ref--13-0!/Users/luxiaopeng/github/leetcode-pp/src/apis/request.js","dependencies":[{"path":"/Users/luxiaopeng/github/leetcode-pp/src/apis/request.js","mtime":1648364288714},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js","mtime":1582876651155},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/babel-loader/lib/index.js","mtime":1614915260754},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/eslint-loader/index.js","mtime":1584094539526}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJhbnQtZGVzaWduLXZ1ZS9lcy9tZXNzYWdlL3N0eWxlIjsKaW1wb3J0IF9tZXNzYWdlIGZyb20gImFudC1kZXNpZ24tdnVlL2VzL21lc3NhZ2UiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvbHV4aWFvcGVuZy9naXRodWIvbGVldGNvZGUtcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgeyBob3N0bmFtZSB9IGZyb20gJ0AvY29uZmlnL2luZGV4JzsgLy8gYXN5bmMgZnVuY3Rpb24gZ2V0QXZhbGlhYmxlSG9zdChpID0gMCkgewovLyAgIGlmIChpIDwgaG9zdG5hbWVQb29sLmxlbmd0aCkgewovLyAgICAgcmV0dXJuIGZldGNoKGhvc3RuYW1lUG9vbFtpXSkKLy8gICAgICAgLnRoZW4oKCkgPT4gaG9zdG5hbWVQb29sW2ldKQovLyAgICAgICAuY2F0Y2goZXJyID0+IHsKLy8gICAgICAgICBpZiAoZXJyLm1lc3NhZ2UgPT09ICdOZXR3b3JrIEVycm9yJykgewovLyAgICAgICAgICAgcmV0dXJuIGdldEF2YWxpYWJsZUhvc3QoaSArIDEpCi8vICAgICAgICAgfQovLyAgICAgICB9KQovLyAgIH0KLy8gICByZXR1cm4gLTEKLy8gfQoKdmFyIGhvc3QgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nID8gImh0dHBzOi8vIi5jb25jYXQoaG9zdG5hbWUpIDogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCc7CnZhciBwcm9taXNlUG9vbCA9IHt9OwpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoKSB7CiAgdmFyIF90b2tlbjsKCiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9OwogIHZhciB1cmwgPSAiIi5jb25jYXQoaG9zdCkuY29uY2F0KG9wdGlvbnMudXJsKTsKICB2YXIgY2FuID0gIW9wdGlvbnMubWV0aG9kIHx8IG9wdGlvbnMubWV0aG9kLnRvVXBwZXJDYXNlKCkgPT09ICdHRVQnOwogIHZhciBrID0gJyc7CgogIGlmIChjYW4pIHsKICAgIGsgPSAiIi5jb25jYXQodXJsLCAiLSIpLmNvbmNhdChKU09OLnN0cmluZ2lmeShvcHRpb25zLnBhcmFtcykpOwoKICAgIGlmIChrIGluIHByb21pc2VQb29sKSB7CiAgICAgIHJldHVybiBwcm9taXNlUG9vbFtrXTsKICAgIH0KICB9CgogIHZhciBvcmlnaW5hbEhlYWRlcnMgPSBvcHRpb25zLmhlYWRlcnMgfHwge307CiAgdmFyIHRva2VuID0gbnVsbDsKCiAgdHJ5IHsKICAgIHRva2VuID0gSlNPTi5wYXJzZSh3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJykpOwogIH0gY2F0Y2ggKGVycikgewogICAgY29uc29sZS5sb2coZXJyKTsKICB9CgogIGlmICh0b2tlbiAmJiBuZXcgRGF0ZSgpLmdldFRpbWUoKSA+PSB0b2tlbi5leHBpcmVBdCkgewogICAgd2luZG93LmxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCd0b2tlbicpOwogIH0KCiAgdmFyIHAgPSBheGlvcyhfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG9wdGlvbnMpLCB7fSwgewogICAgaGVhZGVyczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBvcmlnaW5hbEhlYWRlcnMpLCB7fSwgewogICAgICB0b2tlbjogKChfdG9rZW4gPSB0b2tlbikgPT09IG51bGwgfHwgX3Rva2VuID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdG9rZW4udmFsdWUpIHx8ICdlbXB0eScKICAgIH0pLAogICAgd2l0aENyZWRlbnRpYWxzOiB0cnVlLAogICAgdXJsOiB1cmwKICB9KSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICByZXR1cm4gcmVzLmRhdGE7CiAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICBpZiAocmVzLnN1Y2Nlc3MpIHJldHVybiByZXMuZGF0YTsKICAgIHRocm93IHJlczsKICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICBfbWVzc2FnZS5lcnJvcihlcnIubWVzc2FnZSB8fCAn57O757uf5byA5bCP5beuficpOwoKICAgIHRocm93IGVycjsKICB9KTsKCiAgaWYgKGNhbikgewogICAgcHJvbWlzZVBvb2xba10gPSBwOwogIH0KCiAgcmV0dXJuIHA7Cn0="},{"version":3,"sources":["/Users/luxiaopeng/github/leetcode-pp/src/apis/request.js"],"names":["axios","hostname","host","process","env","NODE_ENV","promisePool","options","url","can","method","toUpperCase","k","JSON","stringify","params","originalHeaders","headers","token","parse","window","localStorage","getItem","err","console","log","Date","getTime","expireAt","removeItem","p","value","withCredentials","then","res","data","success","catch","error","message"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,IAAI,GACRC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,qBACeJ,QADf,IAEI,uBAHN;AAIA,IAAMK,WAAW,GAAG,EAApB;AACA,eAAe,YAAuB;AAAA;;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AACpC,MAAMC,GAAG,aAAMN,IAAN,SAAaK,OAAO,CAACC,GAArB,CAAT;AACA,MAAMC,GAAG,GAAG,CAACF,OAAO,CAACG,MAAT,IAAmBH,OAAO,CAACG,MAAR,CAAeC,WAAf,OAAiC,KAAhE;AACA,MAAIC,CAAC,GAAG,EAAR;;AACA,MAAIH,GAAJ,EAAS;AACPG,IAAAA,CAAC,aAAMJ,GAAN,cAAaK,IAAI,CAACC,SAAL,CAAeP,OAAO,CAACQ,MAAvB,CAAb,CAAD;;AACA,QAAIH,CAAC,IAAIN,WAAT,EAAsB;AACpB,aAAOA,WAAW,CAACM,CAAD,CAAlB;AACD;AACF;;AACD,MAAMI,eAAe,GAAGT,OAAO,CAACU,OAAR,IAAmB,EAA3C;AACA,MAAIC,KAAK,GAAG,IAAZ;;AACA,MAAI;AACFA,IAAAA,KAAK,GAAGL,IAAI,CAACM,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAX,CAAR;AACD,GAFD,CAEE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;;AAED,MAAIL,KAAK,IAAI,IAAIQ,IAAJ,GAAWC,OAAX,MAAwBT,KAAK,CAACU,QAA3C,EAAqD;AACnDR,IAAAA,MAAM,CAACC,YAAP,CAAoBQ,UAApB,CAA+B,OAA/B;AACD;;AAED,MAAMC,CAAC,GAAG9B,KAAK,iCACVO,OADU;AAEbU,IAAAA,OAAO,kCACFD,eADE;AAELE,MAAAA,KAAK,EAAE,WAAAA,KAAK,UAAL,wCAAOa,KAAP,KAAgB;AAFlB,MAFM;AAMbC,IAAAA,eAAe,EAAE,IANJ;AAObxB,IAAAA,GAAG,EAAHA;AAPa,KAAL,CASPyB,IATO,CASF,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAR;AAAA,GATD,EAUPF,IAVO,CAUF,UAAAC,GAAG,EAAI;AACX,QAAIA,GAAG,CAACE,OAAR,EAAiB,OAAOF,GAAG,CAACC,IAAX;AACjB,UAAMD,GAAN;AACD,GAbO,EAcPG,KAdO,CAcD,UAAAd,GAAG,EAAI;AACZ,aAAQe,KAAR,CAAcf,GAAG,CAACgB,OAAJ,IAAe,QAA7B;;AACA,UAAMhB,GAAN;AACD,GAjBO,CAAV;;AAkBA,MAAId,GAAJ,EAAS;AACPH,IAAAA,WAAW,CAACM,CAAD,CAAX,GAAiBkB,CAAjB;AACD;;AAED,SAAOA,CAAP;AACD","sourcesContent":["import { message } from 'ant-design-vue'\nimport axios from 'axios'\nimport { hostname } from '@/config/index'\n\n// async function getAvaliableHost(i = 0) {\n//   if (i < hostnamePool.length) {\n//     return fetch(hostnamePool[i])\n//       .then(() => hostnamePool[i])\n//       .catch(err => {\n//         if (err.message === 'Network Error') {\n//           return getAvaliableHost(i + 1)\n//         }\n//       })\n//   }\n//   return -1\n// }\n\nconst host =\n  process.env.NODE_ENV === 'production'\n    ? `https://${hostname}`\n    : 'http://localhost:3000'\nconst promisePool = {}\nexport default function(options = {}) {\n  const url = `${host}${options.url}`\n  const can = !options.method || options.method.toUpperCase() === 'GET'\n  let k = ''\n  if (can) {\n    k = `${url}-${JSON.stringify(options.params)}`\n    if (k in promisePool) {\n      return promisePool[k]\n    }\n  }\n  const originalHeaders = options.headers || {}\n  let token = null\n  try {\n    token = JSON.parse(window.localStorage.getItem('token'))\n  } catch (err) {\n    console.log(err)\n  }\n\n  if (token && new Date().getTime() >= token.expireAt) {\n    window.localStorage.removeItem('token')\n  }\n\n  const p = axios({\n    ...options,\n    headers: {\n      ...originalHeaders,\n      token: token?.value || 'empty'\n    },\n    withCredentials: true,\n    url\n  })\n    .then(res => res.data)\n    .then(res => {\n      if (res.success) return res.data\n      throw res\n    })\n    .catch(err => {\n      message.error(err.message || '系统开小差~')\n      throw err\n    })\n  if (can) {\n    promisePool[k] = p\n  }\n\n  return p\n}\n"]}]}