{"remainingRequest":"/Users/luxiaopeng/github/leetcode-pp/node_modules/babel-loader/lib/index.js!/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luxiaopeng/github/leetcode-pp/src/views/ProblemDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luxiaopeng/github/leetcode-pp/src/views/ProblemDetail.vue","mtime":1648364288931},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js","mtime":1582876651155},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/babel-loader/lib/index.js","mtime":1614915260754},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js","mtime":1582876651155},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js","mtime":1631347730543}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ProblemDetail.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div v-if=\"loading\" class=\"spinner-container\">\n      <a-spin size=\"large\"></a-spin>\n    </div>\n    <div v-if=\"!loading\" class=\"container\">\n      <div class=\"max-width-800\">\n        <a-alert\n          v-if=\"hasError\"\n          message=\"很抱歉，目前请求无法执行，请稍候再试。\"\n          type=\"error\"\n        />\n      </div>\n      <h1>{{ title }}</h1>\n      <p class=\"tags\">\n        <a-tag\n          v-for=\"(label, index) in labels\"\n          :key=\"label.id\"\n          :color=\"randomColor(index)\"\n          label.name\n          >{{ label.name }}</a-tag\n        >\n      </p>\n      <h2 class=\"subtitle\">题目详情</h2>\n      <div class=\"desc text-align-left\" v-html=\"desc\"></div>\n      <h2 class=\"subtitle\">题解</h2>\n      <div class=\"solution text-align-left\" v-html=\"solution\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getGithubContent } from '../apis/github'\nimport MarkdownIt from 'markdown-it'\nimport hljs from 'highlight.js'\nimport 'highlight.js/styles/github.css'\nconst md = new MarkdownIt()\nconst URL_REGEX = /(\\s+)(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/g\n/** \n  The above regex will match the following cases\n  http://www.foufos.gr\n  https://www.foufos.gr\n  http://foufos.gr\n  http://www.foufos.gr/kino\n  http://werer.gr\n  www.foufos.gr\n  www.mp3.com\n  www.t.co\n  http://t.co\n  http://www.t.co\n  https://www.t.co\n  www.aa.com\n  http://aa.com\n  http://www.aa.com\n  https://www.aa.com\n */\nconst ERROR_MSG_DISPLAY_DURATION = 5000\nconst COLORS = [\n  'pink',\n  'red',\n  'orange',\n  'green',\n  'cyan',\n  'blue',\n  'purple',\n  '#87d068'\n]\n\nfunction getSolution(comments) {\n  // 优先选择 lucifer 的，如果没有，选第一个好了。\n  const lucifer = comments.find(\n    comment => comment.user.login === 'azl397985856'\n  )\n  if (lucifer) return lucifer.body\n  return comments[0] ? comments[0].body : '暂无'\n}\nexport default {\n  data() {\n    return {\n      loading: true,\n      hasError: false,\n      title: '',\n      desc: '',\n      createDate: '',\n      issueUrl: '',\n      solution: '',\n      prettified: false,\n      labels: []\n    }\n  },\n  methods: {\n    randomColor(index) {\n      return COLORS[index % COLORS.length]\n    },\n    showError() {\n      this.hasError = true\n      setTimeout(() => {\n        this.hasError = false\n      }, ERROR_MSG_DISPLAY_DURATION)\n    },\n    async getProlem() {\n      try {\n        const res = await getGithubContent(\n          `https://api.github.com/repos/azl397985856/leetcode/issues/${this.$route.params.id}?githubClientId=e6dafd54b96fcef74c56&githubClientSecret=64ec9c15ee608c201f0b5f4b3fde881b07d2bc31`\n        )\n        this.loading = false\n        this.title = res.title\n        this.desc = md.render(this.addLinkMarkdown(res.body))\n        this.createDate = res.created_at\n        this.issueUrl = res.comments_url\n        this.labels = res.labels\n      } catch (error) {\n        console.log(error)\n        this.showError()\n        this.loading = false\n      }\n    },\n    addLinkMarkdown(content) {\n      return content.replace(URL_REGEX, '<$2>')\n    },\n    async getSolution() {\n      try {\n        const comments = await getGithubContent(this.issueUrl)\n        this.loading = false\n        this.solution = getSolution(comments)\n\n        // Markdown to HTML\n        this.solution = md.render(this.solution)\n      } catch (error) {\n        console.log(error)\n        this.showError()\n        this.loading = false\n      }\n    }\n  },\n  async mounted() {\n    await this.getProlem()\n    if (this.title) {\n      await this.getSolution()\n      hljs.configure({ useBR: false })\n      document.querySelectorAll('code').forEach(block => {\n        hljs.highlightBlock(block)\n      })\n      document.querySelectorAll('img').forEach(block => {\n        // block.style.maxWidth = '340px'\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n/deep/ p > code {\n  display: inline;\n}\nh2.subtitle {\n  margin-top: 50px;\n  margin-bottom: 30px;\n  font-size: 32px;\n  font-weight: bold;\n}\n.max-width-800 {\n  max-width: 800px;\n  margin: 30px auto;\n}\n.text-align-left {\n  text-align: left;\n}\n.container {\n  max-width: 1080px;\n  margin: 30px auto;\n}\n.desc,\n.solution {\n  max-width: 800px;\n  margin: 20px auto;\n}\npre {\n  white-space: pre-wrap;\n  word-wrap: break-word;\n}\n.spinner-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n.tags {\n  margin-bottom: 30px;\n}\n</style>\n"],"sourceRoot":"src/views"}]}