{"remainingRequest":"/Users/luxiaopeng/github/leetcode-pp/node_modules/babel-loader/lib/index.js!/Users/luxiaopeng/github/leetcode-pp/node_modules/eslint-loader/index.js??ref--13-0!/Users/luxiaopeng/github/leetcode-pp/src/utils/markdown-it-span.js","dependencies":[{"path":"/Users/luxiaopeng/github/leetcode-pp/src/utils/markdown-it-span.js","mtime":1648364288746},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js","mtime":1582876651155},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/babel-loader/lib/index.js","mtime":1614915260754},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/eslint-loader/index.js","mtime":1584094539526}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwoKZnVuY3Rpb24gc2x1Z2lmeShzLCBtZCkgewogIC8vIFVuaWNvZGUtZnJpZW5kbHkKICB2YXIgc3BhY2VSZWdleCA9IG5ldyBSZWdFeHAobWQudXRpbHMubGliLnVjbWljcm8uWi5zb3VyY2UsICdnJyk7CiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChzLnJlcGxhY2Uoc3BhY2VSZWdleCwgJycpKTsKfQoKZnVuY3Rpb24gbWFrZVJ1bGUobWQsIG9wdGlvbnMpIHsKICByZXR1cm4gZnVuY3Rpb24gYWRkSGVhZGluZ0FuY2hvcnMoc3RhdGUpIHsKICAgIC8vIEdvIHRvIGxlbmd0aC0yIGJlY2F1c2Ugd2UncmUgZ29pbmcgdG8gYmUgcGVla2luZyBhaGVhZC4KICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RhdGUudG9rZW5zLmxlbmd0aCAtIDE7IGkrKykgewogICAgICBpZiAoc3RhdGUudG9rZW5zW2ldLnR5cGUgIT09ICdoZWFkaW5nX29wZW4nIHx8IHN0YXRlLnRva2Vuc1tpICsgMV0udHlwZSAhPT0gJ2lubGluZScpIHsKICAgICAgICBjb250aW51ZTsKICAgICAgfQoKICAgICAgdmFyIGhlYWRpbmdJbmxpbmVUb2tlbiA9IHN0YXRlLnRva2Vuc1tpICsgMV07CgogICAgICBpZiAoIWhlYWRpbmdJbmxpbmVUb2tlbi5jb250ZW50KSB7CiAgICAgICAgY29udGludWU7CiAgICAgIH0KCiAgICAgIGlmIChvcHRpb25zLmFkZEhlYWRpbmdTcGFuKSB7CiAgICAgICAgdmFyIHNwYW5Ub2tlblByZSA9IG5ldyBzdGF0ZS5Ub2tlbignaHRtbF9pbmxpbmUnLCAnJywgMCk7CiAgICAgICAgc3BhblRva2VuUHJlLmNvbnRlbnQgPSAnPHNwYW4gY2xhc3M9InByZWZpeCI+PC9zcGFuPjxzcGFuIGNsYXNzPSJjb250ZW50Ij4nOwogICAgICAgIGhlYWRpbmdJbmxpbmVUb2tlbi5jaGlsZHJlbi51bnNoaWZ0KHNwYW5Ub2tlblByZSk7CiAgICAgICAgdmFyIHNwYW5Ub2tlblBvc3QgPSBuZXcgc3RhdGUuVG9rZW4oJ2h0bWxfaW5saW5lJywgJycsIDApOwogICAgICAgIHNwYW5Ub2tlblBvc3QuY29udGVudCA9ICc8L3NwYW4+PHNwYW4gY2xhc3M9InN1ZmZpeCI+PC9zcGFuPic7CiAgICAgICAgaGVhZGluZ0lubGluZVRva2VuLmNoaWxkcmVuLnB1c2goc3BhblRva2VuUG9zdCk7CiAgICAgIH0gLy8gQWR2YW5jZSBwYXN0IHRoZSBpbmxpbmUgYW5kIGhlYWRpbmdfY2xvc2UgdG9rZW5zLgoKCiAgICAgIGkgKz0gMjsKICAgIH0KICB9Owp9CgpleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKG1kLCBvcHRzKSB7CiAgdmFyIGRlZmF1bHRzID0gewogICAgYW5jaG9yQ2xhc3M6ICdtYXJrZG93bi1pdC1oZWFkaW5nc3BhbicsCiAgICBhZGRIZWFkaW5nU3BhbjogdHJ1ZSwKICAgIHNsdWdpZnk6IHNsdWdpZnkKICB9OwogIHZhciBvcHRpb25zID0gbWQudXRpbHMuYXNzaWduKGRlZmF1bHRzLCBvcHRzKTsKICBtZC5jb3JlLnJ1bGVyLnB1c2goJ2hlYWRpbmdfc3BhbicsIG1ha2VSdWxlKG1kLCBvcHRpb25zKSk7Cn0pOw=="},{"version":3,"sources":["/Users/luxiaopeng/github/leetcode-pp/src/utils/markdown-it-span.js"],"names":["slugify","s","md","spaceRegex","RegExp","utils","lib","ucmicro","Z","source","encodeURIComponent","replace","makeRule","options","addHeadingAnchors","state","i","tokens","length","type","headingInlineToken","content","addHeadingSpan","spanTokenPre","Token","children","unshift","spanTokenPost","push","opts","defaults","anchorClass","assign","core","ruler"],"mappings":";;;;;AAAA,SAASA,OAAT,CAAiBC,CAAjB,EAAoBC,EAApB,EAAwB;AACtB;AACA,MAAMC,UAAU,GAAG,IAAIC,MAAJ,CAAWF,EAAE,CAACG,KAAH,CAASC,GAAT,CAAaC,OAAb,CAAqBC,CAArB,CAAuBC,MAAlC,EAA0C,GAA1C,CAAnB;AACA,SAAOC,kBAAkB,CAACT,CAAC,CAACU,OAAF,CAAUR,UAAV,EAAsB,EAAtB,CAAD,CAAzB;AACD;;AAED,SAASS,QAAT,CAAkBV,EAAlB,EAAsBW,OAAtB,EAA+B;AAC7B,SAAO,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AACvC;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAAN,CAAaC,MAAb,GAAsB,CAA1C,EAA6CF,CAAC,EAA9C,EAAkD;AAChD,UACED,KAAK,CAACE,MAAN,CAAaD,CAAb,EAAgBG,IAAhB,KAAyB,cAAzB,IACAJ,KAAK,CAACE,MAAN,CAAaD,CAAC,GAAG,CAAjB,EAAoBG,IAApB,KAA6B,QAF/B,EAGE;AACA;AACD;;AAED,UAAMC,kBAAkB,GAAGL,KAAK,CAACE,MAAN,CAAaD,CAAC,GAAG,CAAjB,CAA3B;;AAEA,UAAI,CAACI,kBAAkB,CAACC,OAAxB,EAAiC;AAC/B;AACD;;AAED,UAAIR,OAAO,CAACS,cAAZ,EAA4B;AAC1B,YAAMC,YAAY,GAAG,IAAIR,KAAK,CAACS,KAAV,CAAgB,aAAhB,EAA+B,EAA/B,EAAmC,CAAnC,CAArB;AACAD,QAAAA,YAAY,CAACF,OAAb,GACE,oDADF;AAEAD,QAAAA,kBAAkB,CAACK,QAAnB,CAA4BC,OAA5B,CAAoCH,YAApC;AACA,YAAMI,aAAa,GAAG,IAAIZ,KAAK,CAACS,KAAV,CAAgB,aAAhB,EAA+B,EAA/B,EAAmC,CAAnC,CAAtB;AACAG,QAAAA,aAAa,CAACN,OAAd,GAAwB,qCAAxB;AACAD,QAAAA,kBAAkB,CAACK,QAAnB,CAA4BG,IAA5B,CAAiCD,aAAjC;AACD,OAtB+C,CAwBhD;;;AACAX,MAAAA,CAAC,IAAI,CAAL;AACD;AACF,GA7BD;AA8BD;;AAED,gBAAe,UAACd,EAAD,EAAK2B,IAAL,EAAc;AAC3B,MAAMC,QAAQ,GAAG;AACfC,IAAAA,WAAW,EAAE,yBADE;AAEfT,IAAAA,cAAc,EAAE,IAFD;AAGftB,IAAAA,OAAO,EAAEA;AAHM,GAAjB;AAKA,MAAMa,OAAO,GAAGX,EAAE,CAACG,KAAH,CAAS2B,MAAT,CAAgBF,QAAhB,EAA0BD,IAA1B,CAAhB;AACA3B,EAAAA,EAAE,CAAC+B,IAAH,CAAQC,KAAR,CAAcN,IAAd,CAAmB,cAAnB,EAAmChB,QAAQ,CAACV,EAAD,EAAKW,OAAL,CAA3C;AACD,CARD","sourcesContent":["function slugify(s, md) {\n  // Unicode-friendly\n  const spaceRegex = new RegExp(md.utils.lib.ucmicro.Z.source, 'g')\n  return encodeURIComponent(s.replace(spaceRegex, ''))\n}\n\nfunction makeRule(md, options) {\n  return function addHeadingAnchors(state) {\n    // Go to length-2 because we're going to be peeking ahead.\n    for (let i = 0; i < state.tokens.length - 1; i++) {\n      if (\n        state.tokens[i].type !== 'heading_open' ||\n        state.tokens[i + 1].type !== 'inline'\n      ) {\n        continue\n      }\n\n      const headingInlineToken = state.tokens[i + 1]\n\n      if (!headingInlineToken.content) {\n        continue\n      }\n\n      if (options.addHeadingSpan) {\n        const spanTokenPre = new state.Token('html_inline', '', 0)\n        spanTokenPre.content =\n          '<span class=\"prefix\"></span><span class=\"content\">'\n        headingInlineToken.children.unshift(spanTokenPre)\n        const spanTokenPost = new state.Token('html_inline', '', 0)\n        spanTokenPost.content = '</span><span class=\"suffix\"></span>'\n        headingInlineToken.children.push(spanTokenPost)\n      }\n\n      // Advance past the inline and heading_close tokens.\n      i += 2\n    }\n  }\n}\n\nexport default (md, opts) => {\n  const defaults = {\n    anchorClass: 'markdown-it-headingspan',\n    addHeadingSpan: true,\n    slugify: slugify\n  }\n  const options = md.utils.assign(defaults, opts)\n  md.core.ruler.push('heading_span', makeRule(md, options))\n}\n"]}]}