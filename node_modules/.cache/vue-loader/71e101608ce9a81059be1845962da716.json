{"remainingRequest":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luxiaopeng/github/leetcode-pp/src/views/Video.vue?vue&type=style&index=0&id=ba2db59e&lang=less&scoped=true&","dependencies":[{"path":"/Users/luxiaopeng/github/leetcode-pp/src/views/Video.vue","mtime":1648364288937},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/css-loader/dist/cjs.js","mtime":1594812194251},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1631347730543},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/postcss-loader/src/index.js","mtime":1582876651724},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/less-loader/dist/cjs.js","mtime":1584094546781},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js","mtime":1582876651155},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js","mtime":1631347730543}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KQGltcG9ydCAnLi9WaWRlby5wYy5sZXNzJzsNCkBpbXBvcnQgJy4vVmlkZW8ubW9iaWxlLmxlc3MnOw0K"},{"version":3,"sources":["Video.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAweA;AACA","file":"Video.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <ul v-show=\"!isShowVideo\" class=\"tag-list\">\r\n      <li\r\n        v-for=\"item in tagList\"\r\n        :key=\"item.tid\"\r\n        :class=\"[{ active: item.tid == currentTagId }, 'tag-item']\"\r\n        @click=\"handleTag(item.tid)\"\r\n      >\r\n        <span>{{ item.name }}</span>\r\n        <span class=\"tag-num\">{{ item.count }}</span>\r\n      </li>\r\n      <li class=\"tag-item search\">\r\n        <a-input-search\r\n          @input=\"handleInputChange\"\r\n          @search=\"onSearch\"\r\n          type=\"text\"\r\n          placeholder=\"搜索关键字\"\r\n        />\r\n      </li>\r\n    </ul>\r\n    <ul v-show=\"!isShowVideo\" class=\"video-list\">\r\n      <a-spin v-show=\"searchLoading\" class=\"loading\" size=\"large\" />\r\n      <li\r\n        v-for=\"item in getFilteredVideos\"\r\n        :key=\"item.aid\"\r\n        @click=\"handleVideo(item.aid)\"\r\n        class=\"video-item\"\r\n      >\r\n        <img class=\"video-item-cover\" :src=\"item.cover\" />\r\n        <article class=\"video-item-descript\">\r\n          <p class=\"video-item-p video-item-title\">{{ item.title }}</p>\r\n          <p class=\"video-item-p video-item-detail\">\r\n            <a-button\r\n              v-if=\"item.link\"\r\n              type=\"link\"\r\n              size=\"small\"\r\n              class=\"video-item-detail-play\"\r\n              @click=\"e => openLink(e, item.link)\"\r\n            >\r\n              文字版\r\n            </a-button>\r\n            <span v-else class=\"video-item-detail-play\"> lucifer</span>\r\n\r\n            <span class=\"video-item-detail-time\">\r\n              <a-icon type=\"clock-circle\" />\r\n              {{ item.created | getTime }}\r\n            </span>\r\n          </p>\r\n        </article>\r\n      </li>\r\n      <li class=\"video-item empty-video-item\" />\r\n    </ul>\r\n    <a-spin v-show=\"videoLoading\" class=\"loading\" size=\"large\" />\r\n    <a-pagination\r\n      v-show=\"!isShowVideo\"\r\n      v-model=\"currentPage\"\r\n      :total=\"getFilteredVideos.length\"\r\n      :pageSize=\"pageSize\"\r\n      @change=\"pageChange\"\r\n      size=\"normal\"\r\n      class=\"pagination\"\r\n      :show-total=\"total => `当前共 ${total} 项`\"\r\n    />\r\n    <a-icon\r\n      v-show=\"isShowVideo\"\r\n      @click=\"handleClose\"\r\n      type=\"close\"\r\n      class=\"close\"\r\n    />\r\n    <iframe\r\n      v-show=\"isShowVideo\"\r\n      :src=\"videoSrc\"\r\n      class=\"ifram\"\r\n      scrolling=\"no\"\r\n      border=\"0\"\r\n      frameborder=\"no\"\r\n      framespacing=\"0\"\r\n      allowfullscreen=\"true\"\r\n      @load=\"videoOnLoad\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\n// 需要采集视频的b站账号id\r\nconst USERID = 519510412\r\n// 每页数据的长度\r\nconst PAGESIZE = 30\r\n// b站访问成功时的code\r\nconst REQUEST_CODE = 200\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      tagList: [], // 标签列表\r\n      currentTagId: -1, // 当前所在的标签id\r\n      searchWorld: null, // 搜索词\r\n      searchLoading: false, // 作品是否搜索中\r\n      videoList: [], // 视频列表\r\n      videoSrc: '', // 当前正在播放的视频地址\r\n      isShowVideo: false, // 是否播放视频\r\n      currentPage: 1, // 当前页数\r\n      pageSize: PAGESIZE, // 每页数量\r\n      videoLoading: true // 视频是否加载中\r\n    }\r\n  },\r\n  created() {\r\n    // 获取首页的数据\r\n    this.getAllVideos(USERID, this.currentPage, this.pageSize)\r\n  },\r\n  methods: {\r\n    initData() {\r\n      this.videoList = []\r\n      this.tagList = [\r\n        {\r\n          name: '全部',\r\n          tid: -1,\r\n          count: 0\r\n        }\r\n      ]\r\n    },\r\n    /**获取某一用户分页后的视频作品\r\n     * @param{Number} mid 需要采集的b用户id\r\n     * @param{Number} page 第多少页的数据\r\n     * @param{Number} pagesize 每页数据的长度\r\n     * @return{Promise} 获取并处理分页后数据的promise\r\n     */\r\n    getUserPageVideo(mid, page, pagesize) {\r\n      // 开启loading\r\n      this.searchLoading = true\r\n      return axios\r\n        .get(\r\n          'https://5e86f5d3d29490bd12ac9aa5--leetcode-jing.netlify.app/api/getVideoList',\r\n          {\r\n            params: {\r\n              mid,\r\n              page,\r\n              pagesize\r\n            }\r\n          }\r\n        )\r\n        .then(res => {\r\n          const {\r\n            data: { data },\r\n            status\r\n          } = res\r\n          // 判断请求是否成功\r\n          if (status === REQUEST_CODE) {\r\n            this.calculatUserPageData(data)\r\n          }\r\n        })\r\n        .catch(() => {\r\n          // 超时以及错误处理\r\n        })\r\n        .finally(() => {\r\n          // 关闭loading\r\n          this.searchLoading = false\r\n        })\r\n    },\r\n    // 处理用户的某一页视频数据\r\n    calculatUserPageData(data) {\r\n      const { tlist, vlist, count } = data\r\n      this.initData()\r\n      // 调整标签数据的格式\r\n      const tagList = [\r\n        {\r\n          name: '全部',\r\n          tid: -1,\r\n          count\r\n        }\r\n      ]\r\n      Object.keys(tlist).forEach(key => {\r\n        tagList.push(tlist[key])\r\n      })\r\n      // 设置标签列表,视频列表,总页数\r\n      this.tagList = tagList\r\n      this.videoList = vlist\r\n    },\r\n    openLink(e, link) {\r\n      e.stopPropagation()\r\n      window.location.href = link\r\n    },\r\n    handleInputChange(e) {\r\n      this.searchWorld = e.target.value\r\n    },\r\n    handleTag(tid) {\r\n      this.currentTagId = tid\r\n      this.onSearch()\r\n    },\r\n    handleVideo(aid) {\r\n      window.open(`https://www.bilibili.com/video/av${aid}`)\r\n    },\r\n    // 视频加载完毕时\r\n    videoOnLoad() {\r\n      this.videoLoading = false\r\n    },\r\n    // 关闭ifram播放的视频\r\n    handleClose() {\r\n      this.isShowVideo = false\r\n      this.videoSrc = ''\r\n    },\r\n    getAllVideos() {\r\n      return Promise.resolve([\r\n        {\r\n          aid: 417281451,\r\n          bvid: 'BV14V411e7MF',\r\n          tid: 6, // 春招/秋招\r\n          title: '搞定春招之网易篇',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gozkit5v53j31c00u0jzl.jpg',\r\n          created: 1616907618,\r\n          link:\r\n            'https://mp.weixin.qq.com/s?__biz=MzI4MzUxNjI3OA==&mid=2247488066&idx=1&sn=5e2c82b324c8ca63e0071cd5405c71a8&chksm=eb88de5bdcff574da03bc95fce53f37b2795ba635496cdb2ddfcea34a8305d2401c48d89e414&token=1873896266&lang=zh_CN#rd'\r\n        },\r\n        {\r\n          aid: 971961728,\r\n          bvid: 'BV1bp4y1H7KT',\r\n          tid: 6, // 春招/秋招\r\n          title: '搞定春招之虾皮篇（前端岗）',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0k4jo5j31c00u0akj.jpg',\r\n          created: 1614823665,\r\n          link:\r\n            'https://mp.weixin.qq.com/s?__biz=MzI4MzUxNjI3OA==&mid=2247487632&idx=1&sn=830fe267d835e5acbfc417787f85f1c1&chksm=eb88dc89dcff559f49913c0f2dec77b1d06c2ddbe2c6c299b32b3e49c2efaf8b11ac0aedce8f&token=1676518002&lang=zh_CN#rd'\r\n        },\r\n        {\r\n          aid: 799648825,\r\n          tid: 6,\r\n          title: '搞定春招之腾讯&钉钉篇）',\r\n          bvid: 'BV1Qy4y187Em',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0lfjvuj31c00u0alc.jpg',\r\n          created: 1615889895,\r\n          link:\r\n            'https://mp.weixin.qq.com/s?__biz=MzI4MzUxNjI3OA==&mid=2247487829&idx=1&sn=f31b4741853c3f51317c1a980a15b05c&chksm=eb88dd4cdcff545a7a9740d9658883f0aa711df24772cb3cda3701bac3c0c4b67a83d1f005d9&token=1929867466&lang=zh_CN#rd'\r\n        },\r\n        {\r\n          aid: 79269711,\r\n          tid: 1,\r\n          bvid: 'BV1RJ411r7jj',\r\n          title: '【大前端模拟面试】- 2019-12-14',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0m7nwej30sh0ht3zt.jpg',\r\n          created: 1576332558,\r\n          link: 'https://lucifer.ren/fe-interview/#/mock-interview/2019-12-14'\r\n        },\r\n        {\r\n          aid: 90738781,\r\n          tid: 1,\r\n          title: '【大前端模拟面试】- 2020-02-20',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0nbe1rj30sg0g0mze.jpg',\r\n          created: 1582313002,\r\n          link: 'https://lucifer.ren/fe-interview/#/mock-interview/2020-02-20'\r\n        },\r\n        {\r\n          aid: 76756338,\r\n          bvid: 'BV1RJ411d7XT',\r\n          title: 'mac装机（前端工程师）',\r\n          tid: 5,\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0o7yzlj31bd0u0ncz.jpg',\r\n          created: 1574511732,\r\n          link: 'https://github.com/azl397985856/mac-setup'\r\n        },\r\n        {\r\n          aid: 417406606,\r\n          bvid: 'BV1qV411n7Qc',\r\n          tid: 4,\r\n          title: 'lucifer的面试之路（一)',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gp6wa1ctavj31c00u0aun.jpg',\r\n          created: 1617453475,\r\n          link: 'https://lucifer.ren/blog/2021/04/03/interview-road/'\r\n        },\r\n        {\r\n          aid: 64313957,\r\n          bvid: 'BV1V4411o7AP',\r\n          tid: 4,\r\n          title: '大前端 每日一题 - 实现一个简单的移动端debug工具',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0p1eyuj313i0iw0wb.jpg',\r\n          created: 1566132353\r\n        },\r\n        {\r\n          aid: 840090130,\r\n          bvid: 'BV1M54y1d7h2',\r\n          tid: 2,\r\n          title:\r\n            '【贪心~双指针】 881. 求生艇 (\\tBoats to Save People  ) LeetCode',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0plh6vj31hc0u00wp.jpg',\r\n          created: 1585907937\r\n        },\r\n        {\r\n          aid: 95571324,\r\n          bvid: 'BV1rE411L7eH',\r\n          tid: 2,\r\n          title: '【树】 404. 左叶子之和 (Sum of Left Leaves) LeetCode',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0qj6kej31cw0u0gs9.jpg',\r\n          created: 1583942986\r\n        },\r\n\r\n        {\r\n          aid: 670114626,\r\n          tid: 3,\r\n          bvid: 'BV1pa4y1s7g2',\r\n          title: '【力扣加加】91天学算法 - 基础篇',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0r0f1ej30zk0k0tac.jpg',\r\n          created: 1603901419\r\n        },\r\n        {\r\n          aid: 627510315,\r\n          tid: 3,\r\n          bvid: 'BV17t4y1i71G',\r\n          title: '【力扣加加】91算法先导篇',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0rscf4j31c00u0adk.jpg',\r\n          created: 1603612539\r\n        },\r\n        {\r\n          aid: 886975432,\r\n          tid: 3,\r\n          bvid: 'BV1qK4y1J7DD',\r\n          title: '91 天学算法第三期视频会议',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0sq1fdj30w00k0wgj.jpg',\r\n          link:\r\n            'https://mp.weixin.qq.com/s?__biz=MzI4MzUxNjI3OA==&mid=2247487620&idx=1&sn=5f2b73c5b57c6451ca1fe1bcbb036a80&chksm=eb88dc9ddcff558bf74c367b6c71055cb190cd72b60a08664e11c216183f716f689f176cf3b9&token=1676518002&lang=zh_CN#rd'\r\n        },\r\n        {\r\n          tid: 2,\r\n          aid: 797618520,\r\n          bvid: 'BV1fy4y1r7pX',\r\n          title: '【力扣加加】 二分图',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0te7nsj31bz0u0jvr.jpg',\r\n          created: 1603612713\r\n        },\r\n        {\r\n          tid: 2,\r\n          aid: 285933298,\r\n          bvid: 'BV11f4y127Se',\r\n          title: '【哈希表~双指针】 141. 环形链表 142. 环形链表 II  LeetCode',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0u8vhkj31hc0u0glp.jpg',\r\n          created: 1591802077\r\n        },\r\n        {\r\n          tid: 5,\r\n          aid: 883465515,\r\n          bvid: 'BV1UK4y1x7zj',\r\n          title: '帮助你高效刷题的插件了解一下？',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0v3ie1j31hc0u0q6s.jpg',\r\n          created: 1591438281,\r\n          link: 'https://lucifer.ren/blog/2020/08/16/leetcode-cheat/'\r\n        },\r\n        {\r\n          tid: 2,\r\n          bvid: 'BV1GT4y137W9',\r\n          aid: 925519225,\r\n          title:\r\n            '【递归，分治】 236.最近公共祖先 (Lowest Common Ancestor of a Binary Tree) LeetCode',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0w051mj31hc0u0grh.jpg',\r\n          created: 1589107045\r\n        },\r\n        {\r\n          tid: 2,\r\n          aid: 667788596,\r\n          bvid: 'BV1Xa4y1x7st',\r\n          title:\r\n            '【记忆化递归，动态规划】 44.通配符匹配（wildcard-matching） LeetCode',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0whgsxj31hc0u00vu.jpg',\r\n          created: 1587205244\r\n        },\r\n        {\r\n          tid: 2,\r\n          aid: 455316365,\r\n          bvid: 'BV1f5411t7cF',\r\n          title: '【栈，中心扩展】 32.最长有效括号 LeetCode',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0xehnij31cw0u0q4b.jpg',\r\n          created: 1586798500\r\n        },\r\n        {\r\n          tid: 2,\r\n          aid: 840186648,\r\n          bvid: 'BV1N54y197Xe',\r\n          title: '【树】 1367.二叉树中的列表  LeetCode',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0yguvdj31hc0u0jvf.jpg',\r\n          created: 1586442654\r\n        },\r\n        {\r\n          tid: 2,\r\n          aid: 752707742,\r\n          bvid: 'BV1Rk4y197AJ',\r\n          title: '【二叉树的搜索】 1379. 找出克隆二叉树中的相同节点 LeetCode',\r\n          cover:\r\n            'https://tva1.sinaimg.cn/large/008eGmZEly1gomv0zhsjxj31hc0u0gq2.jpg',\r\n          created: 1586182368\r\n        }\r\n      ]).then(vlist =>\r\n        this.calculatUserPageData({\r\n          tlist: {\r\n            'mock-interview': {\r\n              name: '模拟面试',\r\n              tid: 1,\r\n              count: vlist.filter(v => v.tid === 1).length\r\n            },\r\n            solution: {\r\n              name: '算法题解',\r\n              tid: 2,\r\n              count: vlist.filter(v => v.tid === 2).length\r\n            },\r\n            '91algo': {\r\n              name: '91算法',\r\n              tid: 3,\r\n              count: vlist.filter(v => v.tid === 3).length\r\n            },\r\n            fe: {\r\n              name: '前端',\r\n              tid: 4,\r\n              count: vlist.filter(v => v.tid === 4).length\r\n            },\r\n            eff: {\r\n              name: '效率',\r\n              tid: 5,\r\n              count: vlist.filter(v => v.tid === 5).length\r\n            },\r\n            school: {\r\n              name: '校招',\r\n              tid: 6,\r\n              count: vlist.filter(v => v.tid === 6).length\r\n            }\r\n          },\r\n          vlist,\r\n          count: vlist.length\r\n        })\r\n      )\r\n    },\r\n    // 根据标题关键字搜索\r\n    onSearch() {\r\n      if (this.searchWorld) {\r\n        this.getAllVideos(USERID, this.currentPage, this.pageSize).then(() => {\r\n          const target = this.searchWorld.toLowerCase()\r\n          this.videoList = this.videoList.filter(item => {\r\n            return item.title.toLowerCase().indexOf(target) >= 0\r\n          })\r\n        })\r\n      } else {\r\n        this.getAllVideos(USERID, this.currentPage, this.pageSize)\r\n      }\r\n    },\r\n    pageChange(currentPage) {\r\n      this.currentPage = currentPage\r\n      // 获取某一页的数据\r\n      this.initData()\r\n      this.getAllVideos(USERID, this.currentPage, this.pageSize)\r\n    }\r\n  },\r\n  filters: {\r\n    getTime(time) {\r\n      const date = new Date(time * 1000)\r\n      return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`\r\n    },\r\n    getPlay(play) {\r\n      return play >= 10000 ? `${(play / 10000).toFixed(1)}万` : play\r\n    }\r\n  },\r\n  computed: {\r\n    getFilteredVideos() {\r\n      if (this.currentTagId === -1) return this.videoList\r\n      return this.videoList.filter(v => v.tid === this.currentTagId)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n@import './Video.pc.less';\r\n@import './Video.mobile.less';\r\n</style>\r\n"]}]}