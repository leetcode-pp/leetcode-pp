{"remainingRequest":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luxiaopeng/github/leetcode-pp/src/views/mark-down-nice.vue?vue&type=template&id=3a4f3742&","dependencies":[{"path":"/Users/luxiaopeng/github/leetcode-pp/src/views/mark-down-nice.vue","mtime":1648364288941},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js","mtime":1582876651155},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1631347730543},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js","mtime":1582876651155},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js","mtime":1631347730543}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm._m(0)
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "section",
      {
        staticStyle: {
          "font-size": "16px",
          color: "black",
          padding: "0 10px",
          "line-height": "1.6",
          "word-spacing": "0px",
          "letter-spacing": "0px",
          "word-break": "break-word",
          "word-wrap": "break-word",
          "text-align": "left",
          "font-family":
            "Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif",
          "margin-top": "-10px"
        },
        attrs: {
          id: "nice",
          "data-tool": "mdnice编辑器",
          "data-website": "https://www.mdnice.com"
        }
      },
      [
        _c(
          "h1",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "24px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [
              _vm._v("或许是一本可以彻底改变你刷 LeetCode 效率的题解书")
            ]),
            _c("span", { staticClass: "suffix" })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(
              " 经过了半年时间打磨，投入诸多人力，这本 LeetCode 题解书终于要和大家见面了。 💐💐💐💐💐。 "
            )
          ]
        ),
        _c("p", [
          _c(
            "a",
            {
              attrs: {
                href:
                  "https://union-click.jd.com/jdc?e=618|pc|&p=JF8BAOAJK1olXgEGUV9cAE4VCl8IGloXWgYCV1tcAE8TBl9MRANLAjZbERscSkAJHTdNTwcKBlMdBgABFksWAm0PG1sWWAcKUFpYFxJSXzI4GAhrA0IDUiM-FjFxQQtKWFx2AlkYElJROEonA24JG1MQWgMEUW5tCEwnQgEIGlkdXAQHUW5cOEsQBmkNElwWXgYGUFxtD0seMzRddVwVWFVWB10PXxtDVDo4K2sWbQECXRMcWgYnM284GGtXMwUKAw5VDEpDA2oBGl4SXwELUF5fCkkQVDtdH1JGX1EAZFxcCU8eMw"
              }
            },
            [_vm._v("实体版购书链接1")]
          )
        ]),
        _c("p", [
          _c(
            "a",
            {
              attrs: {
                href:
                  "https://union-click.jd.com/jdc?e=618|pc|&p=JF8BAM0JK1olXDYCV1ZfC0kWB19MRANLAjZbERscSkAJHTdNTwcKBlMdBgABFksUC20LGVoRQl9HCANtQDt-RAZPBQFwJ0ZEA1hDWh9wdTB2a1cZbQcyVF9cCEMSBGoOHmslXQEyAjBdCUoWAm4NG14WbQcyVFlYDk4eBG8LG1gUXzYFVFdtUx55BG8NSA9GXlRVBAoKXXsnM2w4HFscEEdQGW5tCHsUMy1mE14WDQcCUVxfWk9EBmkOSQsWDwVSVwpcWEoXUG5aElslXwcDUFdt"
              }
            },
            [_vm._v("实体版购书链接2")]
          )
        ]),
        _c("p", [
          _c(
            "a",
            {
              attrs: {
                href:
                  "https://union-click.jd.com/jdc?e=&p=JF8BAL0JK1olXDYAVVhfD04UAl9MRANLAjZbERscSkAJHTdNTwcKBlMdBgABFkkWBW0PHlgUQl9HCANtcS0SdTFvWVt1X3BkVV4Kc0JxYRtPe1cZbQcyVF9cCEMSBGoOHmslXQEyHzBcOEonA2gKE1oVWwEKXV5cAXsQA2Y4QA57WgYHBwoOCxlAUztfTmslbQUyZG5dOEgnQQFaSQ5FWQYFB1cODhgSVDpaS1hFDwQLUlwJAU5DAWcJHWsXXAcGXW4"
              }
            },
            [_vm._v("电子版购书链接")]
          )
        ]),
        _vm._v(" 在线试读： "),
        _c("iframe", {
          staticStyle: { "max-width": "100%" },
          attrs: {
            type: "text/html",
            width: "336",
            height: "550",
            frameborder: "0",
            allowfullscreen: "",
            src:
              "https://read.amazon.cn/kp/card?asin=B09DG5TRRM&preview=inline&linkCode=kpe&ref_=cm_sw_r_kb_dp_NVSYBDYA0SVC39PGA35S&hideShare=true"
          }
        }),
        _c(
          "h1",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "24px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [_vm._v("背景")]),
            _c("span", { staticClass: "suffix" })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(" 自 "),
            _c(
              "a",
              {
                staticStyle: {
                  "text-decoration": "none",
                  "word-wrap": "break-word",
                  "font-weight": "bold",
                  color: "rgb(239, 112, 96)",
                  "border-bottom": "1px solid rgb(239, 112, 96)"
                },
                attrs: { href: "https://github.com/azl397985856/leetcode" }
              },
              [_vm._v("LeetCode 题解")]
            ),
            _vm._v(
              " （现在已经接近 45k star 了）项目被大家开始关注，就有不少出版社开始联系我写书。刚开始后的时候，我并没有这个打算，觉得写这个相对于博客形式的题解要耗费时间，且并不一定效果比博客形式的效果好。后来当我向大家提及“出版社找我写书”这件事情的时候，很多人表示“想要买书，于是我就开始打算写这样一本书。但是一个完全没有写书经验的人，独立完成一本书工作量还是蛮大的，因此我打算寻求其他志同道合人士的帮助。 "
            )
          ]
        ),
        _c(
          "h1",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "24px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [_vm._v("团队介绍")]),
            _c("span", { staticClass: "suffix" })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(
              " 团队成员大都来自 985， 211 学校计算机系，大家经常参加算法竞赛，也坚持参加 LeetCode 周赛。在这个过程中，我们积累了很多经验，希望将这些经验分享给大家，以减少大家在刷题过程中的阻碍，让大家更有效率的刷题。 本书尤其适合那些刚刚开始刷题的人，如果你刚开始刷题，或者刷了很多题面对新题还是无法很好的解决，那么这本书肯定很适合你。最后欢迎大家加入我们的读者群和作者进行交流。 "
            )
          ]
        ),
        _c(
          "ul",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              color: "black",
              "list-style-type": "disc"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [
                  _c(
                    "a",
                    {
                      staticStyle: {
                        "text-decoration": "none",
                        "word-wrap": "break-word",
                        "font-weight": "bold",
                        color: "rgb(239, 112, 96)",
                        "border-bottom": "1px solid rgb(239, 112, 96)"
                      },
                      attrs: { href: "https://leetcode-cn.com/u/hlxing/" }
                    },
                    [_vm._v("作者 - lucifer")]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [
                  _c(
                    "a",
                    {
                      staticStyle: {
                        "text-decoration": "none",
                        "word-wrap": "break-word",
                        "font-weight": "bold",
                        color: "rgb(239, 112, 96)",
                        "border-bottom": "1px solid rgb(239, 112, 96)"
                      },
                      attrs: { href: "https://leetcode-cn.com/u/fe-lucifer/" }
                    },
                    [_vm._v("作者 - by")]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [
                  _c(
                    "a",
                    {
                      staticStyle: {
                        "text-decoration": "none",
                        "word-wrap": "break-word",
                        "font-weight": "bold",
                        color: "rgb(239, 112, 96)",
                        "border-bottom": "1px solid rgb(239, 112, 96)"
                      },
                      attrs: { href: "https://leetcode-cn.com/u/bruceyuj/" }
                    },
                    [_vm._v("作者 - fanlu")]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [
                  _c(
                    "a",
                    {
                      staticStyle: {
                        "text-decoration": "none",
                        "word-wrap": "break-word",
                        "font-weight": "bold",
                        color: "rgb(239, 112, 96)",
                        "border-bottom": "1px solid rgb(239, 112, 96)"
                      },
                      attrs: { href: "https://www.fanlucloud.com/" }
                    },
                    [_vm._v("作者 - hlxing")]
                  )
                ]
              )
            ])
          ]
        ),
        _c(
          "h1",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "24px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [_vm._v("样张")]),
            _c("span", { staticClass: "suffix" })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(
              " 这里给大家开放部分章节内容给大家，让大家尝尝鲜。当然也欢迎大家提出宝贵的建议，帮助我们写出更好的内容。 "
            )
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [_vm._v(" 我们开放了第八章第五小节给大家看，以下是具体内容： ")]
        ),
        _c(
          "h2",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "border-bottom": "2px solid rgb(239, 112, 96)",
              "font-size": "1.3em"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c(
              "span",
              {
                staticClass: "content",
                staticStyle: {
                  display: "inline-block",
                  "font-weight": "bold",
                  background: "rgb(239, 112, 96)",
                  color: "#ffffff",
                  padding: "3px 10px 1px",
                  "border-top-right-radius": "3px",
                  "border-top-left-radius": "3px",
                  "margin-right": "3px"
                }
              },
              [_vm._v("8.5 1206. 设计跳表")]
            ),
            _c("span", { staticClass: "suffix" }),
            _c("span", {
              staticStyle: {
                display: "inline-block",
                "vertical-align": "bottom",
                "border-bottom": "36px solid #efebe9",
                "border-right": "20px solid transparent"
              }
            })
          ]
        ),
        _c(
          "h3",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "20px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [_vm._v("题目描述")]),
            _c("span", {
              staticClass: "suffix",
              staticStyle: { display: "none" }
            })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [_vm._v(" 不使用任何库函数，设计一个跳表。 ")]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(" 跳表是在 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=O(logN)",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(
              " 时间内完成增加、删除、搜索操作的数据结构。跳表相比于树堆与红黑树，其功能与性能相当，并且跳表的代码长度相较下更短，其设计思想与链表相似。 "
            )
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(
              " 跳表中有很多层，每一层是一个短的链表。在第一层的作用下，增加、删除和搜索操作的时间复杂度不超过 "
            ),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=O(N)",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v("。跳表的每一个操作的平均时间复杂度是 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=O(logN)",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v("，空间复杂度是 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=O(N)",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v("。 ")
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [_vm._v(" 在本题中，你的设计应该要包含这些函数： ")]
        ),
        _c(
          "ul",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              color: "black",
              "list-style-type": "disc"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [
                  _vm._v(
                    " bool search(int target) : 返回 target 是否存在于跳表中。 "
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [_vm._v(" void add(int num):  插入一个元素到跳表。 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [
                  _vm._v(
                    " bool erase(int num): 在跳表中删除一个值，如果  num  不存在，直接返回 false. 如果存在多个  num ，删除其中任意一个即可。 "
                  )
                ]
              )
            ])
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(
              " 注意，跳表中可能存在多个相同的值，你的代码需要处理这种情况。 "
            )
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [_vm._v(" 样例： ")]
        ),
        _c(
          "pre",
          {
            staticClass: "custom",
            staticStyle: { "margin-top": "10px", "margin-bottom": "10px" },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c(
              "code",
              {
                staticClass: "hljs",
                staticStyle: {
                  "overflow-x": "auto",
                  padding: "16px",
                  color: "#abb2bf",
                  background: "#282c34",
                  display: "-webkit-box",
                  "font-family":
                    "Operator Mono, Consolas, Monaco, Menlo, monospace",
                  "border-radius": "0px",
                  "font-size": "12px",
                  "-webkit-overflow-scrolling": "touch"
                }
              },
              [
                _vm._v(
                  "Skiplist skiplist = new Skiplist();\n\nskiplist.add(1);\nskiplist.add(2);\nskiplist.add(3);\nskiplist.search(0);   // 返回 false\nskiplist.add(4);\nskiplist.search(1);   // 返回 true\nskiplist.erase(0);    // 返回 false，0 不在跳表中\nskiplist.erase(1);    // 返回 true\nskiplist.search(1);   // 返回 false，1 已被擦除\n"
                )
              ]
            )
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(" 约束条件： "),
            _c(
              "code",
              {
                staticStyle: {
                  "font-size": "14px",
                  "word-wrap": "break-word",
                  padding: "2px 4px",
                  "border-radius": "4px",
                  margin: "0 2px",
                  "background-color": "rgba(27,31,35,.05)",
                  "font-family":
                    "Operator Mono, Consolas, Monaco, Menlo, monospace",
                  "word-break": "break-all",
                  color: "rgb(239, 112, 96)"
                }
              },
              [_vm._v("0 <= num, target <= 20000")]
            ),
            _vm._v(" 最多调用  50000  次  search, add, 以及  erase 操作。 ")
          ]
        ),
        _c(
          "h3",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "20px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [_vm._v("思路")]),
            _c("span", {
              staticClass: "suffix",
              staticStyle: { display: "none" }
            })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(
              " 首先，使用跳表会将数据存储成有序的。在数据结构当中，我们通常有两种基本的线性结构，结合有序数据，表达如下： "
            )
          ]
        ),
        _c(
          "ul",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              color: "black",
              "list-style-type": "disc"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [
                  _vm._v(" 有序链表，我们有三种基本操作： "),
                  _c(
                    "ul",
                    {
                      staticStyle: {
                        "margin-top": "8px",
                        "margin-bottom": "8px",
                        "padding-left": "25px",
                        color: "black",
                        "list-style-type": "square"
                      }
                    },
                    [
                      _c("li", [
                        _c(
                          "section",
                          {
                            staticStyle: {
                              "margin-top": "5px",
                              "margin-bottom": "5px",
                              "line-height": "26px",
                              "text-align": "left",
                              color: "rgb(1,1,1)",
                              "font-weight": "500"
                            }
                          },
                          [
                            _vm._v(" 查找指定的数据：时间复杂度为 "),
                            _c(
                              "span",
                              {
                                staticClass: "span-inline-equation",
                                staticStyle: { cursor: "pointer" }
                              },
                              [
                                _c("span", [
                                  _c("img", {
                                    staticClass: "equation",
                                    staticStyle: {
                                      margin: "0 auto",
                                      width: "auto",
                                      "max-width": "100%",
                                      display: "inline"
                                    },
                                    attrs: {
                                      src:
                                        "https://juejin.im/equation?tex=O(N)",
                                      alt: ""
                                    }
                                  })
                                ])
                              ]
                            ),
                            _vm._v(", "),
                            _c(
                              "span",
                              {
                                staticClass: "span-inline-equation",
                                staticStyle: { cursor: "pointer" }
                              },
                              [
                                _c("span", [
                                  _c("img", {
                                    staticClass: "equation",
                                    staticStyle: {
                                      margin: "0 auto",
                                      width: "auto",
                                      "max-width": "100%",
                                      display: "inline"
                                    },
                                    attrs: {
                                      src: "https://juejin.im/equation?tex=N",
                                      alt: ""
                                    }
                                  })
                                ])
                              ]
                            ),
                            _vm._v(" 为数据位于链表的位置。 ")
                          ]
                        )
                      ]),
                      _c("li", [
                        _c(
                          "section",
                          {
                            staticStyle: {
                              "margin-top": "5px",
                              "margin-bottom": "5px",
                              "line-height": "26px",
                              "text-align": "left",
                              color: "rgb(1,1,1)",
                              "font-weight": "500"
                            }
                          },
                          [
                            _vm._v(" 插入指定的数据：时间复杂度为 "),
                            _c(
                              "span",
                              {
                                staticClass: "span-inline-equation",
                                staticStyle: { cursor: "pointer" }
                              },
                              [
                                _c("span", [
                                  _c("img", {
                                    staticClass: "equation",
                                    staticStyle: {
                                      margin: "0 auto",
                                      width: "auto",
                                      "max-width": "100%",
                                      display: "inline"
                                    },
                                    attrs: {
                                      src:
                                        "https://juejin.im/equation?tex=O(N)",
                                      alt: ""
                                    }
                                  })
                                ])
                              ]
                            ),
                            _vm._v(", "),
                            _c(
                              "span",
                              {
                                staticClass: "span-inline-equation",
                                staticStyle: { cursor: "pointer" }
                              },
                              [
                                _c("span", [
                                  _c("img", {
                                    staticClass: "equation",
                                    staticStyle: {
                                      margin: "0 auto",
                                      width: "auto",
                                      "max-width": "100%",
                                      display: "inline"
                                    },
                                    attrs: {
                                      src: "https://juejin.im/equation?tex=N",
                                      alt: ""
                                    }
                                  })
                                ])
                              ]
                            ),
                            _vm._v(
                              " 为数据位于链表的位置。因为插入数据之前，需要先查找到可以插入的位置。 "
                            )
                          ]
                        )
                      ]),
                      _c("li", [
                        _c(
                          "section",
                          {
                            staticStyle: {
                              "margin-top": "5px",
                              "margin-bottom": "5px",
                              "line-height": "26px",
                              "text-align": "left",
                              color: "rgb(1,1,1)",
                              "font-weight": "500"
                            }
                          },
                          [
                            _vm._v(" 删除指定的数据：时间复杂度为 "),
                            _c(
                              "span",
                              {
                                staticClass: "span-inline-equation",
                                staticStyle: { cursor: "pointer" }
                              },
                              [
                                _c("span", [
                                  _c("img", {
                                    staticClass: "equation",
                                    staticStyle: {
                                      margin: "0 auto",
                                      width: "auto",
                                      "max-width": "100%",
                                      display: "inline"
                                    },
                                    attrs: {
                                      src:
                                        "https://juejin.im/equation?tex=O(N)",
                                      alt: ""
                                    }
                                  })
                                ])
                              ]
                            ),
                            _vm._v(", "),
                            _c(
                              "span",
                              {
                                staticClass: "span-inline-equation",
                                staticStyle: { cursor: "pointer" }
                              },
                              [
                                _c("span", [
                                  _c("img", {
                                    staticClass: "equation",
                                    staticStyle: {
                                      margin: "0 auto",
                                      width: "auto",
                                      "max-width": "100%",
                                      display: "inline"
                                    },
                                    attrs: {
                                      src: "https://juejin.im/equation?tex=N",
                                      alt: ""
                                    }
                                  })
                                ])
                              ]
                            ),
                            _vm._v(
                              " 为数据位于链表的位置。因为删除数据之前，需要先查找到可以插入的位置。 "
                            )
                          ]
                        )
                      ])
                    ]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [
                  _vm._v(" 有序数组： "),
                  _c(
                    "ul",
                    {
                      staticStyle: {
                        "margin-top": "8px",
                        "margin-bottom": "8px",
                        "padding-left": "25px",
                        color: "black",
                        "list-style-type": "square"
                      }
                    },
                    [
                      _c("li", [
                        _c(
                          "section",
                          {
                            staticStyle: {
                              "margin-top": "5px",
                              "margin-bottom": "5px",
                              "line-height": "26px",
                              "text-align": "left",
                              color: "rgb(1,1,1)",
                              "font-weight": "500"
                            }
                          },
                          [
                            _vm._v(
                              " 查找指定的数据：如果使用二分查找，时间复杂度为 "
                            ),
                            _c(
                              "span",
                              {
                                staticClass: "span-inline-equation",
                                staticStyle: { cursor: "pointer" }
                              },
                              [
                                _c("span", [
                                  _c("img", {
                                    staticClass: "equation",
                                    staticStyle: {
                                      margin: "0 auto",
                                      width: "auto",
                                      "max-width": "100%",
                                      display: "inline"
                                    },
                                    attrs: {
                                      src:
                                        "https://juejin.im/equation?tex=O(logN)",
                                      alt: ""
                                    }
                                  })
                                ])
                              ]
                            ),
                            _vm._v(", "),
                            _c(
                              "span",
                              {
                                staticClass: "span-inline-equation",
                                staticStyle: { cursor: "pointer" }
                              },
                              [
                                _c("span", [
                                  _c("img", {
                                    staticClass: "equation",
                                    staticStyle: {
                                      margin: "0 auto",
                                      width: "auto",
                                      "max-width": "100%",
                                      display: "inline"
                                    },
                                    attrs: {
                                      src: "https://juejin.im/equation?tex=N",
                                      alt: ""
                                    }
                                  })
                                ])
                              ]
                            ),
                            _vm._v(" 为数据的个数。 ")
                          ]
                        )
                      ]),
                      _c("li", [
                        _c(
                          "section",
                          {
                            staticStyle: {
                              "margin-top": "5px",
                              "margin-bottom": "5px",
                              "line-height": "26px",
                              "text-align": "left",
                              color: "rgb(1,1,1)",
                              "font-weight": "500"
                            }
                          },
                          [
                            _vm._v(" 插入指定的数据：时间复杂度为 "),
                            _c(
                              "span",
                              {
                                staticClass: "span-inline-equation",
                                staticStyle: { cursor: "pointer" }
                              },
                              [
                                _c("span", [
                                  _c("img", {
                                    staticClass: "equation",
                                    staticStyle: {
                                      margin: "0 auto",
                                      width: "auto",
                                      "max-width": "100%",
                                      display: "inline"
                                    },
                                    attrs: {
                                      src:
                                        "https://juejin.im/equation?tex=O(N)",
                                      alt: ""
                                    }
                                  })
                                ])
                              ]
                            ),
                            _vm._v(
                              ", 因为数组是顺序存储，插入新的数据时，我们需要向后移动指定位置后面的数据，这里 "
                            ),
                            _c(
                              "span",
                              {
                                staticClass: "span-inline-equation",
                                staticStyle: { cursor: "pointer" }
                              },
                              [
                                _c("span", [
                                  _c("img", {
                                    staticClass: "equation",
                                    staticStyle: {
                                      margin: "0 auto",
                                      width: "auto",
                                      "max-width": "100%",
                                      display: "inline"
                                    },
                                    attrs: {
                                      src: "https://juejin.im/equation?tex=N",
                                      alt: ""
                                    }
                                  })
                                ])
                              ]
                            ),
                            _vm._v(" 为数据的个数。 ")
                          ]
                        )
                      ]),
                      _c("li", [
                        _c(
                          "section",
                          {
                            staticStyle: {
                              "margin-top": "5px",
                              "margin-bottom": "5px",
                              "line-height": "26px",
                              "text-align": "left",
                              color: "rgb(1,1,1)",
                              "font-weight": "500"
                            }
                          },
                          [
                            _vm._v(" 删除指定的数据：时间复杂度为 "),
                            _c(
                              "span",
                              {
                                staticClass: "span-inline-equation",
                                staticStyle: { cursor: "pointer" }
                              },
                              [
                                _c("span", [
                                  _c("img", {
                                    staticClass: "equation",
                                    staticStyle: {
                                      margin: "0 auto",
                                      width: "auto",
                                      "max-width": "100%",
                                      display: "inline"
                                    },
                                    attrs: {
                                      src:
                                        "https://juejin.im/equation?tex=O(N)",
                                      alt: ""
                                    }
                                  })
                                ])
                              ]
                            ),
                            _vm._v(
                              ", 因为数组是顺序存储，删除数据时，我们需要向前移动指定位置后面的数据，这里 "
                            ),
                            _c(
                              "span",
                              {
                                staticClass: "span-inline-equation",
                                staticStyle: { cursor: "pointer" }
                              },
                              [
                                _c("span", [
                                  _c("img", {
                                    staticClass: "equation",
                                    staticStyle: {
                                      margin: "0 auto",
                                      width: "auto",
                                      "max-width": "100%",
                                      display: "inline"
                                    },
                                    attrs: {
                                      src: "https://juejin.im/equation?tex=N",
                                      alt: ""
                                    }
                                  })
                                ])
                              ]
                            ),
                            _vm._v(" 为数据的个数。 ")
                          ]
                        )
                      ])
                    ]
                  )
                ]
              )
            ])
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(" 而神奇的跳表能够在 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=O(logN)",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(
              " 时间内完成增加、删除、搜索操作。 下面我们分别分析增加、删除和搜索这 3 个三个基本操作。 "
            )
          ]
        ),
        _c(
          "h4",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "18px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [_vm._v("跳表的查找")]),
            _c("span", {
              staticClass: "suffix",
              staticStyle: { display: "none" }
            })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(
              " 现在我们通过一个简单的例子来描述跳表是如何实现的。假设我们有一个有序链表如下图： "
            ),
            _c("img", {
              staticStyle: {
                display: "block",
                margin: "0 auto",
                width: "auto",
                "max-width": "100%"
              },
              attrs: {
                src:
                  "https://tva1.sinaimg.cn/large/00831rSTly1gdl834i5t2j33340ecdil.jpg",
                alt: ""
              }
            }),
            _vm._v(" 原始方法中，查找的时间复杂度为 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=O(N)",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(
              "。那么如何来提高链表的查询效率呢？ 如下图所示，我们可以从原始链表中每两个元素抽出来一个元素，加上一级索引，并且一级索引指向原始链表： "
            ),
            _c("img", {
              staticStyle: {
                display: "block",
                margin: "0 auto",
                width: "auto",
                "max-width": "100%"
              },
              attrs: {
                src:
                  "https://tva1.sinaimg.cn/large/00831rSTly1gdl81x0d7vj33340rbwjx.jpg",
                alt: ""
              }
            }),
            _vm._v(" 如果我们想要查找 9 ，在原始链表中查找路径是 "),
            _c(
              "code",
              {
                staticStyle: {
                  "font-size": "14px",
                  "word-wrap": "break-word",
                  padding: "2px 4px",
                  "border-radius": "4px",
                  margin: "0 2px",
                  "background-color": "rgba(27,31,35,.05)",
                  "font-family":
                    "Operator Mono, Consolas, Monaco, Menlo, monospace",
                  "word-break": "break-all",
                  color: "rgb(239, 112, 96)"
                }
              },
              [_vm._v("1->3->4->7->9")]
            ),
            _vm._v(", 而在添加了一级索引的查找路径是 "),
            _c(
              "code",
              {
                staticStyle: {
                  "font-size": "14px",
                  "word-wrap": "break-word",
                  padding: "2px 4px",
                  "border-radius": "4px",
                  margin: "0 2px",
                  "background-color": "rgba(27,31,35,.05)",
                  "font-family":
                    "Operator Mono, Consolas, Monaco, Menlo, monospace",
                  "word-break": "break-all",
                  color: "rgb(239, 112, 96)"
                }
              },
              [_vm._v("1->4->9")]
            ),
            _vm._v(
              "，很明显，查找效率提升了。 按照这样的思路，我们在第 1 级索引上再加第 2 级索引，再加第 3 级索引，以此类推，这样在数据量非常大的时候，使得我们查找数据的时间复杂度为 "
            ),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=O(logN)",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v("。这就是跳表的思想，也就是我们通常所说的“空间换时间”。 ")
          ]
        ),
        _c(
          "h4",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "18px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [_vm._v("跳表的插入")]),
            _c("span", {
              staticClass: "suffix",
              staticStyle: { display: "none" }
            })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(
              " 跳表插入数据看起来很简单，我们需要保持数据有序，因此，第一步我们需要像查找元素一样，找到新元素应该插入的位置，然后再插入。 "
            )
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(
              " 但是这样会存在一个问题，如果我们一直往原始链表中插入数据，但是不更新索引，那么会导致两个索引结点之间的数据非常多，在极端情况下，跳表会退化成单链表，从而导致查找效率由 "
            ),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=O(logN)",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(" 退化为 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=O(N)",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(
              "。因此，我们需要在插入数据的同时，增加相应的索引或者重建索引。 "
            )
          ]
        ),
        _c(
          "ol",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              color: "black",
              "list-style-type": "decimal"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [
                  _vm._v(
                    " 方案 1：每次插入数据后，将跳表的索引全部删除后重建，我们知道索引的结点个数为 "
                  ),
                  _c(
                    "span",
                    {
                      staticClass: "span-inline-equation",
                      staticStyle: { cursor: "pointer" }
                    },
                    [
                      _c("span", [
                        _c("img", {
                          staticClass: "equation",
                          staticStyle: {
                            margin: "0 auto",
                            width: "auto",
                            "max-width": "100%",
                            display: "inline"
                          },
                          attrs: {
                            src: "https://juejin.im/equation?tex=N",
                            alt: ""
                          }
                        })
                      ])
                    ]
                  ),
                  _vm._v(
                    "（在空间复杂度分析时会有明确的数学推导），那么每次重建索引，重建的时间复杂度至少是 "
                  ),
                  _c(
                    "span",
                    {
                      staticClass: "span-inline-equation",
                      staticStyle: { cursor: "pointer" }
                    },
                    [
                      _c("span", [
                        _c("img", {
                          staticClass: "equation",
                          staticStyle: {
                            margin: "0 auto",
                            width: "auto",
                            "max-width": "100%",
                            display: "inline"
                          },
                          attrs: {
                            src: "https://juejin.im/equation?tex=O(N)",
                            alt: ""
                          }
                        })
                      ])
                    ]
                  ),
                  _vm._v(" 级别，很明显不可取。 ")
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [
                  _vm._v(
                    " 方案 2：通过随机性来维护索引。假设跳表的每一层的提升概率为 "
                  ),
                  _c(
                    "span",
                    {
                      staticClass: "span-inline-equation",
                      staticStyle: { cursor: "pointer" }
                    },
                    [
                      _c("span", [
                        _c("img", {
                          staticClass: "equation",
                          staticStyle: {
                            margin: "0 auto",
                            width: "auto",
                            "max-width": "100%",
                            display: "inline"
                          },
                          attrs: {
                            src: "https://juejin.im/equation?tex=\\frac{1}{2}",
                            alt: ""
                          }
                        })
                      ])
                    ]
                  ),
                  _vm._v(
                    " ，最理想的情况就是每两个元素提升一个元素做索引。而通常意义上，只要元素的数量足够多，且抽取足够随机的话，我们得到的索引将会是比较均匀的。尽管不是每两个抽取一个，但是对于查找效率来讲，影响并不很大。我们要知道，设计良好的数据结构往往都是用来应对大数据量的场景的。 因此，我们这样维护索引："
                  ),
                  _c(
                    "strong",
                    { staticStyle: { "font-weight": "bold", color: "black" } },
                    [
                      _vm._v("随机抽取 "),
                      _c(
                        "span",
                        {
                          staticClass: "span-inline-equation",
                          staticStyle: { cursor: "pointer" }
                        },
                        [
                          _c("span", [
                            _c("img", {
                              staticClass: "equation",
                              staticStyle: {
                                margin: "0 auto",
                                width: "auto",
                                "max-width": "100%",
                                display: "inline"
                              },
                              attrs: {
                                src:
                                  "https://juejin.im/equation?tex=\\frac{N}{2}",
                                alt: ""
                              }
                            })
                          ])
                        ]
                      ),
                      _vm._v(" 个元素作为 1 级索引，随机抽取 "),
                      _c(
                        "span",
                        {
                          staticClass: "span-inline-equation",
                          staticStyle: { cursor: "pointer" }
                        },
                        [
                          _c("span", [
                            _c("img", {
                              staticClass: "equation",
                              staticStyle: {
                                margin: "0 auto",
                                width: "auto",
                                "max-width": "100%",
                                display: "inline"
                              },
                              attrs: {
                                src:
                                  "https://juejin.im/equation?tex=\\frac{N}{4}",
                                alt: ""
                              }
                            })
                          ])
                        ]
                      ),
                      _vm._v(" 作为 2 级索引，以此类推，一直到最顶层索引")
                    ]
                  ),
                  _vm._v("。 ")
                ]
              )
            ])
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(
              " 那么具体代码该如何实现，才能够让跳表在每次插入新元素时，尽量让该元素有 "
            ),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=\\frac{1}{2}",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(" 的概率建立一级索引、"),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=\\frac{1}{4}",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(" 的概率建立二级索引、"),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=\\frac{1}{8}",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(
              " 的概率建立三级索引，以此类推。因此，我们需要一个概率算法。 "
            )
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(" 在通常的跳表实现当中，我们会设计一个 "),
            _c(
              "code",
              {
                staticStyle: {
                  "font-size": "14px",
                  "word-wrap": "break-word",
                  padding: "2px 4px",
                  "border-radius": "4px",
                  margin: "0 2px",
                  "background-color": "rgba(27,31,35,.05)",
                  "font-family":
                    "Operator Mono, Consolas, Monaco, Menlo, monospace",
                  "word-break": "break-all",
                  color: "rgb(239, 112, 96)"
                }
              },
              [_vm._v("randomLevel()")]
            ),
            _vm._v(" 方法，该方法会随机生成 "),
            _c(
              "code",
              {
                staticStyle: {
                  "font-size": "14px",
                  "word-wrap": "break-word",
                  padding: "2px 4px",
                  "border-radius": "4px",
                  margin: "0 2px",
                  "background-color": "rgba(27,31,35,.05)",
                  "font-family":
                    "Operator Mono, Consolas, Monaco, Menlo, monospace",
                  "word-break": "break-all",
                  color: "rgb(239, 112, 96)"
                }
              },
              [_vm._v("1~MAX_LEVEL")]
            ),
            _vm._v(" 之间的数 (MAX_LEVEL 表示索引的最高层数） ")
          ]
        ),
        _c(
          "ul",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              color: "black",
              "list-style-type": "disc"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [
                  _vm._v(
                    " randomLevel() 方法返回 1 表示当前插入的元素不需要建立索引，只需要存储数据到原始链表即可（概率 1/2） "
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [
                  _vm._v(
                    " randomLevel() 方法返回 2 表示当前插入的元素需要建立一级索引（概率 1/4） "
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [
                  _vm._v(
                    " randomLevel() 方法返回 3 表示当前插入的元素需要建立二级索引（概率 1/8） "
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [
                  _vm._v(
                    " randomLevel() 方法返回 4 表示当前插入的元素需要建立三级索引（概率 1/16） "
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [_vm._v(" ...... ")]
              )
            ])
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(
              " 可能有的同学会有疑问，我们需要一级索引中元素的个数时原始链表的一半，但是我们 "
            ),
            _c(
              "code",
              {
                staticStyle: {
                  "font-size": "14px",
                  "word-wrap": "break-word",
                  padding: "2px 4px",
                  "border-radius": "4px",
                  margin: "0 2px",
                  "background-color": "rgba(27,31,35,.05)",
                  "font-family":
                    "Operator Mono, Consolas, Monaco, Menlo, monospace",
                  "word-break": "break-all",
                  color: "rgb(239, 112, 96)"
                }
              },
              [_vm._v("randomLevel()")]
            ),
            _vm._v(" 方法返回 2（建立一级索引）的概率是 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=\\frac{1}{4}",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(", 这样是不是有问题呢？ 实际上，只要"),
            _c(
              "code",
              {
                staticStyle: {
                  "font-size": "14px",
                  "word-wrap": "break-word",
                  padding: "2px 4px",
                  "border-radius": "4px",
                  margin: "0 2px",
                  "background-color": "rgba(27,31,35,.05)",
                  "font-family":
                    "Operator Mono, Consolas, Monaco, Menlo, monospace",
                  "word-break": "break-all",
                  color: "rgb(239, 112, 96)"
                }
              },
              [_vm._v("randomLevel()")]
            ),
            _vm._v(
              "方法返回的数大于 1，我们都会建立一级索引，而返回值为 1 的概率是 "
            ),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=\\frac{1}{2}",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v("。所以，建立一级索引的概率其实是"),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src:
                        "https://juejin.im/equation?tex=1- \\frac{1}{2} = \\frac{1}{2}",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v("。同上，当 "),
            _c(
              "code",
              {
                staticStyle: {
                  "font-size": "14px",
                  "word-wrap": "break-word",
                  padding: "2px 4px",
                  "border-radius": "4px",
                  margin: "0 2px",
                  "background-color": "rgba(27,31,35,.05)",
                  "font-family":
                    "Operator Mono, Consolas, Monaco, Menlo, monospace",
                  "word-break": "break-all",
                  color: "rgb(239, 112, 96)"
                }
              },
              [_vm._v("randomLevel()")]
            ),
            _vm._v(" 方法返回值 "),
            _c(
              "code",
              {
                staticStyle: {
                  "font-size": "14px",
                  "word-wrap": "break-word",
                  padding: "2px 4px",
                  "border-radius": "4px",
                  margin: "0 2px",
                  "background-color": "rgba(27,31,35,.05)",
                  "font-family":
                    "Operator Mono, Consolas, Monaco, Menlo, monospace",
                  "word-break": "break-all",
                  color: "rgb(239, 112, 96)"
                }
              },
              [_vm._v(">2")]
            ),
            _vm._v(
              " 时，我们会建立二级或二级以上的索引，都会在二级索引中添加元素。而在二级索引中添加元素的概率是 "
            ),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src:
                        "https://juejin.im/equation?tex=1- \\frac{1}{2} - \\frac{1}{4} = \\frac{1}{4}",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v("。 以此类推，我们推导出 "),
            _c(
              "code",
              {
                staticStyle: {
                  "font-size": "14px",
                  "word-wrap": "break-word",
                  padding: "2px 4px",
                  "border-radius": "4px",
                  margin: "0 2px",
                  "background-color": "rgba(27,31,35,.05)",
                  "font-family":
                    "Operator Mono, Consolas, Monaco, Menlo, monospace",
                  "word-break": "break-all",
                  color: "rgb(239, 112, 96)"
                }
              },
              [_vm._v("randomLevel()")]
            ),
            _vm._v(" 符合我们的设计要求。 ")
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(" 下面我们通过仿照 redis zset.c 的 "),
            _c(
              "code",
              {
                staticStyle: {
                  "font-size": "14px",
                  "word-wrap": "break-word",
                  padding: "2px 4px",
                  "border-radius": "4px",
                  margin: "0 2px",
                  "background-color": "rgba(27,31,35,.05)",
                  "font-family":
                    "Operator Mono, Consolas, Monaco, Menlo, monospace",
                  "word-break": "break-all",
                  color: "rgb(239, 112, 96)"
                }
              },
              [_vm._v("randomLevel")]
            ),
            _vm._v(" 的代码： ")
          ]
        ),
        _c(
          "pre",
          {
            staticClass: "custom",
            staticStyle: { "margin-top": "10px", "margin-bottom": "10px" },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c(
              "code",
              {
                staticClass: "hljs",
                staticStyle: {
                  "overflow-x": "auto",
                  padding: "16px",
                  color: "#abb2bf",
                  background: "#282c34",
                  display: "-webkit-box",
                  "font-family":
                    "Operator Mono, Consolas, Monaco, Menlo, monospace",
                  "border-radius": "0px",
                  "font-size": "12px",
                  "-webkit-overflow-scrolling": "touch"
                }
              },
              [
                _c(
                  "span",
                  {
                    staticClass: "hljs-comment",
                    staticStyle: {
                      color: "#5c6370",
                      "font-style": "italic",
                      "line-height": "26px"
                    }
                  },
                  [_vm._v("##")]
                ),
                _c("br"),
                _c(
                  "span",
                  {
                    staticClass: "hljs-comment",
                    staticStyle: {
                      color: "#5c6370",
                      "font-style": "italic",
                      "line-height": "26px"
                    }
                  },
                  [
                    _vm._v(
                      "# 1. SKIPLIST_P 为提升的概率，本案例中我们设置为 1/2, 如果我们想要节省空间利用效率，可以适当的降低该值，从而减少索引元素个数。在 redis 中 SKIPLIST_P 被设定为 0.25。"
                    )
                  ]
                ),
                _c("br"),
                _c(
                  "span",
                  {
                    staticClass: "hljs-comment",
                    staticStyle: {
                      color: "#5c6370",
                      "font-style": "italic",
                      "line-height": "26px"
                    }
                  },
                  [
                    _vm._v(
                      "# 2. redis 中通过使用位运算来提升浮点数比较的效率，在本案例中被简化"
                    )
                  ]
                ),
                _c("br"),
                _c(
                  "span",
                  {
                    staticClass: "hljs-function",
                    staticStyle: { "line-height": "26px" }
                  },
                  [
                    _c(
                      "span",
                      {
                        staticClass: "hljs-keyword",
                        staticStyle: { color: "#c678dd", "line-height": "26px" }
                      },
                      [_vm._v("def")]
                    ),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        staticClass: "hljs-title",
                        staticStyle: { color: "#61aeee", "line-height": "26px" }
                      },
                      [_vm._v("randomLevel")]
                    ),
                    _c(
                      "span",
                      {
                        staticClass: "hljs-params",
                        staticStyle: { "line-height": "26px" }
                      },
                      [_vm._v("()")]
                    ),
                    _vm._v(":")
                  ]
                ),
                _c("br"),
                _vm._v("    level = "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("1")]
                ),
                _c("br"),
                _vm._v("    "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("while")]
                ),
                _vm._v(" random() < SKIPLIST_P "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("and")]
                ),
                _vm._v(" level < MAX_LEVEL:"),
                _c("br"),
                _vm._v("        level += "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("1")]
                ),
                _c("br"),
                _vm._v("    "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("return")]
                ),
                _vm._v(" level"),
                _c("br")
              ]
            )
          ]
        ),
        _c(
          "h4",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "18px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [_vm._v("跳表的删除")]),
            _c("span", {
              staticClass: "suffix",
              staticStyle: { display: "none" }
            })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(
              " 跳表的删除相对来讲稍微简单一些。我们在删除数据的同时，需要删除对应的索引结点。 "
            )
          ]
        ),
        _c(
          "h3",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "20px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [_vm._v("代码")]),
            _c("span", {
              staticClass: "suffix",
              staticStyle: { display: "none" }
            })
          ]
        ),
        _c(
          "pre",
          {
            staticClass: "custom",
            staticStyle: { "margin-top": "10px", "margin-bottom": "10px" },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c(
              "code",
              {
                staticClass: "hljs",
                staticStyle: {
                  "overflow-x": "auto",
                  padding: "16px",
                  color: "#abb2bf",
                  background: "#282c34",
                  display: "-webkit-box",
                  "font-family":
                    "Operator Mono, Consolas, Monaco, Menlo, monospace",
                  "border-radius": "0px",
                  "font-size": "12px",
                  "-webkit-overflow-scrolling": "touch"
                }
              },
              [
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("from")]
                ),
                _vm._v(" typing "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("import")]
                ),
                _vm._v(" Optional"),
                _c("br"),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("import")]
                ),
                _vm._v(" random"),
                _c("br"),
                _c("br"),
                _c(
                  "span",
                  {
                    staticClass: "hljs-class",
                    staticStyle: { "line-height": "26px" }
                  },
                  [
                    _c(
                      "span",
                      {
                        staticClass: "hljs-keyword",
                        staticStyle: { color: "#c678dd", "line-height": "26px" }
                      },
                      [_vm._v("class")]
                    ),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        staticClass: "hljs-title",
                        staticStyle: { color: "#e6c07b", "line-height": "26px" }
                      },
                      [_vm._v("ListNode")]
                    ),
                    _vm._v(":")
                  ]
                ),
                _c("br"),
                _vm._v("    "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-function",
                    staticStyle: { "line-height": "26px" }
                  },
                  [
                    _c(
                      "span",
                      {
                        staticClass: "hljs-keyword",
                        staticStyle: { color: "#c678dd", "line-height": "26px" }
                      },
                      [_vm._v("def")]
                    ),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        staticClass: "hljs-title",
                        staticStyle: { color: "#61aeee", "line-height": "26px" }
                      },
                      [_vm._v("__init__")]
                    ),
                    _c(
                      "span",
                      {
                        staticClass: "hljs-params",
                        staticStyle: { "line-height": "26px" }
                      },
                      [_vm._v("(self, data: Optional[int] = None)")]
                    ),
                    _vm._v(":")
                  ]
                ),
                _c("br"),
                _vm._v("        self._data = data "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-comment",
                    staticStyle: {
                      color: "#5c6370",
                      "font-style": "italic",
                      "line-height": "26px"
                    }
                  },
                  [
                    _vm._v(
                      "# 链表结点的数据域，可以为空（目的是方便创建头节点）"
                    )
                  ]
                ),
                _c("br"),
                _vm._v("        self._forwards = [] "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-comment",
                    staticStyle: {
                      color: "#5c6370",
                      "font-style": "italic",
                      "line-height": "26px"
                    }
                  },
                  [_vm._v("# 存储各个索引层级中该结点的后驱索引结点")]
                ),
                _c("br"),
                _c("br"),
                _c(
                  "span",
                  {
                    staticClass: "hljs-class",
                    staticStyle: { "line-height": "26px" }
                  },
                  [
                    _c(
                      "span",
                      {
                        staticClass: "hljs-keyword",
                        staticStyle: { color: "#c678dd", "line-height": "26px" }
                      },
                      [_vm._v("class")]
                    ),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        staticClass: "hljs-title",
                        staticStyle: { color: "#e6c07b", "line-height": "26px" }
                      },
                      [_vm._v("Skiplist")]
                    ),
                    _vm._v(":")
                  ]
                ),
                _c("br"),
                _c("br"),
                _vm._v("    _MAX_LEVEL = "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("16")]
                ),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-comment",
                    staticStyle: {
                      color: "#5c6370",
                      "font-style": "italic",
                      "line-height": "26px"
                    }
                  },
                  [_vm._v("# 允许的最大索引高度，该值根据实际需求设置")]
                ),
                _c("br"),
                _c("br"),
                _vm._v("    "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-function",
                    staticStyle: { "line-height": "26px" }
                  },
                  [
                    _c(
                      "span",
                      {
                        staticClass: "hljs-keyword",
                        staticStyle: { color: "#c678dd", "line-height": "26px" }
                      },
                      [_vm._v("def")]
                    ),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        staticClass: "hljs-title",
                        staticStyle: { color: "#61aeee", "line-height": "26px" }
                      },
                      [_vm._v("__init__")]
                    ),
                    _c(
                      "span",
                      {
                        staticClass: "hljs-params",
                        staticStyle: { "line-height": "26px" }
                      },
                      [_vm._v("(self)")]
                    ),
                    _vm._v(":")
                  ]
                ),
                _c("br"),
                _vm._v("        self._level_count = "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("1")]
                ),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-comment",
                    staticStyle: {
                      color: "#5c6370",
                      "font-style": "italic",
                      "line-height": "26px"
                    }
                  },
                  [_vm._v("# 初始化当前层级为 1")]
                ),
                _c("br"),
                _vm._v("        self._head = ListNode()"),
                _c("br"),
                _vm._v("        self._head._forwards = ["),
                _c(
                  "span",
                  {
                    staticClass: "hljs-literal",
                    staticStyle: { color: "#56b6c2", "line-height": "26px" }
                  },
                  [_vm._v("None")]
                ),
                _vm._v("] * self._MAX_LEVEL"),
                _c("br"),
                _c("br"),
                _vm._v("    "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-function",
                    staticStyle: { "line-height": "26px" }
                  },
                  [
                    _c(
                      "span",
                      {
                        staticClass: "hljs-keyword",
                        staticStyle: { color: "#c678dd", "line-height": "26px" }
                      },
                      [_vm._v("def")]
                    ),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        staticClass: "hljs-title",
                        staticStyle: { color: "#61aeee", "line-height": "26px" }
                      },
                      [_vm._v("search")]
                    ),
                    _c(
                      "span",
                      {
                        staticClass: "hljs-params",
                        staticStyle: { "line-height": "26px" }
                      },
                      [_vm._v("(self, target: int)")]
                    ),
                    _vm._v(" -> bool:")
                  ]
                ),
                _c("br"),
                _vm._v("        p = self._head"),
                _c("br"),
                _vm._v("        "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("for")]
                ),
                _vm._v(" i "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("in")]
                ),
                _vm._v(" range(self._level_count - "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("1")]
                ),
                _vm._v(", "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("-1")]
                ),
                _vm._v(", "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("-1")]
                ),
                _vm._v("): "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-comment",
                    staticStyle: {
                      color: "#5c6370",
                      "font-style": "italic",
                      "line-height": "26px"
                    }
                  },
                  [
                    _vm._v(
                      "# 从最高索引层级不断搜索，如果当前层级没有，则下沉到低一级的层级"
                    )
                  ]
                ),
                _c("br"),
                _vm._v("            "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("while")]
                ),
                _vm._v(" p._forwards[i] "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("and")]
                ),
                _vm._v(" p._forwards[i]._data < target:"),
                _c("br"),
                _vm._v("                p = p._forwards[i]"),
                _c("br"),
                _c("br"),
                _vm._v("        "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("if")]
                ),
                _vm._v(" p._forwards["),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("0")]
                ),
                _vm._v("] "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("and")]
                ),
                _vm._v(" p._forwards["),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("0")]
                ),
                _vm._v("]._data == target:"),
                _c("br"),
                _vm._v("            "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("return")]
                ),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-literal",
                    staticStyle: { color: "#56b6c2", "line-height": "26px" }
                  },
                  [_vm._v("True")]
                ),
                _c("br"),
                _c("br"),
                _vm._v("        "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("return")]
                ),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-literal",
                    staticStyle: { color: "#56b6c2", "line-height": "26px" }
                  },
                  [_vm._v("False")]
                ),
                _c("br"),
                _c("br"),
                _vm._v("    "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-function",
                    staticStyle: { "line-height": "26px" }
                  },
                  [
                    _c(
                      "span",
                      {
                        staticClass: "hljs-keyword",
                        staticStyle: { color: "#c678dd", "line-height": "26px" }
                      },
                      [_vm._v("def")]
                    ),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        staticClass: "hljs-title",
                        staticStyle: { color: "#61aeee", "line-height": "26px" }
                      },
                      [_vm._v("add")]
                    ),
                    _c(
                      "span",
                      {
                        staticClass: "hljs-params",
                        staticStyle: { "line-height": "26px" }
                      },
                      [_vm._v("(self, num: int)")]
                    ),
                    _vm._v(" -> "),
                    _c(
                      "span",
                      {
                        staticClass: "hljs-keyword",
                        staticStyle: { color: "#c678dd", "line-height": "26px" }
                      },
                      [_vm._v("None")]
                    ),
                    _vm._v(":")
                  ]
                ),
                _c("br"),
                _vm._v("        level = self._random_level() "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-comment",
                    staticStyle: {
                      color: "#5c6370",
                      "font-style": "italic",
                      "line-height": "26px"
                    }
                  },
                  [_vm._v("# 随机生成索引层级")]
                ),
                _c("br"),
                _vm._v("        "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("if")]
                ),
                _vm._v(" self._level_count < level: "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-comment",
                    staticStyle: {
                      color: "#5c6370",
                      "font-style": "italic",
                      "line-height": "26px"
                    }
                  },
                  [_vm._v("# 如果当前层级小于 level, 则更新当前最高层级")]
                ),
                _c("br"),
                _vm._v("            self._level_count = level"),
                _c("br"),
                _vm._v("        new_node = ListNode(num) "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-comment",
                    staticStyle: {
                      color: "#5c6370",
                      "font-style": "italic",
                      "line-height": "26px"
                    }
                  },
                  [_vm._v("# 生成新结点")]
                ),
                _c("br"),
                _vm._v("        new_node._forwards = ["),
                _c(
                  "span",
                  {
                    staticClass: "hljs-literal",
                    staticStyle: { color: "#56b6c2", "line-height": "26px" }
                  },
                  [_vm._v("None")]
                ),
                _vm._v("] * level"),
                _c("br"),
                _vm._v("        update = [self._head] * self._level_count "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-comment",
                    staticStyle: {
                      color: "#5c6370",
                      "font-style": "italic",
                      "line-height": "26px"
                    }
                  },
                  [
                    _vm._v(
                      "# 用来保存各个索引层级插入的位置，也就是新结点的前驱结点"
                    )
                  ]
                ),
                _c("br"),
                _c("br"),
                _vm._v("        p = self._head"),
                _c("br"),
                _vm._v("        "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("for")]
                ),
                _vm._v(" i "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("in")]
                ),
                _vm._v(" range(self._level_count - "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("1")]
                ),
                _vm._v(", "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("-1")]
                ),
                _vm._v(", "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("-1")]
                ),
                _vm._v("): "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-comment",
                    staticStyle: {
                      color: "#5c6370",
                      "font-style": "italic",
                      "line-height": "26px"
                    }
                  },
                  [
                    _vm._v(
                      "# 整段代码获取新插入结点在各个索引层级的前驱节点，需要注意的是这里是使用的当前最高层级来循环。"
                    )
                  ]
                ),
                _c("br"),
                _vm._v("            "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("while")]
                ),
                _vm._v(" p._forwards[i] "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("and")]
                ),
                _vm._v(" p._forwards[i]._data < num:"),
                _c("br"),
                _vm._v("                p = p._forwards[i]"),
                _c("br"),
                _c("br"),
                _vm._v("            update[i] = p"),
                _c("br"),
                _c("br"),
                _vm._v("        "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("for")]
                ),
                _vm._v(" i "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("in")]
                ),
                _vm._v(" range(level): "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-comment",
                    staticStyle: {
                      color: "#5c6370",
                      "font-style": "italic",
                      "line-height": "26px"
                    }
                  },
                  [_vm._v("# 更新需要更新的各个索引层级")]
                ),
                _c("br"),
                _vm._v(
                  "            new_node._forwards[i] = update[i]._forwards[i]"
                ),
                _c("br"),
                _vm._v("            update[i]._forwards[i] = new_node"),
                _c("br"),
                _c("br"),
                _vm._v("    "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-function",
                    staticStyle: { "line-height": "26px" }
                  },
                  [
                    _c(
                      "span",
                      {
                        staticClass: "hljs-keyword",
                        staticStyle: { color: "#c678dd", "line-height": "26px" }
                      },
                      [_vm._v("def")]
                    ),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        staticClass: "hljs-title",
                        staticStyle: { color: "#61aeee", "line-height": "26px" }
                      },
                      [_vm._v("erase")]
                    ),
                    _c(
                      "span",
                      {
                        staticClass: "hljs-params",
                        staticStyle: { "line-height": "26px" }
                      },
                      [_vm._v("(self, num: int)")]
                    ),
                    _vm._v(" -> bool:")
                  ]
                ),
                _c("br"),
                _vm._v("        update = ["),
                _c(
                  "span",
                  {
                    staticClass: "hljs-literal",
                    staticStyle: { color: "#56b6c2", "line-height": "26px" }
                  },
                  [_vm._v("None")]
                ),
                _vm._v("] * self._level_count"),
                _c("br"),
                _vm._v("        p = self._head"),
                _c("br"),
                _vm._v("        "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("for")]
                ),
                _vm._v(" i "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("in")]
                ),
                _vm._v(" range(self._level_count - "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("1")]
                ),
                _vm._v(", "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("-1")]
                ),
                _vm._v(", "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("-1")]
                ),
                _vm._v("):"),
                _c("br"),
                _vm._v("            "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("while")]
                ),
                _vm._v(" p._forwards[i] "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("and")]
                ),
                _vm._v(" p._forwards[i]._data < num:"),
                _c("br"),
                _vm._v("                p = p._forwards[i]"),
                _c("br"),
                _vm._v("            update[i] = p"),
                _c("br"),
                _c("br"),
                _vm._v("        "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("if")]
                ),
                _vm._v(" p._forwards["),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("0")]
                ),
                _vm._v("] "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("and")]
                ),
                _vm._v(" p._forwards["),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("0")]
                ),
                _vm._v("]._data == num:"),
                _c("br"),
                _vm._v("            "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("for")]
                ),
                _vm._v(" i "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("in")]
                ),
                _vm._v(" range(self._level_count - "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("1")]
                ),
                _vm._v(", "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("-1")]
                ),
                _vm._v(", "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("-1")]
                ),
                _vm._v("):"),
                _c("br"),
                _vm._v("                "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("if")]
                ),
                _vm._v(" update[i]._forwards[i] "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("and")]
                ),
                _vm._v(" update[i]._forwards[i]._data == num:"),
                _c("br"),
                _vm._v(
                  "                    update[i]._forwards[i] = update[i]._forwards[i]._forwards[i]"
                ),
                _c("br"),
                _vm._v("            "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("return")]
                ),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-literal",
                    staticStyle: { color: "#56b6c2", "line-height": "26px" }
                  },
                  [_vm._v("True")]
                ),
                _c("br"),
                _c("br"),
                _vm._v("        "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("while")]
                ),
                _vm._v(" self._level_count > "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("1")]
                ),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("and")]
                ),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("not")]
                ),
                _vm._v(" self._head._forwards[self._level_count]:"),
                _c("br"),
                _vm._v("            self._level_count -= "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("1")]
                ),
                _c("br"),
                _c("br"),
                _vm._v("        "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("return")]
                ),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-literal",
                    staticStyle: { color: "#56b6c2", "line-height": "26px" }
                  },
                  [_vm._v("False")]
                ),
                _c("br"),
                _c("br"),
                _vm._v("    "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-function",
                    staticStyle: { "line-height": "26px" }
                  },
                  [
                    _c(
                      "span",
                      {
                        staticClass: "hljs-keyword",
                        staticStyle: { color: "#c678dd", "line-height": "26px" }
                      },
                      [_vm._v("def")]
                    ),
                    _vm._v(" "),
                    _c(
                      "span",
                      {
                        staticClass: "hljs-title",
                        staticStyle: { color: "#61aeee", "line-height": "26px" }
                      },
                      [_vm._v("_random_level")]
                    ),
                    _c(
                      "span",
                      {
                        staticClass: "hljs-params",
                        staticStyle: { "line-height": "26px" }
                      },
                      [
                        _vm._v("(self, p: float = "),
                        _c(
                          "span",
                          {
                            staticClass: "hljs-number",
                            staticStyle: {
                              color: "#d19a66",
                              "line-height": "26px"
                            }
                          },
                          [_vm._v("0.5")]
                        ),
                        _vm._v(")")
                      ]
                    ),
                    _vm._v(" -> int:")
                  ]
                ),
                _c("br"),
                _vm._v("        level = "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("1")]
                ),
                _c("br"),
                _vm._v("        "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("while")]
                ),
                _vm._v(" random.random() < p "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("and")]
                ),
                _vm._v(" level < self._MAX_LEVEL:"),
                _c("br"),
                _vm._v("            level += "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-number",
                    staticStyle: { color: "#d19a66", "line-height": "26px" }
                  },
                  [_vm._v("1")]
                ),
                _c("br"),
                _vm._v("        "),
                _c(
                  "span",
                  {
                    staticClass: "hljs-keyword",
                    staticStyle: { color: "#c678dd", "line-height": "26px" }
                  },
                  [_vm._v("return")]
                ),
                _vm._v(" level"),
                _c("br")
              ]
            )
          ]
        ),
        _c(
          "h3",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "20px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [_vm._v("复杂度分析")]),
            _c("span", {
              staticClass: "suffix",
              staticStyle: { display: "none" }
            })
          ]
        ),
        _c(
          "h4",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "18px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [_vm._v("空间复杂度")]),
            _c("span", {
              staticClass: "suffix",
              staticStyle: { display: "none" }
            })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(
              " 跳表通过建立索引提高查找的效率，是典型的“空间换时间”的思想，那么空间复杂度到底是多少呢？ 我们假设原始链表有 "
            ),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: { src: "https://juejin.im/equation?tex=N", alt: "" }
                  })
                ])
              ]
            ),
            _vm._v(" 个元素，一级索引有 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=\\frac{N}{2}",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v("，二级索引有 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=\\frac{N}{4}",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v("，k 级索引有 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=\\frac{N}{2^k}",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(" 个元素，而最高级索引一般有 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: { src: "https://juejin.im/equation?tex=2", alt: "" }
                  })
                ])
              ]
            ),
            _vm._v(" 个元素。所以，索引结点的总和是 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src:
                        "https://juejin.im/equation?tex=\\frac{N}{2} + \\frac{N}{2^2} + \\frac{N}{2^3}+...+ 2 \\approx N-2",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(" ，因此可以得出空间复杂度是 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=O(N)",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(", "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: { src: "https://juejin.im/equation?tex=N", alt: "" }
                  })
                ])
              ]
            ),
            _vm._v(" 是原始链表的长度。 ")
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(
              " 上面的假设前提是每两个结点抽出一个结点到上层索引。那么如果我们每三个结点抽出一个结点到上层索引，那么索引总和就是 "
            ),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src:
                        "https://juejin.im/equation?tex=\\frac{N}{3} + \\frac{N}{3^2} + \\frac{N}{3^3} + 9 + 3 + 1 \\approx \\frac{N}{2}",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(
              ", 额外空间减少了一半。因此我们可以通过减少索引的数量来减少空间复杂度，但是相应的会带来查找效率一定的下降。而具体这个阈值该如何选择，则要看具体的应用场景。 "
            )
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(
              " 另外需要注意的是，在实际的应用当中，索引结点往往不需要存储完整的对象，只需要存储对象的 key 和对应的指针即可。因此当对象比索引结点占用空间大很多时，索引结点所占的额外空间（相对原始数据来讲）又可以忽略不计了。 "
            )
          ]
        ),
        _c(
          "h4",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "18px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [_vm._v("时间复杂度")]),
            _c("span", {
              staticClass: "suffix",
              staticStyle: { display: "none" }
            })
          ]
        ),
        _c(
          "h5",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "16px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [
              _vm._v("查找的时间复杂度")
            ]),
            _c("span", {
              staticClass: "suffix",
              staticStyle: { display: "none" }
            })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(" 来看看时间复杂度 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=O(logN)",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(" 是如何推导出来的，首先我们看下图： "),
            _c("img", {
              staticStyle: {
                display: "block",
                margin: "0 auto",
                width: "auto",
                "max-width": "100%"
              },
              attrs: {
                src:
                  "https://tva1.sinaimg.cn/large/00831rSTly1gdl82ermgfj31rr0rs77h.jpg",
                alt: ""
              }
            })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(
              " 如上图所示，此处我们假设每两个结点会抽出一个结点来作为上一级索引的结点。也就是说，原始链表有 "
            ),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: { src: "https://juejin.im/equation?tex=N", alt: "" }
                  })
                ])
              ]
            ),
            _vm._v(" 个元素，一级索引有 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=\\frac{N}{2}",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v("，二级索引有 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=\\frac{N}{4}",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v("，k 级索引有 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=\\frac{N}{2^k}",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(" 个元素，而最高级索引一般有 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: { src: "https://juejin.im/equation?tex=2", alt: "" }
                  })
                ])
              ]
            ),
            _vm._v(" 个元素。 也就是说：最高级索引 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: { src: "https://juejin.im/equation?tex=x", alt: "" }
                  })
                ])
              ]
            ),
            _vm._v(" 满足 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=2 = N/2^x",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(", 由此公式可以得出 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=x = \\log_2(N)-1",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(" , 加上原始数据这一层， 跳表的总高度为 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=h = \\log_2(N)",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(
              "。 那么，我们在查找过程中每一层索引最多遍历几个元素呢？从图中我们可以看出来每一层最多需要遍历 3 个结点。 因此，由公式 "
            ),
            _c(
              "code",
              {
                staticStyle: {
                  "font-size": "14px",
                  "word-wrap": "break-word",
                  padding: "2px 4px",
                  "border-radius": "4px",
                  margin: "0 2px",
                  "background-color": "rgba(27,31,35,.05)",
                  "font-family":
                    "Operator Mono, Consolas, Monaco, Menlo, monospace",
                  "word-break": "break-all",
                  color: "rgb(239, 112, 96)"
                }
              },
              [_vm._v("时间复杂度 = 索引高度*每层索引遍历元素个数")]
            ),
            _vm._v("， 可以得出跳表中查找一个元素的时间复杂度为 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src:
                        "https://juejin.im/equation?tex=O(3 \\times \\log(N))",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v("，省略常数即为 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=O(\\log(N))",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v("。 ")
          ]
        ),
        _c(
          "h5",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "16px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [
              _vm._v("插入的时间复杂度")
            ]),
            _c("span", {
              staticClass: "suffix",
              staticStyle: { display: "none" }
            })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [_vm._v(" 跳表的插入分为两部分操作： ")]
        ),
        _c(
          "ol",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              color: "black",
              "list-style-type": "decimal"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [
                  _vm._v(" 寻找到对应的位置，时间复杂度为 "),
                  _c(
                    "span",
                    {
                      staticClass: "span-inline-equation",
                      staticStyle: { cursor: "pointer" }
                    },
                    [
                      _c("span", [
                        _c("img", {
                          staticClass: "equation",
                          staticStyle: {
                            margin: "0 auto",
                            width: "auto",
                            "max-width": "100%",
                            display: "inline"
                          },
                          attrs: {
                            src: "https://juejin.im/equation?tex=O(logN)",
                            alt: ""
                          }
                        })
                      ])
                    ]
                  ),
                  _vm._v(", "),
                  _c(
                    "span",
                    {
                      staticClass: "span-inline-equation",
                      staticStyle: { cursor: "pointer" }
                    },
                    [
                      _c("span", [
                        _c("img", {
                          staticClass: "equation",
                          staticStyle: {
                            margin: "0 auto",
                            width: "auto",
                            "max-width": "100%",
                            display: "inline"
                          },
                          attrs: {
                            src: "https://juejin.im/equation?tex=N",
                            alt: ""
                          }
                        })
                      ])
                    ]
                  ),
                  _vm._v(" 为链表长度。 ")
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [
                  _vm._v(" 插入数据。我们在前面已经推导出跳表索引的高度为 "),
                  _c(
                    "span",
                    {
                      staticClass: "span-inline-equation",
                      staticStyle: { cursor: "pointer" }
                    },
                    [
                      _c("span", [
                        _c("img", {
                          staticClass: "equation",
                          staticStyle: {
                            margin: "0 auto",
                            width: "auto",
                            "max-width": "100%",
                            display: "inline"
                          },
                          attrs: {
                            src: "https://juejin.im/equation?tex=logN",
                            alt: ""
                          }
                        })
                      ])
                    ]
                  ),
                  _vm._v(
                    "。 因此，我们将数据插入到各层索引中的最坏时间复杂度为 "
                  ),
                  _c(
                    "span",
                    {
                      staticClass: "span-inline-equation",
                      staticStyle: { cursor: "pointer" }
                    },
                    [
                      _c("span", [
                        _c("img", {
                          staticClass: "equation",
                          staticStyle: {
                            margin: "0 auto",
                            width: "auto",
                            "max-width": "100%",
                            display: "inline"
                          },
                          attrs: {
                            src: "https://juejin.im/equation?tex=O(logN)",
                            alt: ""
                          }
                        })
                      ])
                    ]
                  ),
                  _vm._v("。 ")
                ]
              )
            ])
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(" 综上所述，插入操作的时间复杂度为 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=O(logN)",
                      alt: ""
                    }
                  })
                ])
              ]
            )
          ]
        ),
        _c(
          "h5",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "16px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [
              _vm._v("删除的时间复杂度")
            ]),
            _c("span", {
              staticClass: "suffix",
              staticStyle: { display: "none" }
            })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(
              " 跳表的删除操作和查找类似，只是需要在查找后删除对应的元素。查找操作的时间复杂度是 "
            ),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=logN",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(
              "。那么后面删除部分代码的时间复杂度是多少呢？我们知道在跳表中，每一层索引都是一个有序的单链表，而删除单个元素的复杂度为 "
            ),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=O(1)",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v(", 索引层数为 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=logN",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v("，因此删除部分代码的时间复杂度为"),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=logN",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v("。那么删除操作的总时间复杂度为- "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src:
                        "https://juejin.im/equation?tex=O(logN) + O(logN) = 2O(logN)",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v("。我们忽略常数部分，删除元素的时间复杂度为 "),
            _c(
              "span",
              {
                staticClass: "span-inline-equation",
                staticStyle: { cursor: "pointer" }
              },
              [
                _c("span", [
                  _c("img", {
                    staticClass: "equation",
                    staticStyle: {
                      margin: "0 auto",
                      width: "auto",
                      "max-width": "100%",
                      display: "inline"
                    },
                    attrs: {
                      src: "https://juejin.im/equation?tex=O(logN)",
                      alt: ""
                    }
                  })
                ])
              ]
            ),
            _vm._v("。 ")
          ]
        ),
        _c(
          "h3",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "20px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [_vm._v("扩展")]),
            _c("span", {
              staticClass: "suffix",
              staticStyle: { display: "none" }
            })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(
              " 在工业上，使用跳表的场景很多，下面做些简单的介绍，有兴趣的可以深入了解： "
            )
          ]
        ),
        _c(
          "ol",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              color: "black",
              "list-style-type": "decimal"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [_vm._v(" redis 当中 zset 使用了跳表 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [_vm._v(" HBase MemStore 当中使用了跳表 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    color: "rgb(1,1,1)",
                    "font-weight": "500"
                  }
                },
                [
                  _vm._v(
                    " LevelDB 和 RocksDB 都是 LSM Tree 结构的数据库，内部的 MemTable 当中都使用了跳表 "
                  )
                ]
              )
            ])
          ]
        ),
        _c(
          "h1",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "24px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [_vm._v("配套网站")]),
            _c("span", { staticClass: "suffix" })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _vm._v(" 大家可以直接访问查看本书配套的 "),
            _c(
              "a",
              {
                staticStyle: {
                  "text-decoration": "none",
                  "word-wrap": "break-word",
                  "font-weight": "bold",
                  color: "rgb(239, 112, 96)",
                  "border-bottom": "1px solid rgb(239, 112, 96)"
                },
                attrs: { href: "https://leetcode-solution.cn/book" }
              },
              [_vm._v("配套代码")]
            ),
            _vm._v(
              "，包括 JavaScript，Java，Python 和 C++。 也欢迎大家留言给我们自己想要支持的语言，我们会郑重考虑大家的意见。 "
            )
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "font-size": "16px",
              "padding-top": "8px",
              "padding-bottom": "8px",
              margin: "0",
              "line-height": "26px",
              color: "black"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [_vm._v(" 效果大概是这样的： ")]
        ),
        _c(
          "figure",
          {
            staticStyle: {
              margin: "0",
              "margin-top": "10px",
              "margin-bottom": "10px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("img", {
              staticStyle: {
                display: "block",
                margin: "0 auto",
                width: "auto",
                "max-width": "100%"
              },
              attrs: {
                src:
                  "https://tva1.sinaimg.cn/large/00831rSTly1gdl80ojj2rj31tw0u00x1.jpg",
                alt: ""
              }
            })
          ]
        ),
        _c(
          "h1",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              "font-weight": "bold",
              color: "black",
              "font-size": "24px"
            },
            attrs: { "data-tool": "mdnice编辑器" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c("span", { staticClass: "content" }, [_vm._v("预定")]),
            _c("span", { staticClass: "suffix" })
          ]
        ),
        _c("p", [
          _c(
            "a",
            {
              attrs: {
                href:
                  "https://union-click.jd.com/jdc?e=618|pc|&p=JF8BAOAJK1olXgEGUV9cAE4VCl8IGloXWgYCV1tcAE8TBl9MRANLAjZbERscSkAJHTdNTwcKBlMdBgABFksWAm0PG1sWWAcKUFpYFxJSXzI4GAhrA0IDUiM-FjFxQQtKWFx2AlkYElJROEonA24JG1MQWgMEUW5tCEwnQgEIGlkdXAQHUW5cOEsQBmkNElwWXgYGUFxtD0seMzRddVwVWFVWB10PXxtDVDo4K2sWbQECXRMcWgYnM284GGtXMwUKAw5VDEpDA2oBGl4SXwELUF5fCkkQVDtdH1JGX1EAZFxcCU8eMw"
              }
            },
            [_vm._v("实体版购书链接1")]
          )
        ]),
        _c("p", [
          _c(
            "a",
            {
              attrs: {
                href:
                  "https://union-click.jd.com/jdc?e=618|pc|&p=JF8BAM0JK1olXDYCV1ZfC0kWB19MRANLAjZbERscSkAJHTdNTwcKBlMdBgABFksUC20LGVoRQl9HCANtQDt-RAZPBQFwJ0ZEA1hDWh9wdTB2a1cZbQcyVF9cCEMSBGoOHmslXQEyAjBdCUoWAm4NG14WbQcyVFlYDk4eBG8LG1gUXzYFVFdtUx55BG8NSA9GXlRVBAoKXXsnM2w4HFscEEdQGW5tCHsUMy1mE14WDQcCUVxfWk9EBmkOSQsWDwVSVwpcWEoXUG5aElslXwcDUFdt"
              }
            },
            [_vm._v("实体版购书链接2")]
          )
        ]),
        _c("p", [
          _c(
            "a",
            {
              attrs: {
                href:
                  "https://union-click.jd.com/jdc?e=&p=JF8BAL0JK1olXDYAVVhfD04UAl9MRANLAjZbERscSkAJHTdNTwcKBlMdBgABFkkWBW0PHlgUQl9HCANtcS0SdTFvWVt1X3BkVV4Kc0JxYRtPe1cZbQcyVF9cCEMSBGoOHmslXQEyHzBcOEonA2gKE1oVWwEKXV5cAXsQA2Y4QA57WgYHBwoOCxlAUztfTmslbQUyZG5dOEgnQQFaSQ5FWQYFB1cODhgSVDpaS1hFDwQLUlwJAU5DAWcJHWsXXAcGXW4"
              }
            },
            [_vm._v("电子版购书链接")]
          )
        ]),
        _c("img", {
          staticStyle: {
            display: "block",
            margin: "0 auto",
            width: "auto",
            "max-width": "100%"
          },
          attrs: {
            src:
              "https://tva1.sinaimg.cn/large/008i3skNly1gughg8kx8sj60dw0fagma02.jpg",
            alt: ""
          }
        })
      ]
    )
  }
]
render._withStripped = true

export { render, staticRenderFns }"}]}