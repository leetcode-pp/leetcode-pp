{"remainingRequest":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luxiaopeng/github/leetcode-pp/src/views/91/91algo.vue?vue&type=style&index=0&id=3042a601&lang=less&scoped=true&","dependencies":[{"path":"/Users/luxiaopeng/github/leetcode-pp/src/views/91/91algo.vue","mtime":1682748588300},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/css-loader/dist/cjs.js","mtime":1594812194251},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1631347730543},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/postcss-loader/src/index.js","mtime":1582876651724},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/less-loader/dist/cjs.js","mtime":1584094546781},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js","mtime":1582876651155},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js","mtime":1631347730543}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm0tdG9wLWJvdHRvbS1zbSB7CiAgbWFyZ2luOiAxMHB4IDA7Cn0KLmFsaWduLXIgewogIHRleHQtYWxpZ246IHJpZ2h0Owp9Ci5hbGlnbi1sIHsKICB0ZXh0LWFsaWduOiBsZWZ0Owp9Ci5hbGlnbi1jIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KLmVhc3kgewogIGNvbG9yOiBncmVlbjsKfQoubWVkaXVtIHsKICBjb2xvcjogb3JhbmdlOwp9Ci5oYXJkIHsKICBjb2xvcjogcmVkOwp9Ci5teS1zb2x1dGlvbiB7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiAxMHB4IDA7Cn0KLnRpbWVsaW5lIHsKICBtYXJnaW46IDAgYXV0bzsKICAvLyB3aWR0aDogNDAwcHg7Cn0KCi5tb3JlIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7CiAgd2lkdGg6IDIwMHB4OwogIHNwYW4gewogICAgaGVpZ2h0OiAyNHB4OwogICAgbGluZS1oZWlnaHQ6IDI0cHg7CiAgfQp9Ci50aW1lIHsKICBmb250LXNpemU6IDI0cHg7CiAgY29sb3I6ICMwMGE2ZGQ7Cn0KLmljb24gewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBtYXJnaW46IDAgMTBweDsKfQoudGVhY2hlcnMsCi5zdHVkZW50cyB7CiAgbWFyZ2luOiAyMHB4IGF1dG87Cn0KLmhlbGxvIHsKICBtYXJnaW46IDEwcHggYXV0bzsKfQoKLmNvZGUtYnRucyB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgbWFyZ2luOiAxMHB4IDBweDsKfQouY29kZS1wYW5lbCB7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKICBib3JkZXItcmFkaXVzOiA2cHg7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKfQo="},{"version":3,"sources":["91algo.vue"],"names":[],"mappingsiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"91algo.vue","sourceRoot":"src/views/91","sourcesContent":["<template>\n  <div>\n    <div v-if=\"!started\">\n      <div>\n        我们\n        <span class=\"time\">{{\n          new Date(startTime).toLocaleDateString('en-CA')\n        }}</span>\n        见~\n      </div>\n\n      <counter :time=\"time\" />\n    </div>\n    <a-spin :spinning=\"fetchingUserInfo\">\n      <div v-if=\"!pay\">\n        <a-alert\n          :message=\"\n            errorMessage + (noCheck ? '(由于连续七天未打卡，已被移除)' : '')\n          \"\n          type=\"error\"\n        />\n        <a-button v-if=\"!name\" type=\"link\" :href=\"loginUrl\"\n          >Github 登录</a-button\n        >\n        <a-button\n          type=\"link\"\n          href=\"https://github.com/azl397985856/leetcode/discussions/532\"\n          >活动介绍及报名方式</a-button\n        >\n      </div>\n\n      <div class=\"hello\" v-if=\"name\">\n        <a-avatar :size=\"64\" :src=\"avatar\" />\n        <div>\n          欢迎回来，{{ name }} （{{ login }}）~ 今天有没有比昨天进步一点点呢？\n\n          <a-button type=\"link\" @click=\"handlLogoutClick\">退出登录</a-button>\n        </div>\n      </div>\n      <div>\n        <b>\n          {{\n            allCheck\n              ? '少年好武功啊！竟然满勤？坚持下去，活动结束的抽奖我看好你哦~'\n              : ''\n          }}\n        </b>\n      </div>\n    </a-spin>\n\n    <div>\n      <!-- 正在为大家准备讲义~ TODO: 讲师介绍，讲义查看，打卡跳到\n      Github（做到如果不打卡，\n      用这个网站就够了就行了。再多一点新花样，比如上面提到的讲师介绍等等） -->\n\n      <a-tabs :activeKey=\"activeTab\" @change=\"handleActiveTabChange\">\n        <a-tab-pane key=\"teachers\" tab=\"讲师介绍\">\n          <a-list\n            item-layout=\"horizontal\"\n            :data-source=\"teachers\"\n            class=\"teachers\"\n          >\n            <a-list-item slot=\"renderItem\" slot-scope=\"item\">\n              <a-list-item-meta\n                :description=\"item.description || '这个人太懒了，什么也没有写'\"\n              >\n                <a slot=\"title\" :href=\"item.homepage\">{{ item.title }}</a>\n                <a-avatar slot=\"avatar\" :src=\"item.avatar\" />\n              </a-list-item-meta>\n              <div class=\"more\">\n                <a-tag\n                  :color=\"item.color\"\n                  :key=\"item.name\"\n                  v-for=\"item in item.modules\"\n                >\n                  {{ item.name }}\n                </a-tag>\n                <a-button\n                  type=\"link\"\n                  v-if=\"item.homepage\"\n                  :href=\"item.homepage\"\n                  target=\"_blank\"\n                  >关注 ta</a-button\n                >\n              </div>\n            </a-list-item>\n          </a-list>\n        </a-tab-pane>\n        <a-tab-pane key=\"agenda\" tab=\"时间表\">\n          <div class=\"timeline\">\n            <a-timeline mode=\"alternate\">\n              <a-timeline-item color=\"green\">\n                <h3>先导篇（{{ timeRange.basic[0] }} 前）</h3>\n                <p v-for=\"lecture in introLectures\" :key=\"lecture.id\">\n                  {{ lecture.title }}\n                </p>\n\n                <p />\n              </a-timeline-item>\n              <a-timeline-item :color=\"basicActive() ? 'green' : 'gray'\">\n                <h3>\n                  基础篇 （{{ timeRange.basic[0] }} - {{ timeRange.basic[1] }}）\n                </h3>\n                <p v-for=\"lecture in basicLectures\" :key=\"lecture.id\">\n                  {{ lecture.title }}\n                </p>\n              </a-timeline-item>\n\n              <a-timeline-item :color=\"topicActive() ? 'green' : 'gray'\">\n                <h3>\n                  专题篇 （{{ timeRange.topic[0] }} - {{ timeRange.topic[1] }}）\n                </h3>\n                <p v-for=\"lecture in topicLectures\" :key=\"lecture.id\">\n                  {{ lecture.title }}\n                </p>\n              </a-timeline-item>\n              <a-timeline-item :color=\"advanceActive() ? 'green' : 'gray'\">\n                <h3>\n                  进阶篇 （{{ timeRange.advanced[0] }} -\n                  {{ timeRange.advanced[1] }}）\n                </h3>\n                <p v-for=\"lecture in advanceLectures\" :key=\"lecture.id\">\n                  {{ lecture.title }}\n                </p>\n              </a-timeline-item>\n            </a-timeline>\n          </div>\n        </a-tab-pane>\n        <a-tab-pane key=\"sign\" tab=\"打卡\" :disabled=\"!pay\">\n          <!-- 后期考虑使用 https://microsoft.github.io/monaco-editor/index.html 来进行本地打卡 -->\n          <div v-if=\"dailyProblem.issue_number\">\n            <!-- 本期暂时不支持在此打卡，还请大家去\n            <a-button\n              type=\"link\"\n              :href=\"\n                'https://github.com/leetcode-pp/91alg-5/issues/' +\n                  dailyProblem.issue_number\n              \"\n              target=\"_blank\"\n              >仓库</a-button\n            >\n            找到当天的题目进行打卡~ (如果出现 404 请参考\n            <a @click=\"$router.push({ query: { tab: 'faq' } })\"\n              >FAQ 的解决方案</a\n            >) -->\n          </div>\n          <div v-else>\n            仓库暂时没有更新今天的题目，会有大约一个小时以内的延迟，大家耐心等待下哦~\n          </div>\n          <div>\n            <a-button\n              type=\"link\"\n              v-if=\"dailyProblem.day\"\n              :href=\"\n                '/solutionDetail?type=3&id=' +\n                  dailyProblem.day +\n                  '&max_id=' +\n                  2 || getDay()\n              \"\n              >查看官方题解</a-button\n            >\n\n            <a-button type=\"primary\" size=\"small\" @click=\"showHistory = true\">\n              历史每日一题\n            </a-button>\n          </div>\n          <a-drawer\n            width=\"400\"\n            title=\"历史每日一题\"\n            placement=\"right\"\n            :closable=\"true\"\n            @close=\"showHistory = false\"\n            :visible=\"showHistory\"\n          >\n            <a-calendar\n              :disabledDate=\"disabledDate\"\n              :fullscreen=\"false\"\n              @change=\"onDateChanged\"\n            >\n              <template slot=\"dateFullCellRender\" slot-scope=\"value\">{{\n                renderDay(value)\n              }}</template>\n            </a-calendar>\n          </a-drawer>\n          <a-spin :spinning=\"fetchingDailyProblem\">\n            <Q :dailyProblem=\"dailyProblem\" />\n          </a-spin>\n\n          <div>\n            <!-- <a-form\n              v-show=\"lcAccountFormShow\"\n              :form=\"form\"\n              @submit=\"handleLcAccountLogin\"\n            >\n              <a-form-item\n                label=\"用户名\"\n                :label-col=\"{ span: 5 }\"\n                :wrapper-col=\"{ span: 12 }\"\n              >\n                <a-input v-decorator=\"['login']\" />\n              </a-form-item>\n              <a-form-item\n                label=\"密码\"\n                :label-col=\"{ span: 5 }\"\n                :wrapper-col=\"{ span: 12 }\"\n              >\n                <a-input type=\"password\" v-decorator=\"['password']\" />\n              </a-form-item>\n              <a-form-item :wrapper-col=\"{ span: 12, offset: 5 }\">\n                <a-button type=\"primary\" html-type=\"submit\"\n                  >登录 LeetCode</a-button\n                >\n              </a-form-item>\n            </a-form>\n\n            <div class=\"code-btns\">\n              <a-select\n                :disabled=\"lcAccountFormShow\"\n                :default-value=\"codeLanguage\"\n                style=\"width: 120px\"\n                v-model=\"codeLanguage\"\n              >\n                <a-select-option\n                  v-for=\"item in supportLanguage\"\n                  :value=\"item\"\n                  :key=\"item\"\n                >\n                  {{ item }}\n                </a-select-option>\n              </a-select>\n              <a-button\n                :disabled=\"lcAccountFormShow\"\n                @click=\"submitCode\"\n                type=\"primary\"\n              >\n                提交代码\n              </a-button>\n            </div>\n\n            <code-editor\n              :theme=\"codeTheme\"\n              :language=\"codeLanguage\"\n              ref=\"codeEditor\"\n              class=\"code-panel\"\n            ></code-editor> -->\n\n            <div id=\"gitalk-container\" style=\"text-align: left\"></div>\n          </div>\n        </a-tab-pane>\n        <a-tab-pane key=\"jy0\" tab=\"讲义（先导篇）\">\n          <div style=\"margin: 10px 0\">\n            最近更新时间： {{ new Date(meta.lectures.intro.lastUpdateTime) }}\n          </div>\n          <card :cards=\"introLectures\" :loading=\"fetchingLectures\" />\n        </a-tab-pane>\n        <a-tab-pane key=\"jy1\" tab=\"讲义（基础篇）\" :disabled=\"disableBasic\">\n          <div style=\"margin: 10px 0\">\n            最近更新时间： {{ new Date(meta.lectures.basic.lastUpdateTime) }}\n          </div>\n          <card :cards=\"basicLectures\" :loading=\"fetchingLectures\" />\n        </a-tab-pane>\n\n        <a-tab-pane key=\"jy2\" tab=\"讲义（专题篇）\" :disabled=\"disableTopic\">\n          <div style=\"margin: 10px 0\">\n            最近更新时间： {{ new Date(meta.lectures.topic.lastUpdateTime) }}\n          </div>\n          <card :cards=\"topicLectures\" :loading=\"fetchingLectures\" />\n        </a-tab-pane>\n        <a-tab-pane key=\"jy3\" tab=\"讲义（进阶篇）\" :disabled=\"disableAdvanced\">\n          <div style=\"margin: 10px 0\">\n            最近更新时间： {{ new Date(meta.lectures.advance.lastUpdateTime) }}\n          </div>\n          <card :cards=\"advanceLectures\" :loading=\"fetchingLectures\" />\n        </a-tab-pane>\n\n        <!-- <a-tab-pane key=\"ebook\" tab=\"电子书\" disabled>\n          尚未开启\n        </a-tab-pane> -->\n\n        <a-tab-pane key=\"top-students\" tab=\"上榜墙\">\n          <a-radio-group\n            v-model=\"currentStudentTab\"\n            @change=\"e => (currentStudentTab = e.target.value)\"\n          >\n            <a-radio-button value=\"ranking\"> 打卡排行榜 </a-radio-button>\n            <a-radio-button value=\"interview\">\n              往期优秀学员专访\n            </a-radio-button>\n          </a-radio-group>\n\n          <div v-if=\"currentStudentTab === 'ranking'\">\n            <a-spin :spinning=\"fetchingRank\">\n              <div style=\"margin: 10px 0\">\n                最近更新时间： {{ new Date(meta.checkIn.lastUpdateTime) }}\n              </div>\n              <ranking :rankings=\"rankings\" />\n            </a-spin>\n          </div>\n          <div v-else>\n            <a-list\n              item-layout=\"horizontal\"\n              :data-source=\"students\"\n              class=\"students\"\n            >\n              <a-list-item slot=\"renderItem\" slot-scope=\"item\">\n                <a-list-item-meta\n                  :description=\"\n                    item.description || '这个人太懒了，什么也没有写'\n                  \"\n                >\n                  <a slot=\"title\" :href=\"item.homepage\">{{ item.title }}</a>\n                  <a-avatar slot=\"avatar\" :src=\"item.avatar\" />\n                </a-list-item-meta>\n                <div class=\"more\">\n                  <a-tag\n                    :color=\"hashColor(item)\"\n                    :key=\"item\"\n                    v-for=\"item in item.tags\"\n                  >\n                    {{ item }}\n                  </a-tag>\n                  <a-button\n                    type=\"link\"\n                    :href=\"\n                      `/solutionDetail?type=4&id=${item.id}&max_id=${Math.max(\n                        ...students.map(q => q.id)\n                      )}`\n                    \"\n                    target=\"_blank\"\n                    >听听 ta 的故事</a-button\n                  >\n                </div>\n              </a-list-item>\n            </a-list>\n          </div>\n        </a-tab-pane>\n\n        <a-tab-pane key=\"my\" tab=\"我的\" :disabled=\"!pay\">\n          <a-radio-group\n            v-model=\"currentMyTab\"\n            @change=\"e => (currentMyTab = e.target.value)\"\n          >\n            <a-radio-button value=\"history\"> 打卡记录 </a-radio-button>\n            <a-radio-button value=\"homework\">\n              作业\n            </a-radio-button>\n          </a-radio-group>\n\n          <div v-if=\"currentMyTab === 'history'\">\n            <div style=\"margin: 10px 0\">\n              最近更新时间： {{ new Date(meta.dailyCheck.lastUpdateTime) }}\n            </div>\n            <div style=\"margin: 10px 0\">\n              上次全量更新时间：\n              {{ new Date(meta.dailyCheck.lastFulllyUpdateTime) }}\n            </div>\n\n            <div style=\"margin: 10px 0\">\n              这里的打卡记录\n              <b>不是实时的</b\n              >，如果你刚打完卡，这里没有看到是正常的，大家可以根据最近更新时间来辅助判断。\n            </div>\n\n            <div v-if=\"!fetchingPersonalProgress && mySolutions.length === 0\">\n              活动尚未开始~\n            </div>\n            <a-spin v-else :spinning=\"fetchingPersonalProgress\">\n              <a-radio-group\n                v-model=\"selectedTag\"\n                @change=\"onSelectedTagChange\"\n              >\n                <a-radio-button v-for=\"tag in allTags\" :value=\"tag\" :key=\"tag\">\n                  {{ tag }}\n                </a-radio-button>\n              </a-radio-group>\n\n              <div\n                :key=\"i\"\n                v-for=\"(solution, i) in mySolutions.filter(\n                  s => selectedTag === '全部' || s.tags.includes(selectedTag)\n                )\"\n                class=\"my-solution\"\n              >\n                <div v-if=\"solution\">\n                  {{\n                    solution.tags.length > 0\n                      ? '【' + solution.tags.join('，') + '】'\n                      : ''\n                  }}\n\n                  <span :class=\"getDifficultyClass(solution.difficulty)\">\n                    {{ getDifficulty(solution.difficulty) }}\n                  </span>\n                  <a-button\n                    type=\"link\"\n                    :href=\"\n                      solution.url ||\n                        'https://github.com/' +\n                          DAILY_CHECK_OWNER +\n                          '/' +\n                          DAILY_CHECK_REPO +\n                          '/issues/' +\n                          solution.issue_number\n                    \"\n                  >\n                    【Day {{ solution.day }}】{{ solution.title }}\n                  </a-button>\n                  <div class=\"icon\">\n                    <a-tooltip v-if=\"solution.onTime === true\">\n                      <template slot=\"title\"> 打卡成功 </template>\n                      <a-icon style=\"color: green\" type=\"check\" />\n                    </a-tooltip>\n\n                    <a-tooltip v-else-if=\"solution.onTime === false\">\n                      <template slot=\"title\"> 补卡成功 </template>\n                      <a-icon style=\"color: orange\" type=\"issues-close\" />\n                    </a-tooltip>\n\n                    <a-tooltip\n                      v-else-if=\"\n                        getDay() === i + 1 ||\n                          (getDay(meta.dailyCheck.lastUpdateTime) < getDay() &&\n                            getDay(lastFulllyUpdateTime) < getDay())\n                      \"\n                    >\n                      <template slot=\"title\">\n                        未打卡或者正在更新打卡状态（打卡后一般一个小时之内会更新）\n                      </template>\n                      <a-icon type=\"clock-circle\" />\n                    </a-tooltip>\n\n                    <a-icon style=\"color: red\" v-else type=\"close\" />\n                  </div>\n                </div>\n              </div>\n            </a-spin>\n          </div>\n          <div v-else>\n            <ul class=\"align-l\">\n              <!-- <div v-if=\"!leetcodeUsername\" class=\"align-c m-top-bottom-sm\">\n                抱歉，你还没有关联 LeetCode\n                账号。并且由于目前功能未开放，需要等到功能开启后联系 lucifer\n                告知你的 github 和 leetcode 账号进行关联。\n\n                <counter\n                  :time=\"upcommingContest.time\"\n                  :prefix=\"'下次周赛 Weekly ' + upcommingContest.id\"\n                />\n              </div> -->\n\n              <!-- <ol>\n                完成 3 次<a\n                  href=\"https://leetcode-cn.com/contest/\"\n                  target=\"_blank\"\n                  >竞赛</a\n                >\n                ({{\n                  contestRankings.length\n                }}/3)\n              </ol> -->\n\n              <ol\n                v-if=\"\n                  new Date().getTime() > new Date(timeRange.basic[0]).getTime()\n                \"\n              >\n                <div v-for=\"homework in homeworks.basic\" :key=\"homework.title\">\n                  <a-button type=\"link\" :href=\"homework.lectureUrl\">\n                    {{ homework.title }}</a-button\n                  >\n                  <div>\n                    {{ homework.desc }}\n                  </div>\n                  <a-button type=\"link\" :href=\"homework.issueUrl\">\n                    讨论\n                  </a-button>\n                </div>\n              </ol>\n\n              <ol\n                v-if=\"\n                  new Date().getTime() > new Date(timeRange.topic[0]).getTime()\n                \"\n              >\n                <div v-for=\"homework in homeworks.topic\" :key=\"homework.title\">\n                  <a-button type=\"link\" :href=\"homework.lectureUrl\">\n                    {{ homework.title }}</a-button\n                  >\n                  <div>\n                    {{ homework.desc }}\n                  </div>\n                  <a-button type=\"link\" :href=\"homework.issueUrl\">\n                    讨论\n                  </a-button>\n                </div>\n              </ol>\n\n              <ol\n                v-if=\"\n                  new Date().getTime() >\n                    new Date(timeRange.advanced[0]).getTime()\n                \"\n              >\n                <div\n                  v-for=\"homework in homeworks.advanced\"\n                  :key=\"homework.title\"\n                >\n                  <a-button type=\"link\" :href=\"homework.lectureUrl\">\n                    {{ homework.title }}</a-button\n                  >\n                  <div>\n                    {{ homework.desc }}\n                  </div>\n                  <a-button type=\"link\" :href=\"homework.issueUrl\">\n                    讨论\n                  </a-button>\n                </div>\n              </ol>\n            </ul>\n          </div>\n        </a-tab-pane>\n\n        <a-tab-pane key=\"faq\" tab=\"FAQ\"> <faq /> </a-tab-pane>\n      </a-tabs>\n    </div>\n  </div>\n</template>\n\n<script>\nimport counter from '@/components/Counter'\nimport 'gitalk/dist/gitalk.css'\nimport Gitalk from 'gitalk/dist/gitalk'\n// import request from '@/apis/request'\nimport Card from '@/components/Card'\nimport Rank from './ranking'\nimport Faq from './faq'\nimport {\n  getBasicLecture,\n  getIntroLecture,\n  getTopicLecture,\n  getAdvanceLecture,\n  getDailyProblem,\n  getMySolutions,\n  getRankings\n} from '@/apis/91'\nimport { getCommentApp } from '@/apis/github'\nimport { logout, getUserInfo } from '@/apis/user'\nimport Q from './QuestionDecription.vue'\nimport contests from './db/contest.json'\nimport baseContest from './db/baseContest.json'\nimport {\n  basicLectures,\n  introLectures,\n  advanceLectures,\n  topicLectures,\n  teachers,\n  timeRange,\n  homeworks\n} from './91.db.js'\nimport students from './students-talk'\nimport {\n  clientId,\n  originalHostname,\n  // hostname,\n  startTime,\n  DAILY_CHECK_REPO,\n  DAILY_CHECK_OWNER\n  // leetcodeConfig\n} from '../../config/index'\nimport { getMeta } from '@/apis/meta'\n// const {\n//   _91UsernameLsName,\n//   _91PwdLsName,\n//   lcSeesionCookieName,\n//   lcCsrftokenCookieName\n// } = leetcodeConfig\n// const lcDataKeys = [\n//   _91UsernameLsName,\n//   _91PwdLsName,\n//   lcSeesionCookieName,\n//   lcCsrftokenCookieName\n// ]\n// import CodeEditor from '../../components/Code'\n// import { message } from 'ant-design-vue'\n\nconst MS_PER_DAY = 24 * 60 * 60 * 1000\nconst DAYS_TO_PREPARE = 10 // 提前几天开放讲义\nconst DAYS_PER_WEEK = 7\nfunction getDay(date = new Date().getTime()) {\n  return ((date - startTime + MS_PER_DAY - 1) / MS_PER_DAY) >> 0\n}\n// 获取即将开始的下一次周赛信息\nfunction getUpcommingContest() {\n  let d = 0\n  const now = new Date().getTime()\n  while (baseContest.time + d * DAYS_PER_WEEK * MS_PER_DAY < now) {\n    d += 1\n  }\n  return {\n    id: baseContest.id + d,\n    time: baseContest.time + d * DAYS_PER_WEEK * MS_PER_DAY,\n    passed: false\n  }\n}\n\n// 将 id 和 tag 合并为 labels，然后根据 labels 查询仓库下符合条件的 issue，然后将 issue 下的 comments 展示出来。\nasync function loadComment({\n  id,\n  tags,\n  title = '',\n  description = '',\n  link = ''\n}) {\n  const { clientID, clientSecret } = await getCommentApp()\n\n  const gitalk = new Gitalk({\n    clientID,\n    clientSecret,\n    repo: DAILY_CHECK_REPO, // The repository of store comments,\n    owner: DAILY_CHECK_OWNER,\n    admin: ['azl397985856'],\n    body: `\n${description}\n${link}\n`,\n    id,\n    title,\n    perPage: 100,\n    labels: tags || [],\n    distractionFreeMode: true // Facebook-like distraction free mode\n  })\n  document.querySelector('#gitalk-container').innerHTML = ''\n\n  gitalk.render('gitalk-container')\n}\n\nexport default {\n  components: {\n    counter,\n    faq: Faq,\n    ranking: Rank,\n    card: Card,\n    Q\n    // CodeEditor\n  },\n  data() {\n    return {\n      noCheck: false,\n      allCheck: false,\n      DAILY_CHECK_REPO,\n      DAILY_CHECK_OWNER,\n      fetchingUserInfo: false,\n      fetchingDailyProblem: false,\n      fetchingLectures: false,\n      fetchingRank: false,\n      fetchingPersonalProgress: false,\n      isTestUse: false,\n      form: this.$form.createForm(this),\n      selectedTag: '全部',\n      allTags: ['全部'],\n      currentStudentTab: 'interview',\n      currentMyTab: 'history',\n      rankings: [], // 打卡排行。未来可能增加其他排行，比如点赞精选排行\n      contestRankings: [], // 参加竞赛的答题情况\n      contests,\n      upcommingContest: getUpcommingContest(),\n      leetcodeUsername: '', // leetcode 用户名\n      mySolutions: [],\n      showHistory: false,\n      colors: ['#f50', '#2db7f5', '#87d068', '#108ee9'],\n      name: '', // 当前登录人\n      avatar: '',\n      startTime,\n      meta: {\n        dailyCheck: new Date().getTime(),\n        checkIn: new Date().getTime(),\n        lectures: {\n          intro: {},\n          basic: {},\n          topic: {},\n          advance: {}\n        }\n      },\n      dailyProblem: {\n        title: '',\n        description: '',\n        link: '',\n        pres: [],\n        tags: [],\n        whys: []\n      },\n      basicLectures,\n      introLectures,\n      advanceLectures,\n      topicLectures,\n      teachers,\n      students,\n      timeRange,\n      homeworks,\n      disableBasic:\n        new Date().getTime() <=\n        new Date(timeRange.basic[0]).getTime() - DAYS_TO_PREPARE * MS_PER_DAY,\n      disableTopic:\n        new Date().getTime() <=\n        new Date(timeRange.topic[0]).getTime() - DAYS_TO_PREPARE * MS_PER_DAY,\n      disableAdvanced:\n        new Date().getTime() <=\n        new Date(timeRange.advanced[0]).getTime() -\n          DAYS_TO_PREPARE * MS_PER_DAY,\n      activeTab: 'teachers',\n      started: new Date().getTime() >= startTime,\n      time: startTime,\n      errorMessage: '很抱歉，当前页面部分内容需要付费且登录后才能访问~',\n      // logined: false, // 是否登录\n      pay: false, // 是否为付费用户\n      loginUrl: `\n            https://github.com/login/oauth/authorize?client_id=${clientId}&redirect_uri=https://${originalHostname}/91`,\n      codeInitValue: '',\n      codeReadOnly: false,\n      codeLanguage: 'python',\n      codeTheme: 'vs-dark',\n      lcAccountFormShow: false,\n      supportLanguage: [\n        'java',\n        'c++',\n        'c',\n        'javascript',\n        'php',\n        'python',\n        'rust'\n      ]\n    }\n  },\n\n  methods: {\n    renderDay(time) {\n      const day = getDay(time)\n      if (day <= 0 || day > getDay()) return ''\n      return `Day${day}`\n    },\n    async handleActiveTabChange(v) {\n      this.activeTab = v\n\n      let newurl = ''\n      const searches = new URLSearchParams(new URL(window.location.href).search)\n      searches.set('tab', this.activeTab)\n\n      newurl =\n        window.location.protocol +\n        '//' +\n        window.location.host +\n        window.location.pathname +\n        '?' +\n        searches.toString()\n\n      window.history.pushState({ path: newurl }, '', newurl)\n      if (v === 'top-students') {\n        try {\n          this.fetchingRank = true\n          await getRankings().then(rankings => {\n            this.rankings = rankings\n          })\n        } finally {\n          this.fetchingRank = false\n        }\n      }\n      if (v === 'sign') {\n        await this.getDailyProblem()\n        // 加载评论\n        loadComment({\n          id: String(this.dailyProblem.day),\n          ...this.dailyProblem\n        })\n      }\n      if (v === 'my') {\n        try {\n          this.fetchingPersonalProgress = true\n          await this.getMySolutions()\n        } finally {\n          this.fetchingPersonalProgress = false\n        }\n      }\n      if (v.includes('jy')) {\n        this.fetchingLectures = true\n        const ps = [\n          getIntroLecture(),\n          getBasicLecture(),\n          getTopicLecture(),\n          getAdvanceLecture()\n        ].map((p, i) => {\n          return p.then(data => {\n            this[\n              [\n                'introLectures',\n                'basicLectures',\n                'topicLectures',\n                'advanceLectures'\n              ][i]\n            ] = data.map(q => ({\n              ...q,\n              viewUrl: q.external\n                ? q.externalLink\n                : `/solutionDetail?type=2&id=${q.id}&max_id=${Math.max(\n                    ...data.map(q => q.id)\n                  )}`,\n              external: !!q.external\n            }))\n          })\n        })\n        Promise.allSettled(ps).then(() => (this.fetchingLectures = false))\n      }\n    },\n    getDay,\n    getDifficulty(difficulty) {\n      if (!difficulty) return ''\n      if (difficulty.includes('简单')) return '简单'\n      if (difficulty.includes('中等')) return '中等'\n      if (difficulty.includes('困难')) return '困难'\n      return ''\n    },\n    getDifficultyClass(difficulty) {\n      if (!difficulty) return ''\n      if (difficulty.includes('简单')) return 'easy'\n      if (difficulty.includes('中等')) return 'medium'\n      if (difficulty.includes('困难')) return 'hard'\n      return ''\n    },\n    onSelectedTagChange(e) {\n      this.selectedTag = e.target.value\n    },\n    basicActive() {\n      return new Date().getTime() >= startTime\n    },\n    topicActive() {\n      return new Date().getTime() >= new Date('2021-06-07 16:00:00 GMT')\n    },\n    advanceActive() {\n      return false\n    },\n    getDailyProblem(day) {\n      this.fetchingDailyProblem = true\n      return getDailyProblem(day)\n        .then(dailyProblem => {\n          this.dailyProblem = dailyProblem\n          this.fetchingDailyProblem = false\n          return dailyProblem\n        })\n        .catch(err => {\n          console.log(err)\n          this.fetchingDailyProblem = false\n        })\n    },\n    getMySolutions() {\n      return getMySolutions().then(data => {\n        this.mySolutions = data.filter((_, i) => getDay() >= i + 1)\n        this.allTags = data\n          .map(q => q.tags)\n          .reduce((acc, tags) => {\n            tags.forEach(tag => acc.add(tag))\n            return acc\n          }, new Set(['全部']))\n      })\n    },\n    disabledDate(moment) {\n      const d = getDay(moment.valueOf())\n      console.log(d, moment.valueOf() > new Date().getTime())\n      // 活动开始去除下面注释\n      if (moment.valueOf() > new Date().getTime()) return true\n      return d < 1 || d > 91\n    },\n    hashColor(text) {\n      if (!text) return ''\n      let acc = 0\n      for (const i in text) {\n        acc = (acc + text.charCodeAt(i)) % this.colors.length\n      }\n      return this.colors[acc]\n    },\n    async onDateChanged(v) {\n      await this.getDailyProblem(v.valueOf())\n\n      return loadComment({\n        id: String(this.dailyProblem.day),\n        ...this.dailyProblem\n      })\n    },\n    handlLogoutClick() {\n      logout().then(() => {\n        window.location.href = `https://${originalHostname}/91`\n      })\n    }\n    // submitCode() {\n    //   const { link, title } = this.dailyProblem\n    //   const id = +title.match(/[1-9]+/)[0]\n    //   if (!id) {\n    //     return message.error('当日讲义格式有误，请联系讲师!')\n    //   }\n    //   const slug = link\n    //     .split('/')\n    //     .reverse()\n    //     .find(item => item)\n    //   let needClearLcStorage = false\n    //   request({\n    //     method: 'post',\n    //     url: '/api/v1/lc/submitCode',\n    //     headers: this.getLcRequestHeader(),\n    //     data: {\n    //       link,\n    //       lang: this.codeLanguage,\n    //       id,\n    //       slug,\n    //       code: this.$refs.codeEditor.getEditorValue()\n    //     }\n    //   })\n    //     .then(data => {\n    //       const { submission_id: subMissionId } = data\n    //       if (subMissionId) {\n    //         message.info('题解提交成功')\n    //         this.setLcDataInLs(data)\n    //         // 数据持久化。将当前用户的打卡信息入库\n    //         // TODO: 弹出写题解的弹窗（即使不写题解也算打卡成功）\n    //       } else {\n    //         throw data\n    //       }\n    //     })\n    //     .catch((data = {}) => {\n    //       message.destroy()\n    //       // 如果状态码为403,代表需要用户重新输入一遍账号与密码,这时需要清空一波缓存\n    //       needClearLcStorage = data.code === 403\n    //       message.error(data.message || '题解提交失败')\n    //     })\n    //     .finally(() => {\n    //       // 清空缓存\n    //       if (needClearLcStorage) {\n    //         this.clearLcDataInLs()\n    //       }\n    //       this.lcAccountFormShow = !this.hasLcRequstDataInLs()\n    //     })\n    // }\n    // handleLcAccountLogin(e) {\n    //   e.preventDefault()\n    //   const data = this.form.getFieldsValue()\n    //   let needClearLcStorage = false\n    //   request({\n    //     method: 'post',\n    //     url: '/api/v1/lc/submitLcAccount',\n    //     headers: this.getLcRequestHeader(),\n    //     data\n    //   })\n    //     .then(data => {\n    //       message.info(data.message || '登陆成功')\n    //       this.setLcDataInLs(data)\n    //     })\n    //     .catch((data = {}) => {\n    //       message.destroy()\n    //       message.error(data.message || '登陆失败')\n    //       // 如果状态码为403,代表需要用户重新输入一遍账号与密码,这时需要清空一波cookie\n    //       needClearLcStorage = data.code === 403\n    //     })\n    //     .finally(() => {\n    //       // 清空缓存\n    //       if (needClearLcStorage) {\n    //         this.clearLcDataInLs()\n    //       }\n    //       this.lcAccountFormShow = !this.hasLcRequstDataInLs()\n    //     })\n    // },\n    // getLcRequestHeader(header = {}) {\n    //   const arr = [\n    //     _91UsernameLsName,\n    //     _91PwdLsName,\n    //     lcSeesionCookieName,\n    //     lcCsrftokenCookieName\n    //   ]\n    //   const data = arr.reduce((obj, key) => {\n    //     const val = window.localStorage.getItem(key)\n    //     if (val) {\n    //       obj[key] = val\n    //     }\n    //     return obj\n    //   }, {})\n    //   return Object.assign(header, data)\n    // },\n    // setLcDataInLs(data) {\n    //   lcDataKeys.forEach(key => window.localStorage.setItem(key, data[key]))\n    // },\n    // clearLcDataInLs() {\n    //   lcDataKeys.forEach(key => window.localStorage.removeItem(key))\n    // },\n    // hasLcRequstDataInLs() {\n    //   const requestKeys = [_91UsernameLsName, _91PwdLsName]\n    //   return requestKeys.every(key => window.localStorage.getItem(key))\n    // }\n  },\n  async mounted() {\n    const urlTab = new URLSearchParams(\n      new URL(window.location.href).search\n    ).get('tab')\n\n    this.handleActiveTabChange(urlTab || 'agenda')\n\n    function fallbackMeta() {\n      if (!this.meta.lectures.intro) {\n        this.meta.lectures.intro = {\n          lastUpdateTime: new Date().getTime() - MS_PER_DAY * 30\n        }\n      }\n\n      if (!this.meta.lectures.basic) {\n        this.meta.lectures.basic = {\n          lastUpdateTime: new Date().getTime() - MS_PER_DAY * 30\n        }\n      }\n\n      if (!this.meta.lectures.topic) {\n        this.meta.lectures.topic = {\n          lastUpdateTime: new Date().getTime() - MS_PER_DAY * 30\n        }\n      }\n\n      if (!this.meta.lectures.advance) {\n        this.meta.lectures.advance = {\n          lastUpdateTime: new Date().getTime() - MS_PER_DAY * 30\n        }\n      }\n    }\n\n    fallbackMeta.call(this)\n\n    getMeta().then(data => {\n      this.meta = data\n      fallbackMeta.call(this)\n    })\n\n    try {\n      this.fetchingUserInfo = true\n      const {\n        pay,\n        message,\n        name,\n        login,\n        avatar_url: avatar,\n        leetcodeUsername,\n        noCheck,\n        allCheck\n      } = (await getUserInfo(this.$route.query.code)) || {}\n\n      if (message === 'Bad credentials') {\n        this.errorMessage = '登录已过期，请重新登录~'\n      }\n      this.avatar = avatar\n      this.pay = pay\n      this.name = name || login\n      this.login = login\n      this.noCheck = noCheck\n      this.allCheck = allCheck\n      this.leetcodeUsername = leetcodeUsername || ''\n      this.contestRankings = (contests[this.leetcodeUsername] || []).filter(\n        res => res && res.score > 0\n      )\n      this.isTestUse = this.$route.query.isTest\n\n      // this.lcAccountFormShow = !this.hasLcRequstDataInLs()\n    } finally {\n      this.fetchingUserInfo = false\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.m-top-bottom-sm {\n  margin: 10px 0;\n}\n.align-r {\n  text-align: right;\n}\n.align-l {\n  text-align: left;\n}\n.align-c {\n  text-align: center;\n}\n.easy {\n  color: green;\n}\n.medium {\n  color: orange;\n}\n.hard {\n  color: red;\n}\n.my-solution {\n  text-align: right;\n  margin: 10px 0;\n}\n.timeline {\n  margin: 0 auto;\n  // width: 400px;\n}\n\n.more {\n  display: flex;\n  justify-content: flex-end;\n  width: 200px;\n  span {\n    height: 24px;\n    line-height: 24px;\n  }\n}\n.time {\n  font-size: 24px;\n  color: #00a6dd;\n}\n.icon {\n  display: inline-block;\n  margin: 0 10px;\n}\n.teachers,\n.students {\n  margin: 20px auto;\n}\n.hello {\n  margin: 10px auto;\n}\n\n.code-btns {\n  display: flex;\n  justify-content: space-between;\n  margin: 10px 0px;\n}\n.code-panel {\n  margin-bottom: 20px;\n  border-radius: 6px;\n  overflow: hidden;\n}\n</style>\n"]}]}