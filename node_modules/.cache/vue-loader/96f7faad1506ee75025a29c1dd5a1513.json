{"remainingRequest":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luxiaopeng/github/leetcode-pp/src/components/Counter.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/luxiaopeng/github/leetcode-pp/src/components/Counter.vue","mtime":1649825863178},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/css-loader/dist/cjs.js","mtime":1594812194251},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1631347730543},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/postcss-loader/src/index.js","mtime":1582876651724},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js","mtime":1582876651155},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js","mtime":1631347730543}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kLAouaCwKLm0sCi5zIHsKICBiYWNrZ3JvdW5kOiAjYzcxYzYwOwogIGNvbG9yOiAjZmZmOwogIGxpbmUtaGVpZ2h0OiA0OXB4OwogIGZvbnQtc2l6ZTogMzJweDsKICBmb250LWZhbWlseTogQXJpYWw7CiAgcGFkZGluZzogMCA1cHg7CiAgbWFyZ2luOiA1cHg7CiAgYm9yZGVyLXJhZGl1czogNXB4Owp9Cg=="},{"version":3,"sources":["Counter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Counter.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <p style=\"line-height: 1.5rem;\" v-html=\"countTxt\"></p>\n</template>\n\n<script>\nimport { formateTimeStamp } from '@/utils/format.js'\nexport default {\n  props: {\n    time: { type: [Number] },\n    prefix: { type: [String] },\n    suffix: { type: [String] }\n  },\n  data() {\n    return {\n      times: {},\n      countTxt: ''\n    }\n  },\n  methods: {\n    // 获得距离活动开始还剩余的时间\n    mistiming() {\n      let timeStamp = (this.time - new Date().getTime()) / 1000\n      this.times = formateTimeStamp(timeStamp)\n      this.countTxt = `${this.prefix || '活动将于'} <span class=\"d\">${\n        this.times.day\n      }</span>天<span class=\"h\">${this.times.hour}</span>时<span class=\"m\">${\n        this.times.min\n      }</span>分<span class=\"s\">${this.times.seconds}</span>秒${this.suffix ||\n        '后开启'}`\n      const TimeDown = setInterval(() => {\n        if (timeStamp > 0) {\n          timeStamp--\n          const newTime = formateTimeStamp(timeStamp)\n          this.countTxt = `${this.prefix || '活动将于'} <span class=\"d\">${\n            newTime.day\n          }</span>天<span class=\"h\">${newTime.hour}</span>时<span class=\"m\">${\n            newTime.min\n          }</span>分<span class=\"s\">${newTime.seconds}</span>秒${this.suffix ||\n            '后开启'}`\n        } else {\n          this.countTxt = ''\n          clearInterval(TimeDown)\n        }\n      }, 1000)\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.mistiming()\n    })\n  }\n}\n</script>\n\n<style>\n.d,\n.h,\n.m,\n.s {\n  background: #c71c60;\n  color: #fff;\n  line-height: 49px;\n  font-size: 32px;\n  font-family: Arial;\n  padding: 0 5px;\n  margin: 5px;\n  border-radius: 5px;\n}\n</style>\n"]}]}