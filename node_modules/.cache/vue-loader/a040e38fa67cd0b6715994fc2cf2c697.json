{"remainingRequest":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luxiaopeng/github/leetcode-pp/src/views/Markdown.vue?vue&type=style&index=0&id=08c700ae&lang=less&scoped=true&","dependencies":[{"path":"/Users/luxiaopeng/github/leetcode-pp/src/views/Markdown.vue","mtime":1648364288930},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/css-loader/dist/cjs.js","mtime":1594812194251},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1631347730543},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/postcss-loader/src/index.js","mtime":1582876651724},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/less-loader/dist/cjs.js","mtime":1584094546781},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js","mtime":1582876651155},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js","mtime":1631347730543}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5pbmZvIHsKICBtYXJnaW46IDAgMCA1MHB4IDA7Cn0KLmZvb3RlciB7CiAgbWFyZ2luOiA1MHB4IDA7Cn0K"},{"version":3,"sources":["Markdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;AACA;AACA;AACA;AACA;AACA","file":"Markdown.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"info\">\n      使用方法：输入 Github 的 URL 地址，点击前往阅读即可。<b\n        >需要注意的是地址需要是使用 MD 格式编写的哦 ~</b\n      >\n\n      <div>\n        比如：\n        <span>\n          https://github.com/azl397985856/leetcode/blob/master/thinkings/binary-search-1.md\n        </span>\n        或者\n        <span>\n          https://github.com/azl397985856/leetcode\n        </span>\n      </div>\n    </div>\n    <a-input\n      style=\"width: auto; flex: 1;\"\n      :value=\"keyword\"\n      @input=\"handleInputChange\"\n      type=\"text\"\n      placeholder=\"请输入 Markdown 的 Github 地址\"\n    />\n\n    <a-button\n      :disabled=\"!dest\"\n      type=\"link\"\n      :href=\"`/solutionDetail?type=1&url=${dest}`\"\n      target=\"_blank\"\n      >前往阅读</a-button\n    >\n\n    <div style=\"margin: 10px 0\">没有 URL ？？ 那直接输入 markdown 源码吧！</div>\n\n    <a-input\n      style=\"width: 800px; flex: 1;\"\n      :value=\"raw\"\n      @input=\"handleRawInputChange\"\n      type=\"textarea\"\n      rows=\"10\"\n      placeholder=\"请输入 Markdown 原文\"\n    />\n    <a-button\n      :disabled=\"!raw\"\n      type=\"link\"\n      @click=\"goToRenderRaw\"\n      target=\"_blank\"\n      >前往阅读</a-button\n    >\n\n    <div class=\"footer\">\n      大家可以根据自己的喜好挑选自己的主题，目前内置了几种，后续考虑增加更多主题~\n    </div>\n  </div>\n</template>\n\n<script>\nimport { setStorage } from '../utils/storage'\nconst getURL = ({ owner, repo, path }) =>\n  `https://api.github.com/repos/${owner}/${repo}/contents/${path}`\nfunction getEXT(filename) {\n  if (!filename) return ''\n  return filename\n    .split('.')\n    .pop()\n    .toLowerCase()\n}\nfunction getOwnerAndRepo(url) {\n  if (!url) return {}\n  const parts = url.split('/')\n  if (!parts || parts[2] !== 'github.com')\n    throw new Error('NO_GITHUB', '目前仅支持 github 地址')\n  if (!parts[3] || !parts[4])\n    throw new Error(\n      'URL_INVALID',\n      '链接非法，合法的链接示例：https://github.com/azl397985856/leetcode/blob/master/thinkings/binary-search-1.md'\n    )\n  return {\n    owner: parts[3],\n    repo: parts[4],\n    path: parts[7] ? parts.slice(7).join('/') : '/README.md'\n  }\n}\nexport default {\n  data() {\n    return {\n      keyword: '',\n      raw: ''\n    }\n  },\n  methods: {\n    async goToRenderRaw() {\n      await setStorage('github-reader', this.raw)\n      this.$router.push('/solutionDetail?type=5')\n    },\n    handleInputChange(e) {\n      this.keyword = e.target.value\n    },\n    handleRawInputChange(e) {\n      this.raw = e.target.value\n    }\n  },\n  computed: {\n    dest() {\n      const { owner, repo, path } = getOwnerAndRepo(this.keyword)\n      if (getEXT(path) !== 'md') return ''\n      return getURL({ owner, repo, path })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.info {\n  margin: 0 0 50px 0;\n}\n.footer {\n  margin: 50px 0;\n}\n</style>\n"]}]}