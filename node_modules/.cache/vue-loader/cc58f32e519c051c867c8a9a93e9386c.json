{"remainingRequest":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luxiaopeng/github/leetcode-pp/src/views/Everyday.vue?vue&type=style&index=0&id=781df05e&lang=less&scoped=true&","dependencies":[{"path":"/Users/luxiaopeng/github/leetcode-pp/src/views/Everyday.vue","mtime":1648364288928},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/css-loader/dist/cjs.js","mtime":1594812194251},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1631347730543},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/postcss-loader/src/index.js","mtime":1582876651724},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/less-loader/dist/cjs.js","mtime":1584094546781},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js","mtime":1582876651155},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js","mtime":1631347730543}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5hbnQtdGFnIHsNCiAgbWFyZ2luLWJvdHRvbTogOHB4Ow0KfQ0KdGQsDQp0aCA+IGRpdiB7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCn0NCi5kcm93bi13cmFwcGVyIHsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIHRleHQtYWxpZ246IGxlZnQ7DQogIG1pbi13aWR0aDogMjQwcHg7DQogIG1hcmdpbi1sZWZ0OiAxMHB4Ow0KDQogIGJhY2tncm91bmQtY29sb3I6ICNlNmY3ZmY7DQogIGJvcmRlcjogMXB4IHNvbGlkICM4N2U4ZGU7DQogIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgYSB7DQogICAgZm9udC1zaXplOiAxNHB4Ow0KICAgIGNvbG9yOiAjMTg5MGZmOw0KICB9DQp9DQouYW50LWRyb3Bkb3duLWxpbmsgew0KICB3aWR0aDogMTAwJTsNCiAgY29sb3I6ICNmZmY7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgZm9udC13ZWlnaHQ6IDYwMDsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICBpIHsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgcmlnaHQ6IDEwcHg7DQogICAgdG9wOiAycHg7DQogIH0NCn0NCi5hbnQtZHJvcGRvd24tbWVudSB7DQogIG1heC1oZWlnaHQ6IDMwMHB4Ow0KICBvdmVyZmxvdzogYXV0bzsNCn0NCmkgPiBzdmcgew0KICB2ZXJ0aWNhbC1hbGlnbjogaW5oZXJpdDsNCn0NCg0KLm1heC13aWR0aC02MDAtY2VudGVyIHsNCiAgbWFyZ2luOiAxMHB4IGF1dG87DQogIG1heC13aWR0aDogNjAwcHg7DQp9DQo="},{"version":3,"sources":["Everyday.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Everyday.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"max-width-600-center\">\r\n      <a-alert\r\n        v-if=\"hasError\"\r\n        message=\"ÂæàÊä±Ê≠âÔºåÁõÆÂâçËØ∑Ê±ÇÊó†Ê≥ïÊâßË°åÔºåËØ∑Á®çÂÄôÂÜçËØï„ÄÇ\"\r\n        type=\"error\"\r\n      />\r\n    </div>\r\n    <div>\r\n      <!-- Search for keywords -->\r\n      <form\r\n        @submit=\"searchAndUpdate\"\r\n        style=\"max-width:600px;margin:20px auto;display:flex;\"\r\n      >\r\n        <a-input\r\n          style=\"width: auto; flex: 1;\"\r\n          :value=\"keyword\"\r\n          @input=\"handleInputChange\"\r\n          type=\"text\"\r\n          placeholder=\"ÊêúÁ¥¢ÂÖ≥ÈîÆÂ≠ó\"\r\n        />\r\n        <div class=\"drown-wrapper\">\r\n          <a-dropdown :trigger=\"['click']\">\r\n            <a class=\"ant-dropdown-link\" href=\"#\">\r\n              {{ label || 'Ê†áÁ≠æ' }} <a-icon type=\"caret-down\" />\r\n            </a>\r\n            <a-menu slot=\"overlay\">\r\n              <a-menu-item>\r\n                <a @click=\"handleClearTagSelect\"> Ê∏ÖÈô§ </a>\r\n              </a-menu-item>\r\n              <a-menu-item v-for=\"(label, index) in tags\" :key=\"index\">\r\n                <a @click=\"handleTagSelect\">{{ label.name }}</a>\r\n              </a-menu-item>\r\n            </a-menu>\r\n          </a-dropdown>\r\n        </div>\r\n        <div class=\"submit-container\" style=\"width: 60px;margin-left: 10px;\">\r\n          <a-button @click=\"searchAndUpdate\">\r\n            ÊêúÁ¥¢\r\n          </a-button>\r\n        </div>\r\n      </form>\r\n      <!-- Problem List -->\r\n      <div v-for=\"a in tags\" :key=\"a.id\"></div>\r\n      <a-table\r\n        style=\"max-width:1280px;margin:0 auto;box-sizing:content-box;\"\r\n        :columns=\"columns\"\r\n        :rowKey=\"record => record.id\"\r\n        :dataSource=\"data\"\r\n        :pagination=\"pagination\"\r\n        :loading=\"loading\"\r\n        @change=\"handleTableChange\"\r\n      >\r\n        <template slot=\"name\" slot-scope=\"titleAndUrl\">\r\n          <router-link :to=\"'/everyday/' + titleAndUrl.number\">\r\n            {{ titleAndUrl.title }}\r\n          </router-link>\r\n        </template>\r\n        <template slot=\"tags\" slot-scope=\"tags\">\r\n          <a-tag\r\n            v-for=\"tag in tags\"\r\n            :key=\"tag.id\"\r\n            :color=\"assignTagColor(tag.name)\"\r\n            @click=\"handleTagClick\"\r\n          >\r\n            {{ tag.name }}\r\n          </a-tag>\r\n        </template>\r\n        <template slot=\"locked\" slot-scope=\"lock\">\r\n          {{ lock ? 'üîí' : '' }}\r\n        </template>\r\n      </a-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getGithubContent } from '../apis/github'\r\n\r\n// const - Column names for the table header\r\nconst COLUMNS = [\r\n  {\r\n    title: 'È¢òÂêç',\r\n    dataIndex: 'titleAndUrl',\r\n    width: '40%',\r\n    scopedSlots: { customRender: 'name' }\r\n  },\r\n  {\r\n    title: 'Ê†áÁ≠æ',\r\n    dataIndex: 'labels',\r\n    scopedSlots: { customRender: 'tags' },\r\n    width: '40%'\r\n  },\r\n  {\r\n    title: 'üîí',\r\n    dataIndex: 'locked',\r\n    scopedSlots: { customRender: 'locked' }\r\n  }\r\n]\r\nconst DEFAULT_PAGE_SIZE = 20\r\nexport default {\r\n  components: {},\r\n  computed: {},\r\n  data() {\r\n    return {\r\n      hasError: false,\r\n      keyword: '',\r\n      problems: [],\r\n      data: [],\r\n      pagination: {\r\n        defaultPageSize: DEFAULT_PAGE_SIZE,\r\n        total: 0\r\n      },\r\n      loading: false,\r\n      columns: COLUMNS,\r\n      tags: [],\r\n      label: ''\r\n    }\r\n  },\r\n  methods: {\r\n    handleClearTagSelect() {\r\n      this.label = ''\r\n    },\r\n    async getAllLabels() {\r\n      try {\r\n        const tags = await getGithubContent(\r\n          'https://api.github.com/repos/azl397985856/leetcode/labels'\r\n        )\r\n        this.tags = tags\r\n      } catch (error) {\r\n        console.log(error)\r\n        this.showError()\r\n      }\r\n    },\r\n    showError() {\r\n      this.hasError = true\r\n      setTimeout(() => {\r\n        this.hasError = false\r\n      }, 5000)\r\n    },\r\n    assignTagColor: function(str) {\r\n      switch (str) {\r\n        case 'Daily Question':\r\n          return 'volcano'\r\n        case 'Easy':\r\n          return 'green'\r\n        case 'LeetCode':\r\n          return 'purple'\r\n        case 'Medium':\r\n          return 'cyan'\r\n        case 'Hard':\r\n          return 'brown'\r\n        default:\r\n          return '#bbb'\r\n      }\r\n    },\r\n    handleInputChange(e) {\r\n      this.keyword = e.target.value\r\n    },\r\n    handleTagSelect(e) {\r\n      const {\r\n        target: { innerText }\r\n      } = e\r\n      this.label = innerText\r\n    },\r\n    handleTagClick(e) {\r\n      const {\r\n        target: { innerText }\r\n      } = e\r\n      this.label = innerText\r\n      this.loadData(0, this.label)\r\n    },\r\n    async searchAndUpdate(e) {\r\n      e.preventDefault()\r\n      this.loadData(0, this.label)\r\n    },\r\n    getProblems: async (pageNumber, keyword, label) => {\r\n      const config = {\r\n        params: {\r\n          state: 'all',\r\n          page: pageNumber,\r\n          // eslint-disable-next-line @typescript-eslint/camelcase\r\n          per_page: DEFAULT_PAGE_SIZE\r\n        }\r\n      }\r\n      keyword = keyword ? `+\"${keyword}\"` : ''\r\n      const url = encodeURI(\r\n        `https://api.github.com/search/issues?q=„ÄêÊØèÊó•‰∏ÄÈ¢ò„Äë ${keyword}${label ||\r\n          ''}+repo:azl397985856/leetcode`\r\n      )\r\n      const result = await getGithubContent(url, config)\r\n      console.log(result)\r\n      const items = result.items\r\n      const totalCount = result.total_count\r\n\r\n      return {\r\n        data: items.map(item => {\r\n          return {\r\n            ...item,\r\n            locked: item.title.includes('üîí'),\r\n            titleAndUrl: {\r\n              title: item.title.replace('„ÄêÊØèÊó•‰∏ÄÈ¢ò„Äë- ', ''),\r\n              url: item.html_url,\r\n              number: item.number\r\n            }\r\n          }\r\n        }),\r\n        totalCount\r\n      }\r\n    },\r\n    async loadData(current, label) {\r\n      this.loading = true\r\n      try {\r\n        const { data, totalCount } = await this.getProblems(\r\n          current || 0,\r\n          this.keyword,\r\n          label ? `+label:\"${label}\"` : ''\r\n        )\r\n        this.data = data.map(item => {\r\n          return {\r\n            ...item,\r\n            title: item.title.replace('„ÄêÊØèÊó•‰∏ÄÈ¢ò„Äë- ', '')\r\n          }\r\n        })\r\n        this.pagination.total = totalCount\r\n        this.pagination.showTotal = total => `ÂÖ± ${total} Êù°`\r\n        this.loading = false\r\n      } catch (error) {\r\n        this.showError()\r\n        // console.error(error.message)\r\n\r\n        this.loading = false\r\n      }\r\n    },\r\n    async handleTableChange(pagination) {\r\n      const { current } = pagination\r\n      this.loadData(current, this.label ? this.label : '')\r\n    }\r\n  },\r\n  mounted: async function() {\r\n    // initialize our data\r\n    this.loadData(0, this.label)\r\n    this.getAllLabels()\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.ant-tag {\r\n  margin-bottom: 8px;\r\n}\r\ntd,\r\nth > div {\r\n  text-align: center;\r\n}\r\n.drown-wrapper {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: left;\r\n  min-width: 240px;\r\n  margin-left: 10px;\r\n\r\n  background-color: #e6f7ff;\r\n  border: 1px solid #87e8de;\r\n  border-radius: 4px;\r\n  a {\r\n    font-size: 14px;\r\n    color: #1890ff;\r\n  }\r\n}\r\n.ant-dropdown-link {\r\n  width: 100%;\r\n  color: #fff;\r\n  text-align: center;\r\n  font-weight: 600;\r\n  position: relative;\r\n  i {\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 2px;\r\n  }\r\n}\r\n.ant-dropdown-menu {\r\n  max-height: 300px;\r\n  overflow: auto;\r\n}\r\ni > svg {\r\n  vertical-align: inherit;\r\n}\r\n\r\n.max-width-600-center {\r\n  margin: 10px auto;\r\n  max-width: 600px;\r\n}\r\n</style>\r\n"]}]}