{"remainingRequest":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luxiaopeng/github/leetcode-pp/src/views/Solution.vue?vue&type=style&index=0&id=0321b492&scoped=true&lang=css&","dependencies":[{"path":"/Users/luxiaopeng/github/leetcode-pp/src/views/Solution.vue","mtime":1648364288932},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/css-loader/dist/cjs.js","mtime":1594812194251},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1631347730543},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/postcss-loader/src/index.js","mtime":1582876651724},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js","mtime":1582876651155},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js","mtime":1631347730543}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQovZGVlcC8gLnRhYmxlIHsNCiAgd2lkdGg6IDkwJTsNCiAgbWF4LXdpZHRoOiAxMjgwcHg7DQogIG1hcmdpbjogMTBweCBhdXRvOw0KICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsNCn0NCg0KLnJvdyB7DQogIGNvbG9yOiAjMTg5MGZmOw0KfQ0KDQouaWNvbi1uZXcgew0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQp9DQouaWNvbi1uZXc6OmFmdGVyIHsNCiAgY29udGVudDogJ25ldyc7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgdG9wOiAtMTJweDsNCiAgcmlnaHQ6IC0yNHB4Ow0KICBmb250LXNpemU6IDEycHg7DQogIGZvbnQtd2VpZ2h0OiBib2xkOw0KICBjb2xvcjogcmVkOw0KfQ0K"},{"version":3,"sources":["Solution.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Solution.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <a-table\r\n      class=\"table\"\r\n      :showHeader=\"false\"\r\n      :columns=\"columns\"\r\n      :rowKey=\"record => record.title\"\r\n      :dataSource=\"staticData\"\r\n      :pagination=\"pagination\"\r\n      :loading=\"loading\"\r\n      :customRow=\"handleClick\"\r\n    >\r\n      <template slot=\"Title\" slot-scope=\"text, record\">\r\n        <span :class=\"['row', { 'icon-new': record.isNew }]\">{{\r\n          record.title\r\n        }}</span>\r\n      </template>\r\n    </a-table>\r\n  </div>\r\n</template>\r\n<script>\r\n// const - Column names for the table header\r\nconst COLUMNS = [\r\n  {\r\n    title: '标题',\r\n    dataIndex: 'title',\r\n    width: '30%',\r\n    scopedSlots: { customRender: 'Title' }\r\n  }\r\n]\r\n\r\nconst DEFAULT_PAGE_SIZE = 20\r\n\r\n// 仓库地址\r\nconst WAREHOURSE_ADDRESS =\r\n  'https://api.github.com/repos/azl397985856/leetcode/contents'\r\n\r\n// 仓库内专题的静态数据\r\nimport STATIC_DATA from './SolutionStaticData'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      staticData: STATIC_DATA,\r\n      pagination: {\r\n        defaultPageSize: DEFAULT_PAGE_SIZE,\r\n        total: 0\r\n      },\r\n      loading: false,\r\n      columns: COLUMNS\r\n    }\r\n  },\r\n  methods: {\r\n    handleClick(record) {\r\n      return {\r\n        on: {\r\n          click: () => {\r\n            this.$router.push({\r\n              path: 'solutionDetail',\r\n              query: {\r\n                url: WAREHOURSE_ADDRESS + record.url,\r\n                type: 1\r\n              }\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/deep/ .table {\r\n  width: 90%;\r\n  max-width: 1280px;\r\n  margin: 10px auto;\r\n  box-sizing: content-box;\r\n}\r\n\r\n.row {\r\n  color: #1890ff;\r\n}\r\n\r\n.icon-new {\r\n  position: relative;\r\n}\r\n.icon-new::after {\r\n  content: 'new';\r\n  position: absolute;\r\n  top: -12px;\r\n  right: -24px;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  color: red;\r\n}\r\n</style>\r\n"]}]}