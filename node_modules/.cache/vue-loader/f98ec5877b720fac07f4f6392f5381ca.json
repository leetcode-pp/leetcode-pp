{"remainingRequest":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luxiaopeng/github/leetcode-pp/src/views/91/91-article.vue?vue&type=template&id=b2b1f224&","dependencies":[{"path":"/Users/luxiaopeng/github/leetcode-pp/src/views/91/91-article.vue","mtime":1648364288751},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js","mtime":1582876651155},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1631347730543},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/cache-loader/dist/cjs.js","mtime":1582876651155},{"path":"/Users/luxiaopeng/github/leetcode-pp/node_modules/vue-loader/lib/index.js","mtime":1631347730543}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm._m(0)
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "section",
      {
        staticStyle: {
          "font-size": "16px",
          padding: "0 10px",
          "word-spacing": "0px",
          "word-break": "break-word",
          "word-wrap": "break-word",
          "text-align": "left",
          "line-height": "1.25",
          color: "#2b2b2b",
          "font-family":
            "Optima-Regular, Optima, PingFangTC-Light, PingFangSC-light, PingFangTC-light",
          "letter-spacing": "2px",
          "background-image":
            "linear-gradient(90deg, rgba(50, 0, 0, 0.04) 3%, rgba(0, 0, 0, 0) 3%), linear-gradient(360deg, rgba(50, 0, 0, 0.04) 3%, rgba(0, 0, 0, 0) 3%)",
          "background-size": "20px 20px",
          "background-position": "center center"
        },
        attrs: {
          id: "nice",
          "data-tool": "",
          "data-website": "https://www.mdnice.com"
        }
      },
      [
        _c(
          "p",
          {
            staticStyle: {
              "padding-top": "8px",
              "padding-bottom": "8px",
              "line-height": "26px",
              color: "#2b2b2b",
              margin: "10px 0px",
              "letter-spacing": "2px",
              "font-size": "14px",
              "word-spacing": "2px"
            },
            attrs: { "data-tool": "" }
          },
          [
            _vm._v(
              " 力扣加加，一个努力做西湖区最好的算法题解的团队。就在今天它给大家带来了《91 天学算法》，帮助大家摆脱困境，征服算法。 "
            )
          ]
        ),
        _c("img", {
          staticStyle: {
            "max-width": "100%",
            "border-radius": "6px",
            display: "block",
            margin: "20px auto",
            "object-fit": "contain",
            "box-shadow": "2px 4px 7px #999"
          },
          attrs: {
            src:
              "https://tva1.sinaimg.cn/large/007S8ZIlly1gf2atkdikgj30u70u0tct.jpg",
            width: "50%",
            "data-tool": ""
          }
        }),
        _c(
          "h2",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              padding: "0px",
              "font-weight": "bold",
              color: "black",
              "font-size": "22px",
              display: "block",
              "border-bottom": "4px solid #40B8FA"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: {
                display: "flex",
                width: "20px",
                height: "20px",
                "background-size": "20px 20px",
                "background-image":
                  "url(https://files.mdnice.com/fullstack-1.png)",
                "margin-bottom": "-22px"
              }
            }),
            _c(
              "span",
              {
                staticClass: "content",
                staticStyle: {
                  display: "flex",
                  color: "#40B8FA",
                  "font-size": "20px",
                  "margin-left": "25px"
                }
              },
              [_vm._v("初衷")]
            ),
            _c("span", {
              staticClass: "suffix",
              staticStyle: {
                display: "flex",
                "box-sizing": "border-box !important",
                width: "200px",
                height: "10px",
                "border-top-left-radius": "20px",
                background: "RGBA(64, 184, 250, .5)",
                color: "rgb(255, 255, 255)",
                "font-size": "16px",
                "letter-spacing": "0.544px",
                "justify-content": "flex-end",
                float: "right",
                "margin-top": "-10px",
                "overflow-wrap": "break-word !important"
              }
            })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "padding-top": "8px",
              "padding-bottom": "8px",
              "line-height": "26px",
              color: "#2b2b2b",
              margin: "10px 0px",
              "letter-spacing": "2px",
              "font-size": "14px",
              "word-spacing": "2px"
            },
            attrs: { "data-tool": "" }
          },
          [
            _vm._v(
              " 为了让想学习的人能够真正学习到东西， 我打算新开一个栏目《91 天学算法》，在 91 天内来帮助那些想要学习算法，提升自己算法能力的同学，帮助大家建立完整的算法知识体系。 "
            )
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "padding-top": "8px",
              "padding-bottom": "8px",
              "line-height": "26px",
              color: "#2b2b2b",
              margin: "10px 0px",
              "letter-spacing": "2px",
              "font-size": "14px",
              "word-spacing": "2px"
            },
            attrs: { "data-tool": "" }
          },
          [
            _vm._v(
              " 群里每天都会有题目，推荐大家讨论当天的题目。我们会帮助大家规划学习路线，91 天见证不一样的自己。群里会有专门的资深算法竞赛大佬坐阵解答大家的问题和疑问，并且会对前一天的题目进行讲解。 "
            )
          ]
        ),
        _c(
          "figure",
          {
            staticStyle: {
              margin: "0",
              "margin-top": "10px",
              "margin-bottom": "10px",
              display: "flex",
              "flex-direction": "column",
              "justify-content": "center",
              "align-items": "center"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("img", {
              staticStyle: {
                "max-width": "100%",
                "border-radius": "6px",
                display: "block",
                margin: "20px auto",
                "object-fit": "contain",
                "box-shadow": "2px 4px 7px #999"
              },
              attrs: {
                src:
                  "https://tva1.sinaimg.cn/large/007S8ZIlly1gf2b2zkclnj30xm0b6aat.jpg",
                alt: ""
              }
            })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "padding-top": "8px",
              "padding-bottom": "8px",
              "line-height": "26px",
              color: "#2b2b2b",
              margin: "10px 0px",
              "letter-spacing": "2px",
              "font-size": "14px",
              "word-spacing": "2px"
            },
            attrs: { "data-tool": "" }
          },
          [_vm._v(" 刚好碰上寒假，大家难道不想在寒假中给自己充下电么？ ")]
        ),
        _c(
          "h2",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              padding: "0px",
              "font-weight": "bold",
              color: "black",
              "font-size": "22px",
              display: "block",
              "border-bottom": "4px solid #40B8FA"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: {
                display: "flex",
                width: "20px",
                height: "20px",
                "background-size": "20px 20px",
                "background-image":
                  "url(https://files.mdnice.com/fullstack-1.png)",
                "margin-bottom": "-22px"
              }
            }),
            _c(
              "span",
              {
                staticClass: "content",
                staticStyle: {
                  display: "flex",
                  color: "#40B8FA",
                  "font-size": "20px",
                  "margin-left": "25px"
                }
              },
              [_vm._v("活动时间")]
            ),
            _c("span", {
              staticClass: "suffix",
              staticStyle: {
                display: "flex",
                "box-sizing": "border-box !important",
                width: "200px",
                height: "10px",
                "border-top-left-radius": "20px",
                background: "RGBA(64, 184, 250, .5)",
                color: "rgb(255, 255, 255)",
                "font-size": "16px",
                "letter-spacing": "0.544px",
                "justify-content": "flex-end",
                float: "right",
                "margin-top": "-10px",
                "overflow-wrap": "break-word !important"
              }
            })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "padding-top": "8px",
              "padding-bottom": "8px",
              "line-height": "26px",
              color: "#2b2b2b",
              margin: "10px 0px",
              "letter-spacing": "2px",
              "font-size": "14px",
              "word-spacing": "2px"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c(
              "code",
              {
                staticStyle: {
                  "font-size": "14px",
                  "word-wrap": "break-word",
                  margin: "0 2px",
                  "background-color": "rgba(27,31,35,.05)",
                  "font-family":
                    "Operator Mono, Consolas, Monaco, Menlo, monospace",
                  "word-break": "break-all",
                  color: "#3594F7",
                  background: "RGBA(59, 170, 250, .1)",
                  padding: "0 2px",
                  "border-radius": "2px",
                  height: "21px",
                  "line-height": "22px"
                }
              },
              [_vm._v("2021-02-01")]
            ),
            _vm._v(" 至 "),
            _c(
              "code",
              {
                staticStyle: {
                  "font-size": "14px",
                  "word-wrap": "break-word",
                  margin: "0 2px",
                  "background-color": "rgba(27,31,35,.05)",
                  "font-family":
                    "Operator Mono, Consolas, Monaco, Menlo, monospace",
                  "word-break": "break-all",
                  color: "#3594F7",
                  background: "RGBA(59, 170, 250, .1)",
                  padding: "0 2px",
                  "border-radius": "2px",
                  height: "21px",
                  "line-height": "22px"
                }
              },
              [_vm._v("2021-05-02")]
            )
          ]
        ),
        _c(
          "h2",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              padding: "0px",
              "font-weight": "bold",
              color: "black",
              "font-size": "22px",
              display: "block",
              "border-bottom": "4px solid #40B8FA"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: {
                display: "flex",
                width: "20px",
                height: "20px",
                "background-size": "20px 20px",
                "background-image":
                  "url(https://files.mdnice.com/fullstack-1.png)",
                "margin-bottom": "-22px"
              }
            }),
            _c(
              "span",
              {
                staticClass: "content",
                staticStyle: {
                  display: "flex",
                  color: "#40B8FA",
                  "font-size": "20px",
                  "margin-left": "25px"
                }
              },
              [_vm._v("你能够得到什么？")]
            ),
            _c("span", {
              staticClass: "suffix",
              staticStyle: {
                display: "flex",
                "box-sizing": "border-box !important",
                width: "200px",
                height: "10px",
                "border-top-left-radius": "20px",
                background: "RGBA(64, 184, 250, .5)",
                color: "rgb(255, 255, 255)",
                "font-size": "16px",
                "letter-spacing": "0.544px",
                "justify-content": "flex-end",
                float: "right",
                "margin-top": "-10px",
                "overflow-wrap": "break-word !important"
              }
            })
          ]
        ),
        _c(
          "ol",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              "list-style-type": "decimal",
              "font-size": "15px",
              color: "#595959"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 显著提高你的刷题效率，让你少走弯路 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 掌握常见面试题的思路和解法 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 掌握常见套路，了解常见算法的本质，横向对比各种题目 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 纵向剖析一道题，多种方法不同角度解决同一题目 ")]
              )
            ])
          ]
        ),
        _c(
          "h2",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              padding: "0px",
              "font-weight": "bold",
              color: "black",
              "font-size": "22px",
              display: "block",
              "border-bottom": "4px solid #40B8FA"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: {
                display: "flex",
                width: "20px",
                height: "20px",
                "background-size": "20px 20px",
                "background-image":
                  "url(https://files.mdnice.com/fullstack-1.png)",
                "margin-bottom": "-22px"
              }
            }),
            _c(
              "span",
              {
                staticClass: "content",
                staticStyle: {
                  display: "flex",
                  color: "#40B8FA",
                  "font-size": "20px",
                  "margin-left": "25px"
                }
              },
              [_vm._v("要求")]
            ),
            _c("span", {
              staticClass: "suffix",
              staticStyle: {
                display: "flex",
                "box-sizing": "border-box !important",
                width: "200px",
                height: "10px",
                "border-top-left-radius": "20px",
                background: "RGBA(64, 184, 250, .5)",
                color: "rgb(255, 255, 255)",
                "font-size": "16px",
                "letter-spacing": "0.544px",
                "justify-content": "flex-end",
                float: "right",
                "margin-top": "-10px",
                "overflow-wrap": "break-word !important"
              }
            })
          ]
        ),
        _c(
          "ul",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              "font-size": "15px",
              color: "#595959",
              "list-style-type": "circle"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 🈲️ 不允许经常闲聊 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 🈲️ 不允许发广告，软文（只能发算法相关的技术文章） ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" ✅ 一周至少参与一次打卡 ")]
              )
            ])
          ]
        ),
        _c(
          "blockquote",
          {
            staticClass: "multiquote-1",
            staticStyle: {
              display: "block",
              "font-size": "0.9em",
              overflow: "auto",
              "overflow-scrolling": "touch",
              "padding-top": "10px",
              "padding-bottom": "10px",
              "padding-left": "20px",
              "padding-right": "10px",
              "margin-bottom": "20px",
              "margin-top": "20px",
              "text-size-adjust": "100%",
              "line-height": "1.55em",
              "font-weight": "400",
              "border-radius": "6px",
              color: "#595959",
              "font-style": "normal",
              "text-align": "left",
              "box-sizing": "inherit",
              "border-left": "none",
              border: "1px solid RGBA(64, 184, 250, .4)",
              background: "RGBA(64, 184, 250, .1)"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c(
              "span",
              {
                staticStyle: {
                  color: "RGBA(64, 184, 250, .5)",
                  "font-size": "34px",
                  "line-height": "1",
                  "font-weight": "700"
                }
              },
              [_vm._v("❝")]
            ),
            _c(
              "p",
              {
                staticStyle: {
                  "padding-top": "8px",
                  "padding-bottom": "8px",
                  "letter-spacing": "2px",
                  "font-size": "14px",
                  "word-spacing": "2px",
                  margin: "0px",
                  "line-height": "26px",
                  color: "#595959"
                }
              },
              [_vm._v(" 违反上述条件的人员会被强制清退 ")]
            ),
            _c(
              "span",
              {
                staticStyle: { float: "right", color: "RGBA(64, 184, 250, .5)" }
              },
              [_vm._v("❞")]
            )
          ]
        ),
        _c(
          "h2",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              padding: "0px",
              "font-weight": "bold",
              color: "black",
              "font-size": "22px",
              display: "block",
              "border-bottom": "4px solid #40B8FA"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: {
                display: "flex",
                width: "20px",
                height: "20px",
                "background-size": "20px 20px",
                "background-image":
                  "url(https://files.mdnice.com/fullstack-1.png)",
                "margin-bottom": "-22px"
              }
            }),
            _c(
              "span",
              {
                staticClass: "content",
                staticStyle: {
                  display: "flex",
                  color: "#40B8FA",
                  "font-size": "20px",
                  "margin-left": "25px"
                }
              },
              [_vm._v("课程大纲")]
            ),
            _c("span", {
              staticClass: "suffix",
              staticStyle: {
                display: "flex",
                "box-sizing": "border-box !important",
                width: "200px",
                height: "10px",
                "border-top-left-radius": "20px",
                background: "RGBA(64, 184, 250, .5)",
                color: "rgb(255, 255, 255)",
                "font-size": "16px",
                "letter-spacing": "0.544px",
                "justify-content": "flex-end",
                float: "right",
                "margin-top": "-10px",
                "overflow-wrap": "break-word !important"
              }
            })
          ]
        ),
        _c(
          "figure",
          {
            staticStyle: {
              margin: "0",
              "margin-top": "10px",
              "margin-bottom": "10px",
              display: "flex",
              "flex-direction": "column",
              "justify-content": "center",
              "align-items": "center"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("img", {
              staticStyle: {
                "max-width": "100%",
                "border-radius": "6px",
                display: "block",
                margin: "20px auto",
                "object-fit": "contain",
                "box-shadow": "2px 4px 7px #999"
              },
              attrs: {
                src:
                  "https://tva1.sinaimg.cn/large/007S8ZIlly1giq98aux20j30ju0qt781.jpg",
                alt: ""
              }
            })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "padding-top": "8px",
              "padding-bottom": "8px",
              "line-height": "26px",
              color: "#2b2b2b",
              margin: "10px 0px",
              "letter-spacing": "2px",
              "font-size": "14px",
              "word-spacing": "2px"
            },
            attrs: { "data-tool": "" }
          },
          [_vm._v(" 往期公开讲义： ")]
        ),
        _c(
          "ul",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              "font-size": "15px",
              color: "#595959",
              "list-style-type": "circle"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "span",
                    {
                      staticClass: "footnote-word",
                      staticStyle: { "font-weight": "normal", color: "#595959" }
                    },
                    [_vm._v("【91 算法-基础篇】双指针")]
                  ),
                  _c(
                    "sup",
                    {
                      staticClass: "footnote-ref",
                      staticStyle: {
                        "line-height": "0",
                        "font-weight": "normal",
                        color: "#595959"
                      }
                    },
                    [_vm._v("[1]")]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "span",
                    {
                      staticClass: "footnote-word",
                      staticStyle: { "font-weight": "normal", color: "#595959" }
                    },
                    [_vm._v("【91 算法-专题篇】动态规划（部分内容）")]
                  ),
                  _c(
                    "sup",
                    {
                      staticClass: "footnote-ref",
                      staticStyle: {
                        "line-height": "0",
                        "font-weight": "normal",
                        color: "#595959"
                      }
                    },
                    [_vm._v("[2]")]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "span",
                    {
                      staticClass: "footnote-word",
                      staticStyle: { "font-weight": "normal", color: "#595959" }
                    },
                    [_vm._v("【91 算法-专题篇】二分法")]
                  ),
                  _c(
                    "sup",
                    {
                      staticClass: "footnote-ref",
                      staticStyle: {
                        "line-height": "0",
                        "font-weight": "normal",
                        color: "#595959"
                      }
                    },
                    [_vm._v("[3]")]
                  )
                ]
              )
            ])
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "padding-top": "8px",
              "padding-bottom": "8px",
              "line-height": "26px",
              color: "#2b2b2b",
              margin: "10px 0px",
              "letter-spacing": "2px",
              "font-size": "14px",
              "word-spacing": "2px"
            },
            attrs: { "data-tool": "" }
          },
          [_vm._v(" 三期会对题目和讲义进行再次加工，质量会更高， 敬请期待~ ")]
        ),
        _c(
          "h3",
          {
            staticStyle: {
              padding: "0px",
              color: "black",
              "font-size": "17px",
              "font-weight": "bold",
              "text-align": "center",
              position: "relative",
              "margin-top": "20px",
              "margin-bottom": "20px"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c(
              "span",
              {
                staticClass: "content",
                staticStyle: {
                  "border-bottom": "2px solid RGBA(79, 177, 249, .65)",
                  color: "#2b2b2b",
                  "padding-bottom": "2px"
                }
              },
              [
                _c("span", {
                  staticStyle: {
                    width: "30px",
                    height: "30px",
                    display: "block",
                    "background-image":
                      "url(https://files.mdnice.com/fullstack-2.png)",
                    "background-position": "center",
                    "background-size": "30px",
                    margin: "auto",
                    opacity: "1",
                    "background-repeat": "no-repeat",
                    "margin-bottom": "-8px"
                  }
                }),
                _vm._v("自习")
              ]
            ),
            _c("span", {
              staticClass: "suffix",
              staticStyle: { display: "none" }
            })
          ]
        ),
        _c(
          "ul",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              "font-size": "15px",
              color: "#595959",
              "list-style-type": "circle"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 数据结构与算法概述 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 如何衡量算法的性能 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "span",
                    {
                      staticClass: "footnote-word",
                      staticStyle: { "font-weight": "normal", color: "#595959" }
                    },
                    [_vm._v("如何更有效率刷题 1(视频)")]
                  ),
                  _c(
                    "sup",
                    {
                      staticClass: "footnote-ref",
                      staticStyle: {
                        "line-height": "0",
                        "font-weight": "normal",
                        color: "#595959"
                      }
                    },
                    [_vm._v("[4]")]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "span",
                    {
                      staticClass: "footnote-word",
                      staticStyle: { "font-weight": "normal", color: "#595959" }
                    },
                    [_vm._v("如何更有效率刷题 2(视频)")]
                  ),
                  _c(
                    "sup",
                    {
                      staticClass: "footnote-ref",
                      staticStyle: {
                        "line-height": "0",
                        "font-weight": "normal",
                        color: "#595959"
                      }
                    },
                    [_vm._v("[5]")]
                  )
                ]
              )
            ])
          ]
        ),
        _c(
          "h3",
          {
            staticStyle: {
              padding: "0px",
              color: "black",
              "font-size": "17px",
              "font-weight": "bold",
              "text-align": "center",
              position: "relative",
              "margin-top": "20px",
              "margin-bottom": "20px"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c(
              "span",
              {
                staticClass: "content",
                staticStyle: {
                  "border-bottom": "2px solid RGBA(79, 177, 249, .65)",
                  color: "#2b2b2b",
                  "padding-bottom": "2px"
                }
              },
              [
                _c("span", {
                  staticStyle: {
                    width: "30px",
                    height: "30px",
                    display: "block",
                    "background-image":
                      "url(https://files.mdnice.com/fullstack-2.png)",
                    "background-position": "center",
                    "background-size": "30px",
                    margin: "auto",
                    opacity: "1",
                    "background-repeat": "no-repeat",
                    "margin-bottom": "-8px"
                  }
                }),
                _vm._v("基础篇（30 天）")
              ]
            ),
            _c("span", {
              staticClass: "suffix",
              staticStyle: { display: "none" }
            })
          ]
        ),
        _c(
          "ol",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              "list-style-type": "decimal",
              "font-size": "15px",
              color: "#595959"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 数组，队列，栈 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 链表 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 树与递归 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 哈希表 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 双指针 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 图（加餐） ")]
              )
            ])
          ]
        ),
        _c(
          "h3",
          {
            staticStyle: {
              padding: "0px",
              color: "black",
              "font-size": "17px",
              "font-weight": "bold",
              "text-align": "center",
              position: "relative",
              "margin-top": "20px",
              "margin-bottom": "20px"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c(
              "span",
              {
                staticClass: "content",
                staticStyle: {
                  "border-bottom": "2px solid RGBA(79, 177, 249, .65)",
                  color: "#2b2b2b",
                  "padding-bottom": "2px"
                }
              },
              [
                _c("span", {
                  staticStyle: {
                    width: "30px",
                    height: "30px",
                    display: "block",
                    "background-image":
                      "url(https://files.mdnice.com/fullstack-2.png)",
                    "background-position": "center",
                    "background-size": "30px",
                    margin: "auto",
                    opacity: "1",
                    "background-repeat": "no-repeat",
                    "margin-bottom": "-8px"
                  }
                }),
                _vm._v("专题篇（31 天）")
              ]
            ),
            _c("span", {
              staticClass: "suffix",
              staticStyle: { display: "none" }
            })
          ]
        ),
        _c(
          "ol",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              "list-style-type": "decimal",
              "font-size": "15px",
              color: "#595959"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 二分法 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 滑动窗口 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 位运算 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 背包问题 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 搜索（BFS，DFS，回溯） ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 动态规划 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 分治 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 贪心 ")]
              )
            ])
          ]
        ),
        _c(
          "h3",
          {
            staticStyle: {
              padding: "0px",
              color: "black",
              "font-size": "17px",
              "font-weight": "bold",
              "text-align": "center",
              position: "relative",
              "margin-top": "20px",
              "margin-bottom": "20px"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: { display: "none" }
            }),
            _c(
              "span",
              {
                staticClass: "content",
                staticStyle: {
                  "border-bottom": "2px solid RGBA(79, 177, 249, .65)",
                  color: "#2b2b2b",
                  "padding-bottom": "2px"
                }
              },
              [
                _c("span", {
                  staticStyle: {
                    width: "30px",
                    height: "30px",
                    display: "block",
                    "background-image":
                      "url(https://files.mdnice.com/fullstack-2.png)",
                    "background-position": "center",
                    "background-size": "30px",
                    margin: "auto",
                    opacity: "1",
                    "background-repeat": "no-repeat",
                    "margin-bottom": "-8px"
                  }
                }),
                _vm._v("进阶篇（30 天）")
              ]
            ),
            _c("span", {
              staticClass: "suffix",
              staticStyle: { display: "none" }
            })
          ]
        ),
        _c(
          "ol",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              "list-style-type": "decimal",
              "font-size": "15px",
              color: "#595959"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 堆 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 前缀树 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 并查集 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 跳表 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 剪枝技巧 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" RK 和 KMP ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 高频面试题 ")]
              )
            ])
          ]
        ),
        _c(
          "blockquote",
          {
            staticClass: "multiquote-1",
            staticStyle: {
              display: "block",
              "font-size": "0.9em",
              overflow: "auto",
              "overflow-scrolling": "touch",
              "padding-top": "10px",
              "padding-bottom": "10px",
              "padding-left": "20px",
              "padding-right": "10px",
              "margin-bottom": "20px",
              "margin-top": "20px",
              "text-size-adjust": "100%",
              "line-height": "1.55em",
              "font-weight": "400",
              "border-radius": "6px",
              color: "#595959",
              "font-style": "normal",
              "text-align": "left",
              "box-sizing": "inherit",
              "border-left": "none",
              border: "1px solid RGBA(64, 184, 250, .4)",
              background: "RGBA(64, 184, 250, .1)"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c(
              "span",
              {
                staticStyle: {
                  color: "RGBA(64, 184, 250, .5)",
                  "font-size": "34px",
                  "line-height": "1",
                  "font-weight": "700"
                }
              },
              [_vm._v("❝")]
            ),
            _c(
              "p",
              {
                staticStyle: {
                  "padding-top": "8px",
                  "padding-bottom": "8px",
                  "letter-spacing": "2px",
                  "font-size": "14px",
                  "word-spacing": "2px",
                  margin: "0px",
                  "line-height": "26px",
                  color: "#595959"
                }
              },
              [
                _vm._v(
                  " 由于可能会随着项目进行调整内容，因此章节顺序和内容可能会有变动，但变动不会很大。 "
                )
              ]
            ),
            _c(
              "span",
              {
                staticStyle: { float: "right", color: "RGBA(64, 184, 250, .5)" }
              },
              [_vm._v("❞")]
            )
          ]
        ),
        _c(
          "h2",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              padding: "0px",
              "font-weight": "bold",
              color: "black",
              "font-size": "22px",
              display: "block",
              "border-bottom": "4px solid #40B8FA"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: {
                display: "flex",
                width: "20px",
                height: "20px",
                "background-size": "20px 20px",
                "background-image":
                  "url(https://files.mdnice.com/fullstack-1.png)",
                "margin-bottom": "-22px"
              }
            }),
            _c(
              "span",
              {
                staticClass: "content",
                staticStyle: {
                  display: "flex",
                  color: "#40B8FA",
                  "font-size": "20px",
                  "margin-left": "25px"
                }
              },
              [_vm._v("游戏规则")]
            ),
            _c("span", {
              staticClass: "suffix",
              staticStyle: {
                display: "flex",
                "box-sizing": "border-box !important",
                width: "200px",
                height: "10px",
                "border-top-left-radius": "20px",
                background: "RGBA(64, 184, 250, .5)",
                color: "rgb(255, 255, 255)",
                "font-size": "16px",
                "letter-spacing": "0.544px",
                "justify-content": "flex-end",
                float: "right",
                "margin-top": "-10px",
                "overflow-wrap": "break-word !important"
              }
            })
          ]
        ),
        _c(
          "ul",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              "font-size": "15px",
              color: "#595959",
              "list-style-type": "circle"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 每天会根据课程大纲的规划，出一道相关题目。 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _vm._v(" 大家可以在指定"),
                  _c(
                    "strong",
                    {
                      staticStyle: { color: "#3594F7", "font-weight": "bold" }
                    },
                    [
                      _c("span", [_vm._v("「")]),
                      _vm._v("私有仓库"),
                      _c("span", [_vm._v("」")])
                    ]
                  ),
                  _vm._v(
                    "中打卡（不可以抄作业哦），对于不会做的题目可以在群里提问。 "
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 第二天会对前一天的题目进行讲解。 ")]
              )
            ])
          ]
        ),
        _c(
          "h2",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              padding: "0px",
              "font-weight": "bold",
              color: "black",
              "font-size": "22px",
              display: "block",
              "border-bottom": "4px solid #40B8FA"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: {
                display: "flex",
                width: "20px",
                height: "20px",
                "background-size": "20px 20px",
                "background-image":
                  "url(https://files.mdnice.com/fullstack-1.png)",
                "margin-bottom": "-22px"
              }
            }),
            _c(
              "span",
              {
                staticClass: "content",
                staticStyle: {
                  display: "flex",
                  color: "#40B8FA",
                  "font-size": "20px",
                  "margin-left": "25px"
                }
              },
              [_vm._v("奖励")]
            ),
            _c("span", {
              staticClass: "suffix",
              staticStyle: {
                display: "flex",
                "box-sizing": "border-box !important",
                width: "200px",
                height: "10px",
                "border-top-left-radius": "20px",
                background: "RGBA(64, 184, 250, .5)",
                color: "rgb(255, 255, 255)",
                "font-size": "16px",
                "letter-spacing": "0.544px",
                "justify-content": "flex-end",
                float: "right",
                "margin-top": "-10px",
                "overflow-wrap": "break-word !important"
              }
            })
          ]
        ),
        _c(
          "ul",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              "font-size": "15px",
              color: "#595959",
              "list-style-type": "circle"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _vm._v(" 对于坚持打卡满一个月的同学，可以参加抽奖，奖品包括"),
                  _c(
                    "code",
                    {
                      staticStyle: {
                        "font-size": "14px",
                        "word-wrap": "break-word",
                        margin: "0 2px",
                        "background-color": "rgba(27,31,35,.05)",
                        "font-family":
                          "Operator Mono, Consolas, Monaco, Menlo, monospace",
                        "word-break": "break-all",
                        color: "#3594F7",
                        background: "RGBA(59, 170, 250, .1)",
                        padding: "0 2px",
                        "border-radius": "2px",
                        height: "21px",
                        "line-height": "22px"
                      }
                    },
                    [_vm._v("算法模拟面试")]
                  ),
                  _vm._v("，算法相关的图书，科学上网兑换码等 ")
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 连续打卡七天可以获得补签卡一张哦 ")]
              )
            ])
          ]
        ),
        _c(
          "h2",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              padding: "0px",
              "font-weight": "bold",
              color: "black",
              "font-size": "22px",
              display: "block",
              "border-bottom": "4px solid #40B8FA"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: {
                display: "flex",
                width: "20px",
                height: "20px",
                "background-size": "20px 20px",
                "background-image":
                  "url(https://files.mdnice.com/fullstack-1.png)",
                "margin-bottom": "-22px"
              }
            }),
            _c(
              "span",
              {
                staticClass: "content",
                staticStyle: {
                  display: "flex",
                  color: "#40B8FA",
                  "font-size": "20px",
                  "margin-left": "25px"
                }
              },
              [_vm._v("冲鸭")]
            ),
            _c("span", {
              staticClass: "suffix",
              staticStyle: {
                display: "flex",
                "box-sizing": "border-box !important",
                width: "200px",
                height: "10px",
                "border-top-left-radius": "20px",
                background: "RGBA(64, 184, 250, .5)",
                color: "rgb(255, 255, 255)",
                "font-size": "16px",
                "letter-spacing": "0.544px",
                "justify-content": "flex-end",
                float: "right",
                "margin-top": "-10px",
                "overflow-wrap": "break-word !important"
              }
            })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "padding-top": "8px",
              "padding-bottom": "8px",
              "line-height": "26px",
              color: "#2b2b2b",
              margin: "10px 0px",
              "letter-spacing": "2px",
              "font-size": "14px",
              "word-spacing": "2px"
            },
            attrs: { "data-tool": "" }
          },
          [
            _vm._v(" 采用 微信群的方式进行，"),
            _c(
              "code",
              {
                staticStyle: {
                  "font-size": "14px",
                  "word-wrap": "break-word",
                  margin: "0 2px",
                  "background-color": "rgba(27,31,35,.05)",
                  "font-family":
                    "Operator Mono, Consolas, Monaco, Menlo, monospace",
                  "word-break": "break-all",
                  color: "#3594F7",
                  background: "RGBA(59, 170, 250, .1)",
                  padding: "0 2px",
                  "border-radius": "2px",
                  height: "21px",
                  "line-height": "22px"
                }
              },
              [_vm._v("前 50 个进群的小伙伴免费哦 ~")]
            ),
            _vm._v("，50 名之后的小伙伴采取阶梯收费的形式。 ")
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "padding-top": "8px",
              "padding-bottom": "8px",
              "line-height": "26px",
              color: "#2b2b2b",
              margin: "10px 0px",
              "letter-spacing": "2px",
              "font-size": "14px",
              "word-spacing": "2px"
            },
            attrs: { "data-tool": "" }
          },
          [_vm._v(" 具体收费标准： ")]
        ),
        _c(
          "ul",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              "font-size": "15px",
              color: "#595959",
              "list-style-type": "circle"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 前 50 人免费 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 51 - 100 收费 10 元 ")]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [_vm._v(" 101 - 500 收费 30 元 ")]
              )
            ])
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "padding-top": "8px",
              "padding-bottom": "8px",
              "line-height": "26px",
              color: "#2b2b2b",
              margin: "10px 0px",
              "letter-spacing": "2px",
              "font-size": "14px",
              "word-spacing": "2px"
            },
            attrs: { "data-tool": "" }
          },
          [
            _vm._v(
              " 现在已经超过 100 名同学报名参加啦，因此需要发 30 元红包给我，拉你进群，我的微信号：DevelopeEngineer "
            )
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "padding-top": "8px",
              "padding-bottom": "8px",
              "line-height": "26px",
              color: "#2b2b2b",
              margin: "10px 0px",
              "letter-spacing": "2px",
              "font-size": "14px",
              "word-spacing": "2px"
            },
            attrs: { "data-tool": "" }
          },
          [
            _vm._v(
              " 熟悉 91 的小伙伴可能发现第三期涨价了。 其实涨价的目的是提供更好的服务，包括但不限于发放奖品，完善讲义，购买服务器（后期考虑），还望大家理解。 如果你经济实在困难可以参加下面的返现活动哦。 "
            )
          ]
        ),
        _c(
          "h2",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              padding: "0px",
              "font-weight": "bold",
              color: "black",
              "font-size": "22px",
              display: "block",
              "border-bottom": "4px solid #40B8FA"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: {
                display: "flex",
                width: "20px",
                height: "20px",
                "background-size": "20px 20px",
                "background-image":
                  "url(https://files.mdnice.com/fullstack-1.png)",
                "margin-bottom": "-22px"
              }
            }),
            _c(
              "span",
              {
                staticClass: "content",
                staticStyle: {
                  display: "flex",
                  color: "#40B8FA",
                  "font-size": "20px",
                  "margin-left": "25px"
                }
              },
              [_vm._v("分享返现")]
            ),
            _c("span", {
              staticClass: "suffix",
              staticStyle: {
                display: "flex",
                "box-sizing": "border-box !important",
                width: "200px",
                height: "10px",
                "border-top-left-radius": "20px",
                background: "RGBA(64, 184, 250, .5)",
                color: "rgb(255, 255, 255)",
                "font-size": "16px",
                "letter-spacing": "0.544px",
                "justify-content": "flex-end",
                float: "right",
                "margin-top": "-10px",
                "overflow-wrap": "break-word !important"
              }
            })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "padding-top": "8px",
              "padding-bottom": "8px",
              "line-height": "26px",
              color: "#2b2b2b",
              margin: "10px 0px",
              "letter-spacing": "2px",
              "font-size": "14px",
              "word-spacing": "2px"
            },
            attrs: { "data-tool": "" }
          },
          [
            _vm._v(
              " 如果你没有抢到免费的学习机会也不要气馁。我们贴心地为大家搞了"
            ),
            _c(
              "strong",
              { staticStyle: { color: "#3594F7", "font-weight": "bold" } },
              [
                _c("span", [_vm._v("「")]),
                _vm._v("分享返现活动"),
                _c("span", [_vm._v("」")])
              ]
            ),
            _vm._v("，手慢照样可以免费参加哦~ ")
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "padding-top": "8px",
              "padding-bottom": "8px",
              "line-height": "26px",
              color: "#2b2b2b",
              margin: "10px 0px",
              "letter-spacing": "2px",
              "font-size": "14px",
              "word-spacing": "2px"
            },
            attrs: { "data-tool": "" }
          },
          [_vm._v(" 活动规则： ")]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "padding-top": "8px",
              "padding-bottom": "8px",
              "line-height": "26px",
              color: "#2b2b2b",
              margin: "10px 0px",
              "letter-spacing": "2px",
              "font-size": "14px",
              "word-spacing": "2px"
            },
            attrs: { "data-tool": "" }
          },
          [
            _vm._v(" 发送宣传海报到你的朋友圈不屏蔽好友保留三天，"),
            _c(
              "strong",
              { staticStyle: { color: "#3594F7", "font-weight": "bold" } },
              [
                _c("span", [_vm._v("「")]),
                _vm._v("三天之后"),
                _c("span", [_vm._v("」")])
              ]
            ),
            _vm._v(
              "加 lucifer 微信好友（微信号：DevelopeEngineer）进行验证，验证通过"
            ),
            _c(
              "strong",
              { staticStyle: { color: "#3594F7", "font-weight": "bold" } },
              [
                _c("span", [_vm._v("「")]),
                _vm._v("全额"),
                _c("span", [_vm._v("」")])
              ]
            ),
            _vm._v("返现。 ")
          ]
        ),
        _c(
          "blockquote",
          {
            staticClass: "multiquote-1",
            staticStyle: {
              display: "block",
              "font-size": "0.9em",
              overflow: "auto",
              "overflow-scrolling": "touch",
              "padding-top": "10px",
              "padding-bottom": "10px",
              "padding-left": "20px",
              "padding-right": "10px",
              "margin-bottom": "20px",
              "margin-top": "20px",
              "text-size-adjust": "100%",
              "line-height": "1.55em",
              "font-weight": "400",
              "border-radius": "6px",
              color: "#595959",
              "font-style": "normal",
              "text-align": "left",
              "box-sizing": "inherit",
              "border-left": "none",
              border: "1px solid RGBA(64, 184, 250, .4)",
              background: "RGBA(64, 184, 250, .1)"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c(
              "span",
              {
                staticStyle: {
                  color: "RGBA(64, 184, 250, .5)",
                  "font-size": "34px",
                  "line-height": "1",
                  "font-weight": "700"
                }
              },
              [_vm._v("❝")]
            ),
            _c(
              "p",
              {
                staticStyle: {
                  "padding-top": "8px",
                  "padding-bottom": "8px",
                  "letter-spacing": "2px",
                  "font-size": "14px",
                  "word-spacing": "2px",
                  margin: "0px",
                  "line-height": "26px",
                  color: "#595959"
                }
              },
              [
                _vm._v(
                  " 不到三天就没必要联系我验证了，必须不屏蔽好友满三天才可以验证。 "
                )
              ]
            ),
            _c(
              "span",
              {
                staticStyle: { float: "right", color: "RGBA(64, 184, 250, .5)" }
              },
              [_vm._v("❞")]
            )
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "padding-top": "8px",
              "padding-bottom": "8px",
              "line-height": "26px",
              color: "#2b2b2b",
              margin: "10px 0px",
              "letter-spacing": "2px",
              "font-size": "14px",
              "word-spacing": "2px"
            },
            attrs: { "data-tool": "" }
          },
          [
            _vm._v(" 朋友圈文案统一为： "),
            _c(
              "strong",
              { staticStyle: { color: "#3594F7", "font-weight": "bold" } },
              [
                _c("span", [_vm._v("「")]),
                _vm._v(
                  "91 天，遇见更好的自己。发送本海报到朋友圈，不屏蔽好友保留三天即可免费学习（文案需保留）。快扫描下方二维码报名吧！"
                ),
                _c("span", [_vm._v("」")])
              ]
            )
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "padding-top": "8px",
              "padding-bottom": "8px",
              "line-height": "26px",
              color: "#2b2b2b",
              margin: "10px 0px",
              "letter-spacing": "2px",
              "font-size": "14px",
              "word-spacing": "2px"
            },
            attrs: { "data-tool": "" }
          },
          [_vm._v(" 海报： ")]
        ),
        _c(
          "figure",
          {
            staticStyle: {
              margin: "0",
              "margin-top": "10px",
              "margin-bottom": "10px",
              display: "flex",
              "flex-direction": "column",
              "justify-content": "center",
              "align-items": "center"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("img", {
              staticStyle: {
                "max-width": "100%",
                "border-radius": "6px",
                display: "block",
                margin: "20px auto",
                "object-fit": "contain",
                "box-shadow": "2px 4px 7px #999"
              },
              attrs: {
                src:
                  "https://tva1.sinaimg.cn/large/008eGmZEly1gmv3y6bkxtj30u01hc7wh.jpg",
                alt: ""
              }
            })
          ]
        ),
        _c(
          "p",
          {
            staticStyle: {
              "padding-top": "8px",
              "padding-bottom": "8px",
              "line-height": "26px",
              color: "#2b2b2b",
              margin: "10px 0px",
              "letter-spacing": "2px",
              "font-size": "14px",
              "word-spacing": "2px"
            },
            attrs: { "data-tool": "" }
          },
          [_vm._v(" 朋友圈分享海报示例： ")]
        ),
        _c(
          "figure",
          {
            staticStyle: {
              margin: "0",
              "margin-top": "10px",
              "margin-bottom": "10px",
              display: "flex",
              "flex-direction": "column",
              "justify-content": "center",
              "align-items": "center"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("img", {
              staticStyle: {
                "max-width": "100%",
                "border-radius": "6px",
                display: "block",
                margin: "20px auto",
                "object-fit": "contain",
                "box-shadow": "2px 4px 7px #999"
              },
              attrs: {
                src:
                  "https://tva1.sinaimg.cn/large/008eGmZEly1gmv4gaxao7j30u01u0418.jpg",
                alt: ""
              }
            })
          ]
        ),
        _c(
          "h2",
          {
            staticStyle: {
              "margin-top": "30px",
              "margin-bottom": "15px",
              padding: "0px",
              "font-weight": "bold",
              color: "black",
              "font-size": "22px",
              display: "block",
              "border-bottom": "4px solid #40B8FA"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("span", {
              staticClass: "prefix",
              staticStyle: {
                display: "flex",
                width: "20px",
                height: "20px",
                "background-size": "20px 20px",
                "background-image":
                  "url(https://files.mdnice.com/fullstack-1.png)",
                "margin-bottom": "-22px"
              }
            }),
            _c(
              "span",
              {
                staticClass: "content",
                staticStyle: {
                  display: "flex",
                  color: "#40B8FA",
                  "font-size": "20px",
                  "margin-left": "25px"
                }
              },
              [_vm._v("FAQ")]
            ),
            _c("span", {
              staticClass: "suffix",
              staticStyle: {
                display: "flex",
                "box-sizing": "border-box !important",
                width: "200px",
                height: "10px",
                "border-top-left-radius": "20px",
                background: "RGBA(64, 184, 250, .5)",
                color: "rgb(255, 255, 255)",
                "font-size": "16px",
                "letter-spacing": "0.544px",
                "justify-content": "flex-end",
                float: "right",
                "margin-top": "-10px",
                "overflow-wrap": "break-word !important"
              }
            })
          ]
        ),
        _c(
          "ul",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              "font-size": "15px",
              color: "#595959",
              "list-style-type": "circle"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [_vm._v(" Q：第三期和前两期内容一样吗？ ")]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [
                      _vm._v(" A：我们会不断进行迭代，比如第二期我们就制作了"),
                      _c(
                        "strong",
                        {
                          staticStyle: {
                            color: "#3594F7",
                            "font-weight": "bold"
                          }
                        },
                        [
                          _c("span", [_vm._v("「")]),
                          _vm._v("电子书"),
                          _c("span", [_vm._v("」")])
                        ]
                      ),
                      _vm._v(
                        "给大家，方便大家阅读。此外，每一期讲义和题解都会不断更新，当然我们也会根据大家的反馈进行调整。 "
                      )
                    ]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [_vm._v(" Q：零基础人群可以学习吗？ ")]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [_vm._v(" A：只要掌握一门编程语言就可以学习。 ")]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [_vm._v(" Q：课程是用什么语言教学的？ ")]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [
                      _vm._v(
                        " A：Java， Python，JS 都可能，不过算法涉及到的语言都比较基础，即使不了解，也完全可以学习。另外算法重要的是思想， 语言不重要，思路理解了比什么都重要。 "
                      )
                    ]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [_vm._v(" Q：讲义和题解能够观看多久？ ")]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [
                      _vm._v(
                        " A:为了有效督促学习，如果大家被违反规则被清退（具体见上方的规则部分），则不可以继续观看，否则可以长期观看。 "
                      )
                    ]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [_vm._v(" Q：我该怎么学习？ ")]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [
                      _vm._v(
                        " A：每一个小节开始之前都会提前把讲义公布到仓库，大家可以关注一下，提前预习。每天都会有一道题，第二天会公布前一天的题解，所有题解和讲义都在仓库中查看。另外我还介绍了一些学习方法， 具体参考上方的视频。 "
                      )
                    ]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [_vm._v(" Q：我该怎么打卡？ ")]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [
                      _vm._v(
                        " A：打卡只需要在对应讲义新建的 issue 下留言即可，注意格式要求。格式模板在先导篇哦~ "
                      )
                    ]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [_vm._v(" Q: 只能当天打卡吗？ 如果一周补打卡算吗？ ")]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [
                      _vm._v(
                        " A: 是的。必须当天才能打卡，比如第七天的题， 那么只有那一天打卡才算打卡成功。如果你连续打卡七天可以获取一张补签卡，补签卡是虚拟计算用的（不会实际发放），每月结束我们会统计当月满勤的同学，如果你不满勤，但是使用补签卡后满勤也是可以的。也就是说"
                      ),
                      _c(
                        "strong",
                        {
                          staticStyle: {
                            color: "#3594F7",
                            "font-weight": "bold"
                          }
                        },
                        [
                          _c("span", [_vm._v("「")]),
                          _vm._v(
                            "必须当天打卡，需要补卡的必须有补签卡，补签卡的获得方式是连续打卡七天。"
                          ),
                          _c("span", [_vm._v("」")])
                        ]
                      )
                    ]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [_vm._v(" Q：微信群的作用是什么？ ")]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [
                      _vm._v(
                        " A：重要信息都在群公告和仓库，大家注意这两个信息渠道即可。微信群用来交流一下简单的，容易回答的问题。一些复杂的问题大家可以提 issue。 "
                      )
                    ]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [
                      _vm._v(
                        " Q：虽然你这么说，但是我还是不想错过微信群的重要信息怎么办？ "
                      )
                    ]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [
                      _vm._v(
                        " A：重要信息在仓库和群公告。如果大家还是怕错过重要群信息，可以按如下操作，仅看群主即可。 "
                      )
                    ]
                  )
                ]
              )
            ])
          ]
        ),
        _c(
          "ol",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              "list-style-type": "decimal",
              "font-size": "15px",
              color: "#595959"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [
                      _vm._v(
                        " 首先点击微信群右上角的按钮进入群设置，并翻到最下方。 "
                      )
                    ]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [_vm._v(" 点击“查找聊天内容”，然后进入“按群成员查找”。 ")]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [_vm._v(" 找到需要查找聊天记录的人，比如 lucifer。 ")]
                  )
                ]
              )
            ])
          ]
        ),
        _c(
          "ul",
          {
            staticStyle: {
              "margin-top": "8px",
              "margin-bottom": "8px",
              "padding-left": "25px",
              "font-size": "15px",
              color: "#595959",
              "list-style-type": "circle"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [_vm._v(" Q：Github 收到很多邮件，怎么取消？ ")]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [
                      _vm._v(
                        " A：参考 https://www.bpteach.com/knowledge-base/1047564/ "
                      )
                    ]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [_vm._v(" Q：仓库在哪里？怎么进？ ")]
                  )
                ]
              )
            ]),
            _c("li", [
              _c(
                "section",
                {
                  staticStyle: {
                    "margin-top": "5px",
                    "margin-bottom": "5px",
                    "line-height": "26px",
                    "text-align": "left",
                    "font-size": "14px",
                    "font-weight": "normal",
                    color: "#595959"
                  }
                },
                [
                  _c(
                    "p",
                    {
                      staticStyle: {
                        "padding-top": "8px",
                        "padding-bottom": "8px",
                        "line-height": "26px",
                        color: "#2b2b2b",
                        margin: "10px 0px",
                        "letter-spacing": "2px",
                        "font-size": "14px",
                        "word-spacing": "2px"
                      }
                    },
                    [
                      _vm._v(
                        " A：进群之后会在活动开始之前（2021-02-01），通过群公告的形式通知大家，大家耐心等待即可。 "
                      )
                    ]
                  )
                ]
              )
            ])
          ]
        ),
        _c(
          "h3",
          {
            staticClass: "footnotes-sep",
            staticStyle: {
              padding: "0px",
              color: "black",
              "font-size": "17px",
              "font-weight": "bold",
              "text-align": "center",
              position: "relative",
              "margin-top": "20px",
              "margin-bottom": "20px"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c(
              "span",
              {
                staticStyle: {
                  color: "#595959",
                  "letter-spacing": "1px",
                  "border-bottom": "2px solid RGBA(64, 184, 250, 1)",
                  display: "inline",
                  background:
                    "linear-gradient(white 60%, RGBA(64, 184, 250, .4) 40%)",
                  "font-size": "20px"
                }
              },
              [_vm._v("Reference")]
            )
          ]
        ),
        _c(
          "section",
          {
            staticClass: "footnotes",
            staticStyle: {
              background: "RGBA(53, 148, 247, .4)",
              padding: "20px 20px 20px 20px",
              "font-size": "14px",
              "border-radius": "6px",
              border: "1px solid RGBA(53, 148, 247, 1)"
            },
            attrs: { "data-tool": "" }
          },
          [
            _c(
              "span",
              {
                staticClass: "footnote-item",
                staticStyle: { display: "flex" },
                attrs: { id: "fn1" }
              },
              [
                _c(
                  "span",
                  {
                    staticClass: "footnote-num",
                    staticStyle: {
                      display: "inline",
                      width: "10%",
                      background: "none",
                      "font-size": "80%",
                      opacity: "0.6",
                      "line-height": "26px",
                      "font-family":
                        "ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif"
                    }
                  },
                  [_vm._v("[1] ")]
                ),
                _c(
                  "p",
                  {
                    staticStyle: {
                      "padding-top": "8px",
                      "padding-bottom": "8px",
                      "letter-spacing": "2px",
                      "word-spacing": "2px",
                      display: "inline",
                      "font-size": "14px",
                      width: "calc(100%-50)",
                      padding: "0px",
                      margin: "0",
                      "line-height": "26px",
                      "word-break": "break-all",
                      color: "#595959",
                      "font-weight": "bold"
                    }
                  },
                  [
                    _vm._v(" 【91 算法-基础篇】双指针: "),
                    _c(
                      "em",
                      {
                        staticStyle: {
                          "font-style": "normal",
                          "font-size": "14px",
                          color: "#595959",
                          display: "block",
                          "font-weight": "normal"
                        }
                      },
                      [
                        _vm._v(
                          "https://lucifer.ren/blog/2020/05/26/91algo-basic-05.two-pointer/"
                        )
                      ]
                    )
                  ]
                )
              ]
            ),
            _c(
              "span",
              {
                staticClass: "footnote-item",
                staticStyle: { display: "flex" },
                attrs: { id: "fn2" }
              },
              [
                _c(
                  "span",
                  {
                    staticClass: "footnote-num",
                    staticStyle: {
                      display: "inline",
                      width: "10%",
                      background: "none",
                      "font-size": "80%",
                      opacity: "0.6",
                      "line-height": "26px",
                      "font-family":
                        "ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif"
                    }
                  },
                  [_vm._v("[2] ")]
                ),
                _c(
                  "p",
                  {
                    staticStyle: {
                      "padding-top": "8px",
                      "padding-bottom": "8px",
                      "letter-spacing": "2px",
                      "word-spacing": "2px",
                      display: "inline",
                      "font-size": "14px",
                      width: "calc(100%-50)",
                      padding: "0px",
                      margin: "0",
                      "line-height": "26px",
                      "word-break": "break-all",
                      color: "#595959",
                      "font-weight": "bold"
                    }
                  },
                  [
                    _vm._v(" 【91 算法-专题篇】动态规划（部分内容）: "),
                    _c(
                      "em",
                      {
                        staticStyle: {
                          "font-style": "normal",
                          "font-size": "14px",
                          color: "#595959",
                          display: "block",
                          "font-weight": "normal"
                        }
                      },
                      [
                        _vm._v(
                          "https://lucifer.ren/blog/2020/08/27/91algo-dp-lecture/"
                        )
                      ]
                    )
                  ]
                )
              ]
            ),
            _c(
              "span",
              {
                staticClass: "footnote-item",
                staticStyle: { display: "flex" },
                attrs: { id: "fn3" }
              },
              [
                _c(
                  "span",
                  {
                    staticClass: "footnote-num",
                    staticStyle: {
                      display: "inline",
                      width: "10%",
                      background: "none",
                      "font-size": "80%",
                      opacity: "0.6",
                      "line-height": "26px",
                      "font-family":
                        "ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif"
                    }
                  },
                  [_vm._v("[3] ")]
                ),
                _c(
                  "p",
                  {
                    staticStyle: {
                      "padding-top": "8px",
                      "padding-bottom": "8px",
                      "letter-spacing": "2px",
                      "word-spacing": "2px",
                      display: "inline",
                      "font-size": "14px",
                      width: "calc(100%-50)",
                      padding: "0px",
                      margin: "0",
                      "line-height": "26px",
                      "word-break": "break-all",
                      color: "#595959",
                      "font-weight": "bold"
                    }
                  },
                  [
                    _vm._v(" 【91 算法-专题篇】二分法: "),
                    _c(
                      "em",
                      {
                        staticStyle: {
                          "font-style": "normal",
                          "font-size": "14px",
                          color: "#595959",
                          display: "block",
                          "font-weight": "normal"
                        }
                      },
                      [
                        _vm._v(
                          "https://github.com/azl397985856/leetcode/blob/master/91/binary-search.md"
                        )
                      ]
                    )
                  ]
                )
              ]
            ),
            _c(
              "span",
              {
                staticClass: "footnote-item",
                staticStyle: { display: "flex" },
                attrs: { id: "fn4" }
              },
              [
                _c(
                  "span",
                  {
                    staticClass: "footnote-num",
                    staticStyle: {
                      display: "inline",
                      width: "10%",
                      background: "none",
                      "font-size": "80%",
                      opacity: "0.6",
                      "line-height": "26px",
                      "font-family":
                        "ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif"
                    }
                  },
                  [_vm._v("[4] ")]
                ),
                _c(
                  "p",
                  {
                    staticStyle: {
                      "padding-top": "8px",
                      "padding-bottom": "8px",
                      "letter-spacing": "2px",
                      "word-spacing": "2px",
                      display: "inline",
                      "font-size": "14px",
                      width: "calc(100%-50)",
                      padding: "0px",
                      margin: "0",
                      "line-height": "26px",
                      "word-break": "break-all",
                      color: "#595959",
                      "font-weight": "bold"
                    }
                  },
                  [
                    _vm._v(" 如何更有效率刷题 1(视频)]: "),
                    _c(
                      "em",
                      {
                        staticStyle: {
                          "font-style": "normal",
                          "font-size": "14px",
                          color: "#595959",
                          display: "block",
                          "font-weight": "normal"
                        }
                      },
                      [_vm._v("https://www.bilibili.com/video/BV17t4y1i71G")]
                    )
                  ]
                )
              ]
            ),
            _c(
              "span",
              {
                staticClass: "footnote-item",
                staticStyle: { display: "flex" },
                attrs: { id: "fn5" }
              },
              [
                _c(
                  "span",
                  {
                    staticClass: "footnote-num",
                    staticStyle: {
                      display: "inline",
                      width: "10%",
                      background: "none",
                      "font-size": "80%",
                      opacity: "0.6",
                      "line-height": "26px",
                      "font-family":
                        "ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif"
                    }
                  },
                  [_vm._v("[5] ")]
                ),
                _c(
                  "p",
                  {
                    staticStyle: {
                      "padding-top": "8px",
                      "padding-bottom": "8px",
                      "letter-spacing": "2px",
                      "word-spacing": "2px",
                      display: "inline",
                      "font-size": "14px",
                      width: "calc(100%-50)",
                      padding: "0px",
                      margin: "0",
                      "line-height": "26px",
                      "word-break": "break-all",
                      color: "#595959",
                      "font-weight": "bold"
                    }
                  },
                  [
                    _vm._v(" 如何更有效率刷题 2(视频): "),
                    _c(
                      "em",
                      {
                        staticStyle: {
                          "font-style": "normal",
                          "font-size": "14px",
                          color: "#595959",
                          display: "block",
                          "font-weight": "normal"
                        }
                      },
                      [_vm._v("https://www.bilibili.com/video/BV1pa4y1s7g2")]
                    )
                  ]
                )
              ]
            )
          ]
        )
      ]
    )
  }
]
render._withStripped = true

export { render, staticRenderFns }"}]}